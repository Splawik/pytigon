[
    {
        "app_main": null,
        "autor_email": null,
        "autor_name": null,
        "autor_www": null,
        "custom_tags": "",
        "desktop_gui_type": "auto",
        "doc": null,
        "encoded_zip": null,
        "ext_apps": null,
        "git_repository": "https://git.pytigon.cloud/pytigon/_schwiki.git",
        "gui_elements": "toolbar(file(exit),clipboard)",
        "gui_type": "modern",
        "icon": "None",
        "icon_code": null,
        "icon_size": "1",
        "install_file": null,
        "jsondata": null,
        "license_file": null,
        "login_required": false,
        "main": false,
        "main_view": true,
        "name": "_schwiki",
        "plugins": null,
        "public": true,
        "readme_file": null,
        "smartfon_gui_type": "auto",
        "start_page": null,
        "tablet_gui_type": "auto",
        "title": "Wiki",
        "user_app_template": "###> schwiki/__init__.py\n\nfrom django.utils.translation import gettext_lazy as _\n\ndef AdditionalUrls(prj_name, lang):\n    from .models import Page\n    ret = []\n    ret_buf = []\n    for object in Page.objects.filter(published=True):        \n        if object.menu:\n            if object.prj_name and object.prj_name != prj_name:\n                continue\n            menu_path=object.menu.split('/')            \n            module_title = \"\"\n            app_name = \"\"\n            app_name = menu_path[-1]\n            if len(menu_path)>1:\n                module_title = menu_path[0]\n            if object.menu_icon:\n                icon = object.menu_icon\n            else:\n                icon = 'client://apps/utilities-terminal.png'                    \n            if object.menu_position:\n                lp = \"%02d\" % object.menu_position\n            else:\n                lp = '00'\n            ret_buf.append((lp, (\"schwiki/\"+object.subject+\"/\"+object.name+\"/view/?schtml=1\", object.description, object.rights_group, icon, module_title, _(module_title), app_name, _(app_name))))\n    if ret_buf:        \n        buf = sorted(ret_buf, key=lambda pos: pos[0])  \n        for pos in buf:\n            ret.append(pos[1])\n        return ret\n    else:\n        return []\n        ",
        "user_param": "",
        "version": "latest"
    },
    [
        [
            {
                "consumer_code": null,
                "doc": null,
                "icon": null,
                "icon_code": null,
                "icon_size": "1",
                "index": null,
                "jsondata": null,
                "model_code": "from django.template import RequestContext,Context, Template\nimport markdown\nfrom pytigon_lib.schdjangoext.django_ihtml import ihtml_to_html\nfrom pytigon_lib.schtools.wiki import wikify, wiki_from_str, make_href\nfrom pytigon_lib.schtools.tools import norm_indent\nfrom django.template.loader import select_template\nfrom datetime import datetime\nfrom collections import namedtuple\nfrom pytigon_lib.schindent.indent_markdown import IndentMarkdownProcessor, REG_OBJ_RENDERER\n\n\ntemplate_content = \"\"\"\n{# -*- coding: utf-8 -*- #}\n{%% load exfiltry %%}\n{%% load exsyntax %%}\n%s\n\"\"\"\n\ndef _get_wiki_object(page, buf, name, paragraf):\n    name0 = name.split('_')[0]\n    conf = None\n    x = PageObjectsConf.objects.filter(name=name0)\n    if len(x) > 0:\n        conf = x[0]\n        d = page.get_json_data()\n        if d and name in d:\n            c = d[name]\n        else:\n            c = {}\n\n        inline_content = norm_indent(buf)\n        if conf.inline_wiki:\n            inline_content = html_from_wiki(page, inline_content)\n\n        context = {'param': c, 'inline_content': inline_content, 'object': conf, 'page': page, 'paragraf': paragraf, 'name': name, }\n        if conf.view_dict:\n            exec(conf.view_dict)\n            context = locals()['get_view_dict'](context)\n\n        template_name1 = (conf.app + \"/\" + conf.name).lower() + \"_wikiobj_view.html\"\n        template_name2 = \"schwiki/wikiobj_view.html\"\n\n        t = select_template([template_name1, template_name2, ])\n\n        return t.render(context).replace('[{', '{{').replace('}]', '}}').replace('[%', '{%').replace('%]', '%}')\n    else:\n        return \"\"\n\n\ndef _get_markdown_object(buf):\n    return markdown.markdown(\"\\n\".join(buf), extensions=['abbr', 'attr_list', 'def_list', 'fenced_code', 'footnotes', 'md_in_html', 'tables', 'admonition', 'codehilite'])\n\n\ndef html_from_wiki(page, wiki_str):\n    document = []\n    paragraf = []\n    buf = []\n    in_wiki_object = False\n    name = \"\"\n\n    paragraf_prefix = None\n    paragraf_suffix = None\n    section_close_elements = []\n    document_close_elements = []\n\n    def write_papragraf():\n        nonlocal in_wiki_object, buf, paragraf_prefix, paragraf_suffix, document, paragraf, page\n\n        if in_wiki_object:\n            x = _get_wiki_object(page, buf, name, [paragraf_prefix, paragraf_suffix])\n            document.append(x)\n            buf = []\n        else:\n            if buf:\n                paragraf.append((buf, True))\n                buf = []\n\n            if paragraf:\n                if paragraf_prefix:\n                    x = paragraf_prefix\n                else:\n                    x = \"\"\n                for pos in paragraf:\n                    if pos[1]:\n                        x += _get_markdown_object(pos[0])\n                    else:\n                        x += pos[0]\n\n                if paragraf_suffix:\n                    x += paragraf_suffix\n\n                document.append(x)\n\n                paragraf = []\n\n    def write_section():\n        nonlocal section_close_elements, document\n        if section_close_elements:\n            document.append(\"\".join(list(reversed(section_close_elements))))\n        section_close_elements = []\n\n    def write_document():\n        nonlocal document_close_elements, document\n        if document_close_elements:\n            document.append(\"\".join(list(reversed(document_close_elements))))\n        document_close_elements = []\n\n    lines = wiki_str.replace('\\r', '').split('\\n')\n    for line in lines:\n        if in_wiki_object:\n            if line.startswith(' ') or line.startswith('\\t') or not line:\n                buf.append(line)\n                continue\n            else:\n                x = _get_wiki_object(page, buf, name, [paragraf_prefix, paragraf_suffix])\n\n                if x.startswith('@@@'):\n                    if '|||' in x:\n                        y  = x[3:].split('|||')\n                        paragraf_prefix = y[0]\n                        paragraf_suffix = y[1]\n                    else:\n                        paragraf_prefix = x[3:]\n                        paragraf_suffix = \"\"\n                else:\n                    if '|||' in x:\n                        if '||||' in x:\n                            y = x.split('||||')\n                            paragraf.append((y[0], False))\n                            document_close_elements.append(y[1])\n                        else:\n                            y = x.split('|||')\n                            paragraf.append((y[0], False))\n                            section_close_elements.append(y[1])\n                    else:\n                        paragraf.append((x, False))\n\n                buf = []\n                in_wiki_object = False\n\n        if line.startswith('@'):\n            if buf:\n                #x = _get_markdown_object(buf)\n                paragraf.append((buf, True))\n            buf = []\n            in_wiki_object = True\n            name = line.split(':')[0][1:].strip()\n        elif line.startswith('...') or line.startswith('+++'):\n            write_papragraf()\n            if line.startswith('+++'):\n                write_section()\n                paragraf_prefix = \"\"\n                paragraf_suffix = \"\"\n        else:\n            buf.append(line)\n\n    write_papragraf()\n    write_section()\n    write_document()\n\n    return \"\\n\".join(document)\n",
                "module_title": "main tools",
                "name": "schwiki",
                "perms": true,
                "tasks_code": "",
                "title": "Wiki",
                "urls_code": null,
                "user_param": "",
                "view_code": "from .models import Page\nfrom pytigon_lib.schdjangoext.fastform import form_from_str\nfrom django.template.loader import select_template\nfrom django.http import JsonResponse\nfrom pytigon_lib.schviews import make_path\nfrom pytigon_lib.schtools.schjson import json_loads, json_dumps\n\nfrom pytigon_lib.schtools.tools import bencode, bdecode, is_null\n\nfrom django.views.decorators.cache import cache_page\nfrom django.core.cache import cache\n\nfrom schwiki.applib import makdown_obj_simple, markdown_obj_subblocks\nfrom pytigon_lib.schindent.indent_markdown import get_obj_renderer\n\n\ntemplate_start_wiki = \"\"\"\n{# -*- coding: utf-8 -*- #}\n\n{% extends \"schwiki/wiki_view.html\" %}\n\n{% load exfiltry %}\n{% load exsyntax %}\n\n\"\"\"\n\ntemplate_start = \"\"\"\n{# -*- coding: utf-8 -*- #}\n\n{%% extends \"schwiki/%s\" %%}\n\n{%% load exfiltry %%}\n{%% load exsyntax %%}\n\"\"\"\n\ntemplate_simple = \"\"\"\n{# -*- coding: utf-8 -*- #}\n\n{% load exfiltry %}\n{% load exsyntax %}\n\"\"\"\n"
            },
            [
                [
                    {
                        "base_table": null,
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "PageObjectsConf",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "filter_fields = {\n    'app': ['exact', 'icontains', 'istartswith'],\n    'name': ['exact', 'icontains', 'istartswith'],\n}\n\ndef __str__(self):\n    return self.name\n",
                        "url_params": null,
                        "verbose_name": "Page objects configurations",
                        "verbose_name_plural": "Page objects configurations"
                    },
                    [
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Application",
                            "editable": true,
                            "help_text": null,
                            "name": "app",
                            "null": false,
                            "param": "max_length=32",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Name",
                            "editable": true,
                            "help_text": null,
                            "name": "name",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Description",
                            "editable": true,
                            "help_text": null,
                            "name": "description",
                            "null": true,
                            "param": "max_length=128",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Inline editing",
                            "editable": true,
                            "help_text": null,
                            "name": "inline_editing",
                            "null": false,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Inline wiki",
                            "editable": true,
                            "help_text": null,
                            "name": "inline_wiki",
                            "null": false,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Edit form",
                            "editable": false,
                            "help_text": null,
                            "name": "edit_form",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Load function",
                            "editable": false,
                            "help_text": null,
                            "name": "load_fun",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Save function",
                            "editable": false,
                            "help_text": null,
                            "name": "save_fun",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Get view dict function",
                            "editable": false,
                            "help_text": null,
                            "name": "view_dict",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Documentaction",
                            "editable": false,
                            "help_text": null,
                            "name": "doc",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "JSONModel",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "Page",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def save_from_request(self, request, view_type, param):\n    if 'direct_save' in request.POST:\n        self.operator = request.user.username\n        super(Page, self).save() \n    else:\n        conf_list = WikiConf.objects.filter(subject=self.subject)\n        conf_exists = False\n        if len(conf_list)>0:\n            conf = conf_list[0]\n            conf_exists = True\n            if conf.backup_copies>0:\n                pages = Page.objects.filter(subject = self.subject, name = self.name).update(latest=False)\n                obj_to_save = Page()\n                obj_to_save.subject = self.subject\n                obj_to_save.name = self.name\n                obj_to_save.description = self.description\n                obj_to_save.content_src = self.content_src\n                obj_to_save.content = self.content\n                obj_to_save.base_template = self.base_template\n                obj_to_save.rights_group = self.rights_group\n                obj_to_save.menu = self.menu\n                obj_to_save.operator = self.operator\n                obj_to_save.update_time = self.update_time\n                obj_to_save.jsondata = self.jsondata\n                obj_to_save.published = False\n                obj_to_save.latest = True\n                obj_to_save.update_time = datetime.now()\n                obj_to_save.save()\n                pages = Page.objects.filter(subject = self.subject, name = self.name).order_by('update_time')\n                if len(pages) > conf.backup_copies:\n                    to_delete_count = len(pages) - conf.backup_copies\n                    to_delete = []\n                    for pos in pages:\n                        if not pos.published and not pos.latest:\n                            to_delete.append(pos)\n                            to_delete_count -= 1\n                        if to_delete_count <= 0:\n                            break\n                    if to_delete:\n                        for pos2 in to_delete:\n                            pos2.delete()\n                return\n                \n        self.operator = request.user.username\n        self.update_time = datetime.now()\n        self.latest = True\n        if not conf_exists:\n            self.published = True            \n        self.save()\n\ndef save(self, *args, **kwargs):\n    #if not self.id:\n    super(Page, self).save(*args, **kwargs) \n    if self.content_src:\n        #content = html_from_wiki(self, self.content_src+\"\\n\\n\\n&nbsp;\")\n        conf = WikiConf.objects.filter(subject=self.subject).first()\n        header = \"\"\n        footer = \"\"\n        line_number = 0\n        if conf:\n            if conf.page_header:\n                header = conf.page_header + \"\\n\"\n                line_number -= len(conf.page_header.split('\\n')) \n            if conf.page_footer:\n                footer = conf.page_footer + \"\\n\"\n\n        x = IndentMarkdownProcessor(output_format=\"html\", line_number=line_number)\n        content = x.convert(header + self.content_src + footer)\n    else:\n        content = \"\"\n    self.content = content\n    \n    print(\"A1\", self.operator)\n    \n    super(Page, self).save(*args, **kwargs) \n\ndef template_for_object(self, view, context, doc_type):\n    if doc_type=='py':\n        return \"schwiki/edit_wiki_content.html\"\n    return None\n\ndef get_page_for_wiki(self, wiki_str, user=None):\n    wiki_word = wiki_from_str(wiki_str)\n    return Page.get_page(user, self.subject, wiki_word)\n\ndef get_href(self, path=None):\n    return make_href(self.description if self.description else self.name, new_win=False, section=self.subject, path=path)\n\n@staticmethod\ndef get_page(request_or_username, subject, name):\n    if type(request_or_username)==str:\n        username = request_or_username\n    elif request_or_username.user:\n        username = request_or_username.user.username\n    else:\n        username = None\n    objs = None\n    if username:\n        objs = Page.objects.filter(subject=subject, name = name, operator=username, latest=True)\n    if not objs or len(objs)==0:\n        objs = Page.objects.filter(subject=subject, name = name, published=True)\n    if not objs or len(objs)==0:\n        objs = Page.objects.filter(subject=subject, name = name)\n    if len(objs)>0:\n        return objs[0]\n    else:\n        return None\n    \n    \ndef __str__(self):\n    return self.name\n\n\n@staticmethod\ndef get_wiki_objects():\n    global REG_OBJ_RENDERER\n    ret = []\n    for key, obj in REG_OBJ_RENDERER.items():\n        ret.append(obj.get_info())\n    return ret\n\n\n\ndef get_user_blocks(self):\n    conf = WikiConf.objects.filter(subject=self.subject).first()\n    if conf:\n        if conf.page_header:\n            tab = []\n            for line in conf.page_header.split(\"\\n\"):\n                if line and line.startswith('%') and 'name/' in line:\n                    tab.append(line.split('/',1)[1].split(':')[0].strip())\n            return tab\n    return \"\"\n    ",
                        "url_params": null,
                        "verbose_name": "Page",
                        "verbose_name_plural": "Page"
                    },
                    [
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Subject",
                            "editable": true,
                            "help_text": null,
                            "name": "subject",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Name",
                            "editable": true,
                            "help_text": null,
                            "name": "name",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Description",
                            "editable": true,
                            "help_text": null,
                            "name": "description",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Content source",
                            "editable": false,
                            "help_text": null,
                            "name": "content_src",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Content",
                            "editable": false,
                            "help_text": null,
                            "name": "content",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Base template",
                            "editable": true,
                            "help_text": null,
                            "name": "base_template",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Rights group",
                            "editable": true,
                            "help_text": null,
                            "name": "rights_group",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Project name",
                            "editable": true,
                            "help_text": null,
                            "name": "prj_name",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Menu path",
                            "editable": true,
                            "help_text": null,
                            "name": "menu",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Menu position",
                            "editable": true,
                            "help_text": null,
                            "name": "menu_position",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "IntegerField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Icon in menu",
                            "editable": true,
                            "help_text": null,
                            "name": "menu_icon",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": "menu_icon_size_choices",
                            "db_index": false,
                            "default": "'1'",
                            "description": "Icon size",
                            "editable": true,
                            "help_text": null,
                            "name": "menu_icon_size",
                            "null": false,
                            "param": "max_length=1",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Operator",
                            "editable": false,
                            "help_text": null,
                            "name": "operator",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": "datetime.now",
                            "description": "Update time",
                            "editable": false,
                            "help_text": null,
                            "name": "update_time",
                            "null": false,
                            "param": null,
                            "rel_to": null,
                            "type": "DateTimeField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Published",
                            "editable": false,
                            "help_text": null,
                            "name": "published",
                            "null": false,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": "True",
                            "description": "Latest",
                            "editable": false,
                            "help_text": null,
                            "name": "latest",
                            "null": false,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "JSONModel",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "WikiConf",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def get_css(self):\n    import sass\n    if self.scss:\n        buf = self.scss.replace('page_class', 'wiki_' + self.subject.lower())\n        style = sass.compile(string=buf, indented=True)\n        return style\n    return \"\"\n        \ndef save(self, *args, **kwargs):\n    self.css = self.get_css()\n    ret = super().save(*args, **kwargs)\n    return ret\n",
                        "url_params": null,
                        "verbose_name": "Wiki config",
                        "verbose_name_plural": "Wiki config"
                    },
                    [
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Wiki subject",
                            "editable": true,
                            "help_text": null,
                            "name": "subject",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "A group of rights to view wiki",
                            "editable": true,
                            "help_text": null,
                            "name": "group_of_rights_to_view",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "A group of rights to edit wiki",
                            "editable": true,
                            "help_text": null,
                            "name": "group_of_rights_to_edit",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Number of backup copies",
                            "editable": true,
                            "help_text": null,
                            "name": "backup_copies",
                            "null": false,
                            "param": null,
                            "rel_to": null,
                            "type": "IntegerField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Function called after publishing",
                            "editable": false,
                            "help_text": null,
                            "name": "publish_fun",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Additional scss styles",
                            "editable": false,
                            "help_text": null,
                            "name": "scss",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Css styles",
                            "editable": false,
                            "help_text": null,
                            "name": "css",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Page header",
                            "editable": false,
                            "help_text": null,
                            "name": "page_header",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Page footer",
                            "editable": false,
                            "help_text": null,
                            "name": "page_footer",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ]
            ],
            [
                [
                    {
                        "name": "page_type_choices",
                        "verbose_name": "page_type_choices"
                    },
                    [
                        {
                            "name": "W",
                            "value": "Wiki"
                        },
                        {
                            "name": "I",
                            "value": "Indent html"
                        },
                        {
                            "name": "H",
                            "value": "Html"
                        }
                    ]
                ],
                [
                    {
                        "name": "menu_icon_size_choices",
                        "verbose_name": "menu_icon_size_choices"
                    },
                    [
                        {
                            "name": "0",
                            "value": "small"
                        },
                        {
                            "name": "1",
                            "value": "medium"
                        },
                        {
                            "name": "2",
                            "value": "large"
                        }
                    ]
                ]
            ],
            [
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": "#@cache_page(60 * 15)",
                    "name": "view_page",
                    "param": "app_or_subject, page_path",
                    "ret_type": "U",
                    "url": "^(?P<app_or_subject>[^/]*)/(?P<page_path>[^/]*)/view/$",
                    "url_params": null,
                    "view_code": "transfer_to_cache = False\nkey=\"\"\n\nif not request.user.has_perm('wiki.add_page'):\n    key = \"wiki_view_page_%s_%s\" % (app_or_subject, page_path)\n    data = cache.get(key)\n    if data:\n        return data\n    else:\n        transfer_to_cache = True\n\ndesc = request.GET.get('desc','')\npath, sep, page_name = page_path.rpartition('+')\nif page_name:\n    page_name = page_name[0].upper()+page_name[1:]\n    \nid = -1\nif path:\n    path_list = path.split('+')\n    if page_name in path_list:\n        path_list = path_list[:path_list.index(page_name)]\n    if len(path_list) > 10:\n        path_list = path_list[1:]    \n    path = '+'.join(path_list+[page_name,]) \nelse:\n    path_list = None\n    path = page_name\n\npath_list2 = []\nif path_list:\n    for pos in path_list:\n        try:\n            #p = Page.objects.get(name=pos, subject=app_or_subject)\n            p = Page.get_page(request, app_or_subject, name)\n            if p.description:\n                path_list2.append(p.description)\n            else:\n                path_list2.append(pos)\n        except:\n            path_list2.append(pos)\n\npage = Page.get_page(request, app_or_subject, page_name)\nif page:\n    id = page.id\n    content = page.content\n    try: \n        t = Template(template_simple + content)\n        c = RequestContext(request, {'object': page, 'wiki_path': path, })        \n        #c = Context({'object': page, 'wiki_path': path, 'request': request })    \n        content=t.render(c)\n    except:\n        content = page.content\nelse:\n    page = Page()\n    page.name = page_name\n    page.description=desc\n    page.subject = app_or_subject\n    page.update_time = datetime.datetime.now()\n    page.operator = request.user.username\n    page.save()\n    id = page.id\n    content = None\n\n\nconf = None\nif page:\n    conf_list = models.WikiConf.objects.filter(subject=page.subject)\n    if len(conf_list)>0:\n        conf = conf_list[0]\n    \nc = {'page_name': page_name, 'subject': app_or_subject, 'content': content, 'wiki_path': path, \n     'wiki_path_list': path_list, 'wiki_path_desc': path_list2, 'title': '?: ' + page_name, 'object': page,\n     'description': desc if desc else page_name, 'only_content': True, 'conf': conf,\n}\n\n\nif page and page.base_template:\n    base_template = page.base_template\nelse:\n    base_template = \"schwiki/wiki_view.html\"\n\nc['content'] = content\n\nret = render(request, base_template, context=c)\n\nif transfer_to_cache:\n    cache.set(key, ret, 60 * 60) \n\nreturn ret\n",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "edit_page",
                    "param": "app_or_subject, page_name",
                    "ret_type": "U",
                    "url": "^(?P<app_or_subject>\\w*)/(?P<page_name>\\w*)/edit/$",
                    "url_params": null,
                    "view_code": "page = Page.get_page(request, subject=app_or_subject, name=page_name)    \nif not page:\n    page = Page(app=app, name=page_name, subject=app_or_subject)\n    page.save()\n\nredir = make_href(\"/schwiki/table/Page/%d/edit/?childwin=1\" % page.id)\n\nreturn HttpResponseRedirect(redir)\n",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "publish",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "WikiConf",
                    "url_params": null,
                    "view_code": "conf = models.WikiConf.objects.get(pk = pk)\nobject_list = []\n\npages = models.Page.objects.filter(subject=conf.subject, latest=True, published=False, operator=request.user.username)\nif len(pages)>0:\n    for page in pages:\n        page.published = True\n        page.save()\n        if conf.publish_fun:\n            exec(conf.publish_fun)\n            info = locals()['publish_fun'](page, conf)\n            object_list.append([page, info])\n        else:\n            object_list.append([page, \"\"])\n\npages = models.Page.objects.filter(subject=conf.subject, latest=False, published=True, operator=request.user.username).update(published=False)\n\nreturn { \"OK\": True, 'object_list': object_list }\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "search",
                    "param": "q",
                    "ret_type": "T",
                    "url": "(?P<q>.*)/search/$",
                    "url_params": "{}",
                    "view_code": "search_txt = bdecode(q).decode('utf-8')\nobject_list = Page.objects.filter(content__iregex=search_txt)\nreturn { \"object_list\": object_list, 'q': search_txt }",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "edit_page_object",
                    "param": "**argv",
                    "ret_type": "U",
                    "url": "edit_page_object/",
                    "url_params": "{}",
                    "view_code": "data = json_loads(request.body)\nstatus = data['status']\nif status in (\"new_object\", \"edit_object\"):\n    if status == \"new_object\":\n        obj_name = data['object_name']\n        param = None\n    else:\n        line = data['line']\n        x = line.split('#', 1)\n        obj_name = x[0].strip()[1:].strip()\n        if obj_name.endswith(':'):\n            obj_name = obj_name[:-1]\n        if len(x)>1:\n            s = x[1].strip()\n            if s and s[0] == \"{\":\n                param = json_loads(s.replace(\"\\\\n\", \"\\n\"))\n            else:\n                return { 'param_line': s }\n        else:\n            param = None\n    obj_conf = get_obj_renderer(obj_name)\n    if obj_conf:\n        form_source = obj_conf.get_edit_form()\n        if form_source:\n            if type(form_source)==str:\n                form_class = form_from_str(form_source)\n            else:\n                form_class = form_source\n            form = obj_conf.form_from_dict(form_class, param)                \n            template_name = obj_conf.get_edit_template_name()\n            t = select_template([template_name,])\n            c = { 'form': form, 'object_name': obj_name }\n            return HttpResponse(t.render(c, request))\n        else:\n            line = '% ' + obj_name \n            return JsonResponse({'status': \"return_line\", \"line\": line })\nreturn JsonResponse({'status': \"object_name not found!\", \"status\": status }) \n ",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "edit_page_object_form",
                    "param": "object_name",
                    "ret_type": "U",
                    "url": "edit_page_object_form/<slug:object_name>/",
                    "url_params": "{}",
                    "view_code": "obj_conf = get_obj_renderer(object_name)\nif obj_conf:\n    form_source = obj_conf.get_edit_form()\n    if form_source:\n        if type(form_source) == str:\n            form_class = form_from_str(form_source)\n        else:\n            form_class = form_source\n        form = form_class(request.POST, request.FILES)\n        if form.is_valid():\n            param = obj_conf.convert_form_to_dict(form)\n            line = json_dumps(param).replace(\"\\n\", \"\\\\n\")\n            return JsonResponse({'status': \"return_line\", \"line\": line, \"RETURN\": \"$$RETURN_JSON\"})\n        else:\n            t = select_template([template_name1,template_name2,])\n            c = { 'form': form, }\n            return HttpResponse(t.render(c, request))\nreturn JsonResponse({'status': \"object_name not found!\", \"object_name\": object_name }) \n",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "edit_object_on_page",
                    "param": "page_id, line_number",
                    "ret_type": "U",
                    "url": "edit_object_on_page/<int:page_id>/<int:line_number>/",
                    "url_params": "{}",
                    "view_code": "page = Page.objects.get(pk = page_id)\ndata = page.content_src\nlines = data.split('\\n')\nline = lines[line_number-1]\n\nx = line.split('#', 1)\nobj_name = x[0].strip()[1:].strip()\nif obj_name.endswith(':'):\n    obj_name = obj_name[:-1]\nif len(x)>1:\n    s = x[1].strip()\n    param = json_loads(s.replace(\"\\\\n\", \"\\n\"))\nelse:\n    param = None\n\nobj_conf = get_obj_renderer(obj_name)\nif obj_conf:\n    form_source = obj_conf.get_edit_form()\n    if form_source:\n        if type(form_source)==str:\n            form_class = form_from_str(form_source)\n        else:\n            form_class = form_source\n        form = obj_conf.form_from_dict(form_class, param)                \n        template_name = obj_conf.get_edit_template_name()\n        t = select_template([template_name,])\n        c = { 'form': form, 'object_name': obj_name, 'on_page': True, 'page_id': page_id, 'line_number': line_number }\n        return HttpResponse(t.render(c, request))\n\nreturn HttpResponse(\"\")",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "edit_object_on_page_form",
                    "param": "page_id, line_number, object_name",
                    "ret_type": "U",
                    "url": "edit_object_on_page_form/<int:page_id>/<int:line_number>/<slug:object_name>/",
                    "url_params": "{}",
                    "view_code": "param_indent = 120\n\nobj_conf = get_obj_renderer(object_name)\n\nif obj_conf:\n    form_source = obj_conf.get_edit_form()\n    if form_source:\n        if type(form_source) == str:\n            form_class = form_from_str(form_source)\n        else:\n            form_class = form_source\n        form = form_class(request.POST, request.FILES)\n        if form.is_valid():\n\n            def join_parameters(param, line):\n                x = line.split('#', 1)\n                if len(x)>1:\n                    try:\n                        param2 = param\n                        old_param = json_load(x[1])\n                        for key in old_param:\n                            if not key in param2 or param2[key]==None:\n                                param2[key] = old_param[key]\n                        return param2\n                    except:\n                        pass\n                return param\n\n            page = Page.objects.get(pk = page_id)\n            data = page.content_src\n            lines = data.split('\\n')\n            current_line = lines[line_number-1]\n            param = obj_conf.convert_form_to_dict(form)            \n            \n            if len(current_line) >= 64 * 1024:\n                x = current_line.split('#', 1)\n                if len(x)>1:\n                    old_param = json_loads(x[1])\n                    for key in old_param:\n                        if not key in param or param[key]==None:\n                            param[key] = old_param[key]\n            \n            x = current_line.lstrip()           \n            indent = len(current_line) - len(x)\n            line = (indent * ' ') + '% ' + object_name\n            c = obj_conf.get_info()\n            if \"inline_content\" in c and c['inline_content']:\n                line += \":\"\n            if param:\n                if len(line)<param_indent:\n                    line += (param_indent-len(line)) * ' '\n                line += \"#\"\n                line += json_dumps(param).replace('\\n', '\\\\n')\n            lines[line_number-1] = line\n            page.content_src = \"\\n\".join(lines)\n            page.save()\n            return actions.ok(request)\n        else:\n            t = select_template([template_name1,template_name2,])\n            c = { 'form': form, }\n            return HttpResponse(t.render(c, request))\n\nreturn actions.cancel(request)\n",
                    "view_type": "u"
                }
            ],
            [
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "Page",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n%load django_bootstrap5\n\n\n%% all\n    %with table_type='datatable' show_title_bar=0 title=_(\"Wiki pages\")\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New wiki page\")\n\n%% list_row_header\n    th...Subject\n    th...Name\n    th...Description\n    th...Menu\n    th...Operator\n    th...Modify time\n    th...Status\n    \n%% list_row\n    td...{{object.subject}}\n    td...{{object.name}}\n    td...{{object.description}}\n    td...{{object.menu}}\n    td...{{object.operator}}\n    td...{{object.update_time|isoformat}}\n    td\n        % if object.published:\n            span class=fa fa-users\n            % if object.latest:\n                span class=fa fa-check-square-o\n        % else:\n            % if object.latest :\n                span class=fa fa-calendar-plus-o            \n            % else:\n                span class=fa fa-low-vision            \n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n%% table_header_edit\n  h2..._(Wiki pages)\n\n\n%% row_edit\n    % form:\n        .subject,name,description,base_template,rights_group,prj_name,menu,menu_position,menu_icon,menu_icon_size\n    input type=hidden,,,name=direct_save    \n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "wiki_view",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with form_info=False show_form=False form_width=470 form_height=665\n        {{ block.super }}\n\n%% jquery_ovr2\n    .var options = {\n    .    success: RefreshWin2\n    .}\n    .function RefreshWin2(responseText, statusText) {\n    .    location.href = \"{{base_path}}schwiki/{{subject}}/{{page_name}}/view/\"\n    .}\n\n%% pythoncode\n    script language=python\n\n        def init_form(self):\n            self.GetParent().register_signal(self, \"refresh_controls\")\n\n        def refresh_controls(self):\n            print(\"refresh_controls\")\n            self.GetParent().refresh_html()\n            print(\"refresh_controls_2\")\n\n    %if standard_web_browser:\n        link rel=Stylesheet,,,type=text/css,,,href=^auto/schwiki/css/wiki.css\n\n%% table_title\n\n%% scroll\n\n%% _nav\n\n%% form_rect\n    .width: 600, height: 890\n\n%% form_bar\n    % if not standard_web_browser\n        % if perms.schwiki.add_page:\n            table width=100%,,,class=form_bar\n                tr\n                    % if False\n                        td cellpadding=0,,,align=right,,,valign=top,,,width=36,,,height=36\n                            CTRLCLOSEBUTTON width=36,,,height=36,,,NAME=EXIT,,,SRC=client://emblems/emblem-unreadable.png\n                    % if content\n                        td cellpadding=0,,,align=right,,,valign=top,,,width=36,,,height=36\n                            CTRLNOBG_BUTTON width=36,,,height=36,,,href=/schwiki/{{subject}}/{{page_name}}/edit/,,,label=edytuj stron\u0119,,,SRC=client://apps/accessories-text-editor.png\n                    % else\n                        td cellpadding=0,,,align=right,,,valign=top,,,width=110,,,height=36\n                            CTRLNOBG_BUTTON width=36,,,height=36,,,href=/schwiki/{{subject}}/{{page_name}}/edit/,,,label=edytuj stron\u0119 jako wiki,,,SRC=client://apps/accessories-character-map.png\n                            CTRLNOBG_BUTTON width=36,,,height=36,,,href=/schwiki/{{subject}}/{{page_name}}/edit/,,,label=edytuj stron\u0119 jako ihtml,,,SRC=client://actions/format-indent-more.png\n                            CTRLNOBG_BUTTON width=36,,,height=36,,,href=/schwiki/{{subject}}/{{page_name}}/edit/,,,label=edytuj stron\u0119 jako html,,,SRC=client://apps/accessories-text-editor.png\n                    td width=5\n                    td align=center,,,border=0,,,border-color=#{{color_body_0_7}}\n                        span class=form_title\n                            %%form_title\n                                {{title|wiki_href|safe}}\n\n\n\n%% content_start\n    <div id=\"{{uuid}}\" class=\"flexible_size content ajax-region ajax-frame wiki-frame\" related-object='{{uuid}}'>\n        <div class=\"ajax-link\" href=\"{{ request.get_full_path|append_get_param:'only_content=1' }}\" data-region=\"page\">\n\n%% content_end\n        </div> \n    </div>\n    \n%% list_content_header\n    % if not standard_web_browser == 6:\n        % if standard_web_browser and perms.schwiki.add_page:\n            a data-bs-toggle=collapse,,,href=#{{uuid}}collapse,,,class=wiki_collapse_link,,,accesskey=o\n                span class=fa fa-arrows-v fa-fw\n            div id={{uuid}}collapse,,,class=panel-collapse collapse wiki_collapse\n                {{ block.super }}\n        % else:\n            {{ block.super }}\n\n%% list_content_title\n    % if not standard_web_browser == 6:\n        % if perms.schwiki.add_page:\n            h4 style=white-space:nowrap;...{{subject}}: {{description}}\n\n%% list_content_actions\n    % if not standard_web_browser == 6:\n        % if perms.schwiki.add_page:\n            table width=100%\n                tr\n                    td class=wiki_view_actions,,,style=position:absolute;top:0px;width:100%;border:0px;padding:0px;text-align:right;padding-right:2rem;\n                        % action \"edit\" _(\"Edit page\") url=\"{{base_path}}schwiki/\"|append_str:subject|append_str:\"/\"|append_str:page_name|append_str:\"/edit/\" tag_class=\"+btn-sm\"\n                        \n                        % with ap=\"wiki\" object_name=\"Page\" id=object.id format='txt': \n                            % action \"any_field_edit-inline/content_src\" _(\"Edit page source\") attrs=\"data-inline-position='^tr:after' accesskey=' '\" tag_class=\"+btn-sm\"\n\n%% form\n    % if perms.schwiki.add_page\n        {{ block.super }}\n    % else\n        % markdown2html content \"\" subject\n\n%% list_content_body\n    % if not standard_web_browser == 6 and wiki_path_desc:\n        % if standard_web_browser:\n            ol class=breadcrumb wiki-breadcrumb\n                % for wiki_elem in wiki_path_desc:\n                    % if wiki_elem|lower == description|lower:\n                        li class=breadcrumb-item active\n                            {{ wiki_elem }}\n                    % else:\n                        li class=breadcrumb-item\n                            % markdown2html '[['|append_str:wiki_elem|append_str:']]' wiki_path subject\n                            \n                % if wiki_path_desc and not description|lower in wiki_path_desc:\n                    li class=breadcrumb-item active\n                        {{ description }}\n        % else:\n            table width=100%\n                tr bgcolor=#{{color_background_0_9}}\n                    td\n                tr\n                    td bgcolor=#{{color_background_0_9}}\n                        % for wiki_elem in wiki_path_desc:                            \n                            % if wiki_elem|lower == description|lower:\n                                {{ wiki_elem }}\n                            % else:\n                                % markdown2html '[['|append_str:wiki_elem|append_str:']]' wiki_path subject\n                                /\n                tr:::td\n            br\n\n    div class=panel-body container-fluid wiki_container wiki_{{page_name|lower}} wiki_{{conf.subject|lower}}\n        % if content\n            % if wiki_path:\n                % markdown2html content wiki_path subject\n            % else:\n                % markdown2html content \"\" subject\n        % else\n            _(This page do not exists yet!)\n\n        % if conf:\n            % if conf.css:\n                style\n                    {{conf.css}}\n",
                    "url": "",
                    "url_parm": ""
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "edit_wiki_content",
                    "tags_mount": null,
                    "template_code": "% extends \"schsys/db_field_edt.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% content\n    % if standard_web_browser\n        % with title=page.name:\n            {{ block.super }}\n    % else\n        div class=container wiki_editor,,,style=width:calc( 100vw - 370px );\n            % get_table_row \"wikiobj_id\" \"wiki\" \"PageObjectsConf\" \"name__icontains\" label=\"Type of wiki object\" filter=\"1\" is_get_button=False\n            % action \"new_object\" _(\"Modify or create a wiki object\") url=\"{{app_path}}table/PageObjectsConf/[[wikiobj_id]]/action/insert_object_to_editor/?page_id={{object.id}}\" target=\"run_script\"\n        \n            % with title=page.name:\n                {{ block.super }}\n\n\n%% edit_area\n    move-attr target-tag=div.modal-dialog,,,class=+modal-max\n    move-attr target-tag=div,,,class=maximized\n    div class=refresh_after_close,,,style=width:calc( 100% - 20px );height:calc( 100vh - 7.8rem );position:relative;\n        ptig-codeeditor class=flexible2_size,,,value={{txt|bencode}},,,href={{base_path}}{{save_path}},,,title={{title}},,,width=100%,,,height=100%,,,offset=3.rem\n            div class=btn-toolbar,,,role=toolbar,,,style=background-color:var(--bs-primary);\n                div class=btn-group me-2,,,role=group\n                    button data-bind=disabled:!changed;onclick:on_save,,,class=btn btn-danger shadow-none border-1,,,type=button\n                        i class=fa fa-floppy-o\n                        .Save\n                insert-object app_path={{app_path}},,,page_id={{object.id}},,,href={{base_path}}schwiki/edit_page_object/,,,class=ajax-region ajax-link ajax-frame,,,data-region=json\n                    div class=btn-group me-2,,,role=group\n                        button data-bind=onclick:on_properties,,,class=btn text-white shadow-none border-0,,,type=button,,,name=properties,,,,,,title=Properties\n                            i class=fa fa-wpforms\n                            .Properties\n                    div class=btn-group,,,role=group                    \n                        % with \"Multimedia:img,svg,video,graphviz,plot;Block:row,col,div,block,ihtml,html,ajax-frame,super-block;Other:table,csv\" as segments:\n                            % for segment in segments|split\n                                % with segment|split:\":\" as part\n                                    div class=dropdown\n                                        button class=btn dropdown-toggle text-white shadow-none border-0,,,data-bs-toggle=dropdown,,,style=font-size:1rem;\n                                            % if part.0 == 'Multimedia':\n                                                i class=fa fa-camera\n                                            % if part.0 == 'Block':\n                                                i class=fa fa-angle-double-right \n                                            % if part.0 == 'Other':\n                                                i class=fa fa-ellipsis-v \n                                            {{ part.0 }}\n                                        ul class=dropdown-menu\n                                            % for item in object.get_wiki_objects:\n                                                % if item.name in part.1:\n                                                    li\n                                                        a class=dropdown-item,,,data-bind=onclick:on_insert,,,name={{item.name}},,,show_form={% if item.show_form %}1{% else %}0{% endif %},,,inline={% if item.inline_content %}1{% else %}0{% endif %},,,data-region=insert_object,,,title=Edit: {{item.name}}\n                                                            i class={{item.icon}}\n                                                            {{ item.name }}\n                                            % if part.0 == 'Other':\n                                                % for item in object.get_wiki_objects:\n                                                    % if not item.name in segments:\n                                                        li\n                                                            a class=dropdown-item,,,data-bind=onclick:on_insert,,,name={{item.name}},,,show_form={% if item.show_form %}1{% else %}0{% endif %},,,inline={% if item.inline_content %}1{% else %}0{% endif %},,,data-region=insert_object,,,title=Edit: {{item.name}}\n                                                                i class={{item.icon}}\n                                                                {{ item.name }}\n                                                \n                        % with object.get_user_blocks as actions:\n                            % if actions:  \n                                div class=dropdown\n                                    button class=btn dropdown-toggle text-white shadow-none border-0,,,data-bs-toggle=dropdown,,,style=font-size:1rem;\n                                        i class=fa fa-camera\n                                        _(User defined blocks)\n                                    ul class=dropdown-menu\n                                        % for item_name in actions:\n                                            li\n                                                a class=dropdown-item,,,data-bind=onclick:on_insert,,,name={{item_name}},,,show_form=0,,,inline=1,,,data-region=insert_object\n                                                    {{ item_name }}\n                                    \n\n%% dialog_type\n    .modal-lg\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "PageObjectsConf",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row _(\"New wiki class\")\n\n%% list_row_header\n    th...Application\n    th...Name\n    th...Description\n    th...Inline editing\n\n\n%% list_row\n    td...{{object.app}}\n    td...{{object.name}}\n    td...{{object.description}}\n    td...{{object.inline_editing}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/edit_form,Edit form\n        .field_edit/load_fun,Load function\n        .field_edit/save_fun,Save function\n        .field_edit/view_dict,View dict\n        .field_edit/doc,Documentaction\n        .delete\n\n%% row_edit\n    % form:\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "wikiobj_edit",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% scroll\n\n%% all\n    % with show_form=True form_edit=True:\n        {{ block.super }}\n\n%% form_action\n    {% if on_page %}{{base_path}}schwiki/edit_object_on_page_form/{{page_id}}/{{line_number}}/{{object_name}}/{% else %}{{base_path}}schwiki/edit_page_object_form/{{object_name}}/{% endif %}\n\n%% row_edit_form\n    % if form:\n        {{ block.super }}\n    % else:\n        .This object doesn't need additional parameters\n    \n%% row_edit\n    % form:\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "wikiobj_view",
                    "tags_mount": null,
                    "template_code": "{{content|safe}}",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "table_wikiobj_view",
                    "tags_mount": null,
                    "template_code": "div\n    [% if perms.wiki.add_page %]\n    a class=wiki-object-edit,,,href=[{base_path}]schwiki/table/PageObjectsConf/action/edit_page_object/?name={{name}}&page_id={{page.id}}&only_content=1,,,target=popup_edit,,,title=Table properties\n        .table\n        span class=fa fa-cog fa-2\n    [% endif %]        \n    <table class=\"{{html_class}}\">\n        {% for row in tbl %}<tr>\n            {% for pos in row %}<{{pos.tag}} class=\"{{pos.html_class}}\">{{ pos.data }}</{{pos.tag}}>\n            {% endfor %}\n        </tr>    \n        {% endfor %}\n    </table>\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "WikiConf",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n\n%% scroll\n\n\n%% list_content_actions\n    % new_row \"New config\"\n\n%% list_row_header\n    th..._(Wiki subject)\n    th..._(Group of rigths to view)\n    th..._(Group of rigths to edit)\n    th..._(backup_copies)\n\n\n%% list_row\n    td...{{object.subject}}\n    td...{{group_of_rights_to_view}}\n    td...{{group_of_rights_to_edit}}\n    td...{{object.backup_copies}}\n\n\n%% list_row_actions\n    % row_actions:\n        .publish,Publish,[fa fa-users]\n    % row_actions:\n        .edit\n        .field_edit/publish_fun,Publish function\n        .field_edit/scss,SCSS\n        .field_edit/page_header,Page header\n        .field_edit/page_footer,Page footer\n        .delete\n\n\n%% row_edit\n    % form:\n        .subject,group_of_rights_to_view,group_of_rights_to_edit,backup_copies\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_publish",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title=_('Report from publication')\n        {{ block.super }}\n\n\n%% user_header\n    th...Published wiki\n\n%% user_row\n    tr\n        td... {{object}}\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "img_wikiobj_edit",
                    "tags_mount": null,
                    "template_code": "% extends \"schwiki/wikiobj_edit.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with title=\"Images\" \n        {{ block.super }}\n\n\n%% dialog_type\n    .modal-lg\n\n\n%% row_edit\n    style ===>\n        .img_form .img_form_images .group_booleanfield {\n            position: relative;\n        }\n        .img_form .img_form_images .group_imagefield {\n            margin-left: 80px;\n        }\n        .img_form .img_form_images .group_charfield {\n            position: relative;\n        }\n        .img_form .img_form_images .img_block_title {\n            position: relative;\n        }\n        .img_form .img_form_images .img_block_title {\n            font-size: 16px;\n            background: #888;\n            color: #fff;\n            padding: 0px 3px;\n        }\n        .img_form .img_form_layout label {\n            padding: 5px;\n        }\n        .img_form .img_form_layout label::after {\n            content: \"\";\n        }\n        .img_form .img_form_view_text {\n            padding: 0px 0.7rem\n        }\n\n    div class=img_form\n        div class=row\n            div class=container col-12 col-sm-6 img_form_images\n                span class=img_block_title...1.\n                % form \"/12\": \n                    .crop1;img1;desc1\n                % form \"/6\": \n                    .img1class;img1style\n            div class=container col-12 col-sm-6 img_form_images\n                span class=img_block_title...2.\n                % form \"/12\": \n                    .crop2;img2;desc2\n                % form \"/6\": \n                    .img2class;img2style\n            div class=container col-12 col-sm-6 img_form_images\n                span class=img_block_title...3.\n                % form \"/12\": \n                    .crop3;img3;desc3\n                % form \"/6\": \n                    .img3class;img3style\n            div class=container col-12 col-sm-6 img_form_images\n                span class=img_block_title...4.\n                % form \"/12\": \n                    .crop4;img4;desc4\n                % form \"/6\": \n                    .img4class;img4style\n\n        label...Component layout\n        div class=row img_form_layout\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"1000\" {%if form.component_view_type.value == '1000' or not form.component_view_type.value %}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"1200\" {%if form.component_view_type.value == '1200'%}checked{%endif%} />\n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=40,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff                    \n                                rect stroke=#000,,,height=80,,,width=40,,,y=1,,,x=41,,,stroke-width=1,,,fill=#007fff\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"1230\" {%if form.component_view_type.value == '1230'%}checked{%endif%} />\n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=27,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff                    \n                                rect stroke=#000,,,height=80,,,width=27,,,y=1,,,x=28,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=80,,,width=27,,,y=1,,,x=57,,,stroke-width=1,,,fill=#007fff\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"1234\" {%if form.component_view_type.value == '1234'%}checked{%endif%} />\n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=20,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff                    \n                                rect stroke=#000,,,height=80,,,width=20,,,y=1,,,x=21,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=80,,,width=20,,,y=1,,,x=43,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=80,,,width=20,,,y=1,,,x=63,,,stroke-width=1,,,fill=#007fff\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"1213\" {%if form.component_view_type.value == '1213'%}checked{%endif%} />\n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=40,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=40,,,width=40,,,y=1,,,x=41,,,stroke-width=1,,,fill=#007fff                    \n                                rect stroke=#000,,,height=40,,,width=40,,,y=41,,,x=41,,,stroke-width=1,,,fill=#007fff\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"1232\" {%if form.component_view_type.value == '1232'%}checked{%endif%} />\n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=40,,,width=40,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff                    \n                                rect stroke=#000,,,height=40,,,width=40,,,y=41,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=80,,,width=40,,,y=1,,,x=41,,,stroke-width=1,,,fill=#007fff\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"4321\" {%if form.component_view_type.value == '4321'%}checked{%endif%} />\n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=40,,,width=40,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=40,,,width=40,,,y=1,,,x=41,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=40,,,width=40,,,y=41,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=40,,,width=40,,,y=41,,,x=41,,,stroke-width=1,,,fill=#007fff\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"component_view_type\" value=\"1423\" {%if form.component_view_type.value == '1423'%}checked{%endif%} />\n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=25,,,width=25,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=25,,,width=25,,,y=1,,,x=51,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=25,,,width=25,,,y=31,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=25,,,width=25,,,y=51,,,x=31,,,stroke-width=1,,,fill=#007fff\n\n\n        label...Image style\n        div class=row img_form_layout\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"img_view_type\" value=\"o1\" {%if form.img_view_type.value == 'o1' or not form.img_view_type.value %}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=10,,,width=60,,,y=65,,,x=11,,,stroke-width=1,,,fill=#7f0000\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"img_view_type\" value=\"o2\" {%if form.img_view_type.value == 'o2'%}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=10,,,width=60,,,y=35,,,x=11,,,stroke-width=1,,,fill=#7f0000\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"img_view_type\" value=\"o3\" {%if form.img_view_type.value == 'o3'%}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=10,,,width=60,,,y=6,,,x=11,,,stroke-width=1,,,fill=#7f0000\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"img_view_type\" value=\"o4\" {%if form.img_view_type.value == 'o4'%}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=10,,,width=80,,,y=85,,,x=1,,,stroke-width=1,,,fill=#ffefef\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"img_view_type\" value=\"o5\" {%if form.img_view_type.value == 'o5'%}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=15,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=10,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#ffefef\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"img_view_type\" value=\"o6\" {%if form.img_view_type.value == 'o6'%}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=10,,,width=80,,,y=85,,,x=1,,,stroke-width=1,,,fill=#000000\n                div class=col\n                    label\n                        <input type=\"radio\" name=\"img_view_type\" value=\"o7\" {%if form.img_view_type.value == 'o7'%}checked{%endif%} />                \n                        svg width=41,,,height=52,,,viewBox=0 0 82 103,,,xmlns=http://www.w3.org/2000/svg\n                            g\n                                rect stroke=#000,,,height=80,,,width=80,,,y=15,,,x=1,,,stroke-width=1,,,fill=#007fff\n                                rect stroke=#000,,,height=10,,,width=80,,,y=1,,,x=1,,,stroke-width=1,,,fill=#000000\n\n    \n    div class=row    \n        % form \"4/4\":\n            .quality;jpeg\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "img_wikiobj_view",
                    "tags_mount": null,
                    "template_code": "style ===>\n    .img_form_view {\n        padding: 1px;\n        position: relative;\n    }\n    \n    .i4321 td.t1 div {\n        position: relative;\n        box-shadow: 5px 5px 10px;\n    }\n\n    .i4321 td.t2 div {\n        position: relative;\n        left: -40px;\n        top: 30px;\n        box-shadow: 5px 5px 10px;\n    }\n    \n    .i4321 td.t3 div {\n        position: relative;\n        top: -50px;\n        left: 20px;\n        transform: rotate(-20deg);\n        box-shadow: 5px 5px 10px;\n    }\n    \n    .i4321 td.t4 div {\n        position: relative;\n        box-shadow: 5px 5px 10px;\n    }\n    \n    .o1 {\n        position: absolute;\n        bottom: 3px;    \n        left: 5px;\n        right: 5px;\n        background: rgba(0,0,0,0.3);\n        color: #ccc;\n        padding: 0px 5px;\n    }\n    \n    .img_form_view:hover span {\n        color: #fff;\n    }\n\n    .img_form_view span a {\n        color: #ccc;\n    }\n\n    .img_form_view:hover span a {\n        color: #fff;\n    }\n    \ndiv class=row\n    [% if perms.wiki.add_page %]\n    a class=wiki-object-edit wiki-object-edit-right,,,href=[{base_path}]schwiki/edit_object_on_page/[{object.id}]/{{line_number}}/?name=[{name}]&only_content=1,,,target=popup_edit,,,title=Img properties\n        .img\n        span class=fa fa-cog fa-2\n    [% endif %]\n    % for element in elements:\n        % if element.type == 'img':\n            div class={{element.css_class}} img_form_view\n                % if param.jpeg:\n                    img src=data:image/jpeg;base64,{{ element.data.0 }},,,style=width:100%\n                % else:\n                    img src=data:image/png;base64,{{ element.data.0 }},,,style=width:100%\n                % if element.data.1:\n                    span class={{param.img_view_type}}...{{element.data.1}}\n        % else:\n            {{ element.data|safe }}\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_search",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='Found pages'\n        {{ block.super }}\n\n\n%% user_header\n    th...Subject\n    th...Description\n\n%% user_row\n    tr\n        td... {{object.subject}}\n        td\n            a href={{base_path}}schwiki/{{object.subject}}/{{object.name}}/view/?only_content=1&desc={{object.description}},,,target=_parent\n                % if object.description:\n                    {{object.description}}\n                % else: \n                    {{object.name}}\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": false,
                    "name": "video_wikiobj_view",
                    "tags_mount": null,
                    "template_code": "div class=row,,,style=position:relative;\n    [% if perms.wiki.add_page %]\n    a class=wiki-object-edit wiki-object-edit-right,,,href=[{base_path}]schwiki/edit_object_on_page/[{object.id}]/{{line_number}}/?name=[{name}]&only_content=1,,,target=popup_edit,,,title=Video properties\n        .Video\n        span class=fa fa-cog fa-2\n    [% endif %]\n\n    div class=div_float\n        <video {% if param.controls %}controls {% endif %}\n        . style=\"width:{% if param.videosize %}{{param.videosize}}{% else %}100%{% endif %};{% if param.textright %}float:left;{% else %}float:right;{% endif %}\" \n        . class=\"{% if param.videoclass %}{{param.videoclass}}{% else %}video_float {% if param.textright %}video_float_left{% else %}video_float_right{% endif %}{% endif %}\"\n        . {% if param.poster %}poster=\"[{base_path}]site_media/{{param.poster}}\"{% endif %} >\n        % for pos in sources:\n            source src=[{base_path}]site_media/{{pos.0}},,,type={{pos.1|safe}}\n        % for pos in tracks:\n            <track src=\"[{base_path}]site_media/{{pos.0}}\" label=\"{{pos.1}}\" srclang=\"{{pos.2}}\" kind=\"{{pos.4}}\"  {% if pos.3 %}default {% endif %}></track>\n        </video>\n        % if param.text:\n            <div {% if textclass %}class=\"{{param.textclass}}\" {% else %}class=\"text_float\" {% endif %}style=\"{{param.textstyle}}\">\n                {{param.text|safe}}\n            </div>\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": false,
                    "name": "svg_wikiobj_view",
                    "tags_mount": null,
                    "template_code": "div class=row,,,style=position:relative;\n    [% if perms.wiki.add_page %]\n    a class=wiki-object-edit wiki-object-edit-right,,,href=[{base_path}]schwiki/edit_object_on_page/[{object.id}]/{{line_number}}/?name=[{name}]&only_content=1,,,target=popup_edit,,,title=Svg properties\n        .SVG\n        span class=fa fa-cog fa-2\n    [% endif %]\n\n    div class=div_float\n        <div style=\"width:{% if param.svgsize %}{{param.svgsize}}{% else %}100%{% endif %};{% if param.textright %}float:left;{% else %}float:right;{% endif %}\"\n        . class=\"{% if param.svgclass %}{{param.svgclass}}{% else %}svg_float {% if param.textright %}svg_float_left{% else %}svg_float_right{% endif %}{% endif %}\"\n        >\n        {{param.src|safe}}\n        </div>        \n        % if param.text:\n            <div {% if textclass %}class=\"{{param.textclass}}\" {% else %}class=\"text_float\" {% endif %}style=\"{{param.textstyle}}\">\n                {{param.text|safe}}\n            </div>\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": false,
                    "name": "plot_wikiobj_view",
                    "tags_mount": null,
                    "template_code": "div class=row,,,style=position:relative;\n    [% if perms.wiki.add_page %]\n    a class=wiki-object-edit wiki-object-edit-right,,,href=[{base_path}]schwiki/edit_object_on_page/[{object.id}]/{{line_number}}/?name=[{name}]&only_content=1,,,target=popup_edit,,,title=Plot properties\n        .Plot\n        span class=fa fa-cog fa-2\n    [% endif %]\n\n    div class=div_float\n        <ptig-plotly {% if param.width %}width=\"{{param.width}}\"{% endif %} {% if param.height %}height=\"{{param.height}}\"{% endif %} plotly-name=\"{{param.name}}\" />\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": false,
                    "name": "code_wikiobj_view",
                    "tags_mount": null,
                    "template_code": "div class=row\n    [% if perms.wiki.add_page %]\n    a class=wiki-object-edit,,,href=[{base_path}]schwiki/table/PageObjectsConf/action/edit_page_object/?name={{name}}&page_id={{page.id}}&only_content=1,,,target=popup_edit,,,title=Code properties\n        .code\n        span class=fa fa-image-o fa-2\n    [% endif %]\n\n    <div class=\"div_float\" {% if param.style %}style=\"{{param.style}}\"{% endif %} >\n        {{param.col_code|safe}}\n    </div>\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": false,
                    "name": "graphviz_wikiobj_view",
                    "tags_mount": null,
                    "template_code": "div style=position:relative;\n    [% if perms.wiki.add_page %]\n    a class=wiki-object-edit wiki-object-edit-right,,,href=[{base_path}]schwiki/edit_object_on_page/[{object.id}]/{{line_number}}/?name=[{name}]&only_content=1,,,target=popup_edit,,,title=Graphviz properties\n        .Graphviz\n        span class=fa fa-cog fa-2\n    [% endif %]\n\n    {{param.svg_code|safe}}\n",
                    "url": null,
                    "url_parm": null
                }
            ],
            [
                {
                    "icon": null,
                    "icon_code": null,
                    "icon_size": "1",
                    "name": "Wiki",
                    "perms": "wiki.change_page",
                    "url": "table/Page/-/form/list/",
                    "url_type": "desktop"
                },
                {
                    "icon": "client://actions/document-properties.png",
                    "icon_code": null,
                    "icon_size": "1",
                    "name": "Page objects conf.",
                    "perms": null,
                    "url": "table/PageObjectsConf/-/form/list/",
                    "url_type": "desktop"
                },
                {
                    "icon": "png://categories/applications-system.png",
                    "icon_code": null,
                    "icon_size": "1",
                    "name": "Publish options",
                    "perms": null,
                    "url": "table/WikiConf/-/form/list/",
                    "url_type": "desktop"
                }
            ],
            [],
            [],
            [],
            [
                {
                    "content": "from . import models\nfrom pytigon_lib.schdjangoext.graphql import add_graphql_to_class\n\ndef extend_query(query_class):\n    for model_name in dir(models):\n        model = getattr(models, model_name)\n        if hasattr(model, \"_meta\") and hasattr(model, \"filter_fields\"):\n            add_graphql_to_class(model, getattr(model, \"filter_fields\"), query_class)\n    return query_class\n\ndef extend_mutation(mutation_class):\n    return mutation_class\n    ",
                    "file_type": "s",
                    "name": "schema"
                },
                {
                    "content": "from pytigon_lib.schindent.indent_markdown import BaseObjRenderer, IndentMarkdownProcessor, register_obj_renderer\nfrom pytigon_lib.schdjangoext.django_ihtml import ihtml_to_html\nfrom pytigon_lib.schfs.vfstools import get_temp_filename\nfrom pytigon_lib.schtools.tools import bencode, bdecode\nfrom django.template import Template, Context\nimport os\nimport csv\n\nclass IHtmlProcessor(IndentMarkdownProcessor):\n    def render_wiki(self, ihtml_source):\n        return ihtml_to_html(None, ihtml_source)\n\n\nclass IHtmlObjRenderer(BaseObjRenderer):\n    \n    @staticmethod\n    def get_info():\n        return { \"name\": \"ihtml\", \"title\": \"IHtml\", \"icon\": \"fa fa-indent\", \"show_form\": False, 'inline_content': True }\n\n    def gen_context(self, param, lines, output_format, parent_processor):\n        if lines:\n            ihtml_processor = IHtmlProcessor(output_format=\"html\", parent_processor=parent_processor)\n            return { 'content': ihtml_processor.convert(\"\\n\".join(lines)), 'param': param }\n        return { 'content': \"\", 'param': param }\n\nregister_obj_renderer(\"ihtml\", IHtmlObjRenderer)\n\n\nclass HtmlObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"html\", \"title\": \"Html\", \"icon\": \"fa fa-code\", \"show_form\": False, 'inline_content': True }\n\n    def gen_context(self, param, lines, output_format, parent_processor):\n        if lines:\n            return { 'content': \"\\n\".join(lines) }\n        return { 'content': \"\" }\n\nregister_obj_renderer(\"html\", HtmlObjRenderer)\n\n\nclass BaseMarkdownObjRenderer(BaseObjRenderer):\n    def gen_context(self, param, lines, output_format, parent_processor):\n        if lines:\n            i_markdown_processor = IndentMarkdownProcessor(output_format=output_format, parent_processor=parent_processor)\n            return { 'content': i_markdown_processor.convert(\"\\n\".join(lines)), \"param\": param }\n        return { 'content': \"\", \"param\": param }\n\n\nclass DivObjRenderer(BaseMarkdownObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"div\", \"title\": \"Div\", \"icon\": \"fa fa-tag\", \"show_form\": True, 'inline_content': True }\n\n    def get_edit_form(self):\n        return \"attributes\"\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n        out = \"<div style='position:relative;'>\" + self.edit_on_page_link(parent_processor) + \"</div><div \" + context['param']['attributes'] + \">\\n\" + context['content'] + \"</div>\\n\"\n        return out\n\nregister_obj_renderer(\"div\", DivObjRenderer)\n\n\nclass AjaxObjRenderer(BaseMarkdownObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"ajax-frame\", \"title\": \"Ajax frame\", \"icon\": \"fa fa-arrows-v\", \"show_form\": False, 'inline_content': True }\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n        return \"<div class='ajax-region ajax-frame' data-region='wiki'>\\n\" + context['content'] + \"\\n</div>\\n\"\n\nregister_obj_renderer(\"ajax-frame\", AjaxObjRenderer)\n\n\nTABLE_OBJ_RENDERER_FORM = \"\"\"\ntablestyle::[\n-\nprimary\nsecondary\nsuccess\ndanger\nwarning\ninfo\nlight\ndark\n]\nborderstyle::[\n-\nborderless\nbordered\nbordered border-primary\nbordered secondary\nbordered success\nbordered danger\nbordered warning\nbordered info\nbordered light\nbordered dark\n]\nnarrow?\nstriped?\nhover?\nsmall?\nresponsive?\n\"\"\"\n\nclass TableObjRenderer(BaseMarkdownObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"table\", \"title\": \"Table\", \"icon\": \"fa fa-table\", \"show_form\": True, 'inline_content': True }\n\n    def get_edit_form(self):\n        return TABLE_OBJ_RENDERER_FORM\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n\n        table_class = \"table\"\n        if context['param']['tablestyle'] and context['param']['tablestyle'] != '-':\n            table_class += ' table-' + context['param']['tablestyle']\n        if context['param']['borderstyle'] and context['param']['borderstyle'] != '-':\n            table_class += ' table-' + context['param']['borderstyle']\n        if context['param']['striped']:\n            table_class += ' table-striped'\n        if context['param']['hover']:\n            table_class += ' table-hover'\n        if context['param']['small']:\n            table_class += ' table-small'\n        if context['param']['narrow']:\n            out = context['content'].replace(\"<table>\", \"<table class='%s' style='width:auto'>\" % table_class)\n        else:\n            out = context['content'].replace(\"<table>\", \"<table class='%s'>\" % table_class)            \n        if context['param']['responsive']:\n            out = \"<div class='table-responsive' style='position:relative;'>\" + self.edit_on_page_link(parent_processor, right=True) + out + \"</div>\"\n        else:\n            out = \"<div style='position:relative;'>\" + self.edit_on_page_link(parent_processor, right=True) + out + \"</div>\"\n        return out\n\nregister_obj_renderer(\"table\", TableObjRenderer)\n\n\nclass CsvObjRenderer(TableObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"csv\", \"title\": \"CSV\", \"icon\": \"fa fa-columns\", \"show_form\": True, 'inline_content': True }\n\n    def gen_context(self, param, lines, output_format, parent_processor):\n        if lines:\n            out = \"<table>\"\n            csv_reader = csv.reader(lines)\n            for row in csv_reader:\n                out += \"<tr>\"\n                for item in row:\n                    out += \"<td>\"\n                    out += str(item)\n                    out += \"</td>\"\n                out += \"</tr>\"\n            out += \"</table>\"\n            return { 'content': out, \"param\": param }\n        return { 'content': \"\", \"param\": param }\n\nregister_obj_renderer(\"csv\", CsvObjRenderer)\n\n\nclass RowObjRenderer(BaseMarkdownObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"row\", \"title\": \"Row\", \"icon\": \"fa fa-arrows-h\", \"show_form\": False, 'inline_content': True }\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n        return \"<div class='row'>\\n\" + context['content'] + \"\\n</div>\\n\"\n        return out\n\nregister_obj_renderer(\"row\", RowObjRenderer)\n\n\nCOL_OBJ_RENDERER_FORM = \"\"\"\nlg//width for large screen::[-,1,2,3,4,5,6,7,8,9,10,11,12]\nmd//widt for medium_screen::[-,1,2,3,4,5,6,7,8,9,10,11,12]\nsm//width small screen::[-,1,2,3,4,5,6,7,8,9,10,11,12]\n\"\"\"\n\nclass ColObjRenderer(BaseMarkdownObjRenderer):\n    @staticmethod\n    def get_info():\n        return {\n            \"name\": \"col\",\n            \"title\": \"Col\",\n            \"icon\": \"fa fa-angle-double-right\",\n            \"show_form\": True,\n            \"inline_content\": True,\n        }\n\n    def get_edit_form(self):\n        return COL_OBJ_RENDERER_FORM\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n        c = \"\"\n        if context[\"param\"][\"lg\"] != \"-\":\n            c += \" col-lg-\" + str(context[\"param\"][\"lg\"])\n        if context[\"param\"][\"md\"] != \"-\":\n            c += \" col-md-\" + str(context[\"param\"][\"md\"])\n        if context[\"param\"][\"sm\"] != \"-\":\n            c += \" col-\" + str(context[\"param\"][\"sm\"])\n        return \"<div class='\" + c[1:] + \" position-relative'>\\n\" + self.edit_on_page_link(parent_processor) + context[\"content\"] + \"\\n</div>\\n\"\n\n\nregister_obj_renderer(\"col\", ColObjRenderer)\n\n\nclass HasPermObjRenderer(BaseMarkdownObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"has_perm\", \"title\": \"Permission\", \"icon\": \"fa fa-key\", \"show_form\": True, 'inline_content': True }\n\n    def get_edit_form(self):\n        return \"perm\"\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n        out = \"{% if perms.\" + context['param']['perm'] + \"%}\\n\"\n        out += context['content'] + \"\\n{% endif %}\\n\"\n        return out\n\nregister_obj_renderer(\"has_perm\", HasPermObjRenderer)\n\n\nclass LangObjRenderer(BaseMarkdownObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"language\", \"title\": \"Language\", \"icon\": \"fa fa-language\", \"show_form\": True, 'inline_content': True }\n\n    def get_edit_form(self):\n        return \"language\"\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n        lang = context['param']['language']\n        if lang.startswith(\"!\"):\n            out = \"{% if lang not in '\" + lang + \"' %}\\n\"\n        else:\n            out = \"{% if lang in '\" + lang + \"' %}\\n\"\n        out += context['content'] + \"\\n{% endif %}\\n\"\n        return out\n\nregister_obj_renderer(\"language\", LangObjRenderer)\n\n\nGRAPHVIZ_OBJ_RENDERER_FORM = \"\"\"\nsvg_attr_class//SVG class\nsvg_style//SVG style\n\"\"\"\n\nclass GraphvizObjRenderer(BaseObjRenderer):\n    \n    @staticmethod\n    def get_info():\n        return { \"name\": \"graphviz\", \"title\": \"Graphviz\", \"icon\": \"fa fa-sitemap\", \"show_form\": True, 'inline_content': True}\n    \n    def get_edit_form(self):\n        return GRAPHVIZ_OBJ_RENDERER_FORM\n\n    def gen_context(self, param, lines, output_format, parent_processor):\n        import graphviz\n        import lxml.etree as et\n        context = {\"param\": param}\n        if lines:\n            file_name = get_temp_filename()\n            src = graphviz.Source(\"\\n\".join(lines))\n            file_name2 = src.render(file_name, view=False, format=\"svg\")\n            x = \"\"\n            with open(file_name2, \"rt\") as f:\n                x = f.read()\n                tree = et.fromstring(x.encode(\"utf-8\"))\n                tree.attrib.pop(\"width\")\n                tree.attrib.pop(\"height\")\n                if \"svg_style\" in param:\n                    tree.attrib[\"style\"] = param[\"svg_style\"]\n                if \"svg_attr_class\" in param:\n                    tree.attrib[\"class\"] = param[\"svg_attr_class\"]\n\n                x2 = et.tostring(tree, pretty_print=True).decode(\"utf-8\")\n\n            context[\"param\"][\"svg_code\"] = x2\n\n            os.remove(file_name2)\n\n        return context\n\n    def get_renderer_template_name(self):\n        return \"schwiki/graphviz_wikiobj_view.html\"\n\n\nregister_obj_renderer(\"graphviz\", GraphvizObjRenderer)\n\n\nclass IncludeObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"include\", \"title\": \"Include\", \"icon\": \"fa fa-plus-circle\", \"show_form\": False,}\n    \n    def render(self, param, lines, output_format, parent_processor):\n        if lines:\n            with open(lines[0].strip(), \"rt\") as f:\n                l= f.readlines()\n                i = 0\n                for line in l: \n                    parent_processor.lines.insert(self.line_number+i, line)\n                    i += 1 \n        return \"\"\n\nregister_obj_renderer(\"include\", IncludeObjRenderer)\n\n\nBLOCK_OBJ_RENDERER_FORM = \"\"\"\nstart//Start of block\nend//End of block\n\"\"\"\n\nclass BlockObjRenderer(BaseMarkdownObjRenderer):\n    @staticmethod\n    def get_info():\n        return {\n            \"name\": \"block\",\n            \"title\": \"block\",\n            \"icon\": \"fa fa-exchange\",\n            \"show_form\": True,\n            \"inline_content\": True,\n        }\n\n    def get_edit_form(self):\n        return BLOCK_OBJ_RENDERER_FORM\n\n    def render(self, param, lines, output_format, parent_processor):\n        context = self.gen_context(param, lines, output_format, parent_processor)\n        return \"<div style='position:relative'>\" + self.edit_on_page_link(parent_processor, right=True) + context[\"param\"][\"start\"] + context[\"content\"] + context[\"param\"][\"end\"] + \"</div>\"\n\nregister_obj_renderer(\"block\", BlockObjRenderer)\n\n\nclass WikiFrameObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"wiki-frame\", \"title\": \"Wiki frame\", \"icon\": \"fa fa-list-alt\", \"show_form\": False, \"inline_content\": True}\n    \n    def render(self, param, lines, output_format, parent_processor):\n        if lines:\n            ret = \"\"\n            for pos in lines:\n                if pos.startswith('[['):\n                    pos2 = pos[2:].split(']]')[0]\n                    ret += \"{%% include_wiki '%s' object wiki_path %%}\" % pos2\n            return ret\n        return \"\"\n\nregister_obj_renderer(\"wiki-frame\", WikiFrameObjRenderer)\n\n\nclass SuperBlockObjRenderer(BaseMarkdownObjRenderer):\n    @staticmethod\n    def get_info():\n        return {\n            \"name\": \"super-block\",\n            \"title\": \"Super block\",\n            \"icon\": \"fa fa-superpowers\",\n            \"show_form\": True,\n            \"inline_content\": True,\n        }\n\n    def get_edit_form(self):\n        return \"template::_\"\n\n    def convert_form_to_dict(self, form, old_dict=None):\n        template = form.cleaned_data['template']\n        return { 'template': bencode(template) }\n\n    def form_from_dict(self, form_class, param):\n        if param:\n            template = param['template']\n            return form_class(initial={ 'template': bdecode(template)} )\n        else:\n            return form_class()\n\n\n    def render(self, param, lines, output_format, parent_processor):\n        if lines:\n            segments = []\n            for line in lines:\n                if not line:\n                    if segments:\n                        if segments[-1]:\n                            segments.append([])\n                else:\n                    if segments:\n                        segments[-1].append(line)\n                    else:\n                        segments.append([line,])\n            context = self.gen_context(param, lines, output_format, parent_processor)\n            context['lines'] = lines\n            context['segments'] = segments\n            context['line_number'] = self._get_line_number(parent_processor)\n            template = bdecode(context['param']['template'])\n            t = Template(template)\n            c = Context(context)\n            return t.render(c).replace('[%', '{%').replace('%]', '%}').replace('[{', '{{').replace('}]', '}}') \n        return \"\"\n\nregister_obj_renderer(\"super-block\", SuperBlockObjRenderer)\n",
                    "file_type": "l",
                    "name": "markdown_obj_subblocks"
                },
                {
                    "content": "import base64\nfrom PIL import Image\nimport io\nimport os\nimport collections\n\nfrom pytigon_lib.schindent.indent_markdown import (\n    BaseObjRenderer,\n    IndentMarkdownProcessor,\n    register_obj_renderer,\n)\nfrom pytigon_lib.schfs.vfstools import get_temp_filename\n\nfrom pytigon_lib.schdjangoext.widgets import ImgFileInput\nfrom django import forms\n\n\nclass ImgForm(forms.Form):\n    from pytigon_lib.schdjangoext.widgets import ImgFileInput\n\n    img1 = forms.ImageField(label=\"Image 1\", required=False, widget=ImgFileInput)\n    crop1 = forms.BooleanField(label=\"Crop\", required=False, initial=True)\n    desc1 = forms.CharField(label=\"Description\", required=False)\n    img1class = forms.CharField(label=\"CSS class\", required=False)\n    img1style = forms.CharField(label=\"Style\", required=False)\n    img2 = forms.ImageField(label=\"Image 2\", required=False, widget=ImgFileInput)\n    crop2 = forms.BooleanField(label=\"Crop\", required=False, initial=True)\n    desc2 = forms.CharField(label=\"Description\", required=False)\n    img2class = forms.CharField(label=\"CSS class\", required=False)\n    img2style = forms.CharField(label=\"Style\", required=False)\n    img3 = forms.ImageField(label=\"Image 3\", required=False, widget=ImgFileInput)\n    crop3 = forms.BooleanField(label=\"Crop\", required=False, initial=True)\n    desc3 = forms.CharField(label=\"Description\", required=False)\n    img3class = forms.CharField(label=\"CSS class\", required=False)\n    img3style = forms.CharField(label=\"Style\", required=False)\n    img4 = forms.ImageField(label=\"Image 4\", required=False, widget=ImgFileInput)\n    crop4 = forms.BooleanField(label=\"Crop:\", required=False, initial=True)\n    desc4 = forms.CharField(label=\"Description\", required=False)\n    img4class = forms.CharField(label=\"CSS class\", required=False)\n    img4style = forms.CharField(label=\"Style\", required=False)\n\n    component_view_type = forms.CharField(max_length=16)\n    img_view_type = forms.CharField(max_length=16)\n\n    jpeg = forms.BooleanField(label=\"Jpeg\", required=False, initial=False)\n    quality = forms.ChoiceField(\n        label=\"Quality\",\n        required=False,\n        initial=\"1\",\n        choices=((\"0\", \"standard\"), (\"1\", \"good\"), (\"2\", \"best\")),\n    )\n\n\nclass ImgObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"img\", \"title\": \"Image\", \"icon\": \"fa fa-picture-o\", \"show_form\": True,}\n\n    def get_edit_form(self):\n        return ImgForm\n\n    def convert_form_to_dict(self, form, old_dict=None):\n        def calc_sizes(component_view_type, no, vertical=True):\n            if component_view_type == \"1000\":\n                if vertical:\n                    return (100, 100 * 16 / 16)\n                else:\n                    return (100, 100 * 9 / 16)\n            elif component_view_type == \"1200\":\n                ret = calc_sizes(\"1000\", 1, vertical)\n                return (ret[0] / 2, ret[1] / 2)\n            elif component_view_type == \"1230\":\n                ret = calc_sizes(\"1000\", 1, vertical)\n                return (ret[0] / 3, ret[1] / 3)\n            elif component_view_type == \"1234\":\n                ret = calc_sizes(\"1000\", 1, vertical)\n                return (ret[0] / 4, ret[1] / 4)\n            elif component_view_type == \"1213\":\n                if no == 1:\n                    # return (39,69)\n                    return (39, 61.7)\n                else:\n                    return (61, 34)\n            elif component_view_type == \"1232\":\n                if no == 2:\n                    return (39, 69)\n                else:\n                    return (61, 34)\n            elif component_view_type == \"4321\":\n                if vertical:\n                    return (50, 50 * 16 / 9)\n                else:\n                    return (50, 50 * 9 / 16)\n            elif component_view_type == \"1423\":\n                if vertical:\n                    return (70, 70 * 16 / 9)\n                else:\n                    return (70, 70 * 9 / 16)\n\n        def _encode(bstr, crop, component_view_type, no, jpeg=False, quality=\"0\"):\n            img = Image.open(io.BytesIO(bstr))\n            if img.size[0] > img.size[1]:\n                vertical = False\n            else:\n                vertical = True\n\n            if quality == \"2\":\n                z = 40\n            elif quality == \"1\":\n                z = 20\n            else:\n                z = 10\n\n            ret = calc_sizes(component_view_type, no, vertical)\n            max_dx = _dx = int(ret[0] * z)\n            max_dy = _dy = int(ret[1] * z)\n\n            max_scale = max(img.size[0] / max_dx, img.size[1] / max_dy)\n            min_scale = min(img.size[0] / max_dx, img.size[1] / max_dy)\n            if crop:\n                scale = min_scale\n            else:\n                scale = max_scale\n\n            if scale > 1:\n                img = img.resize(\n                    (int(img.size[0] / scale), int(img.size[1] / scale)),\n                    Image.ANTIALIAS,\n                )\n                if crop:\n                    left = (img.size[0] - max_dx) / 2\n                    top = (img.size[1] - max_dy) / 2\n                    right = (img.size[0] + max_dx) / 2\n                    bottom = (img.size[1] + max_dy) / 2\n                    img = img.crop((left, top, right, bottom))\n\n            dx2 = int(max_dx * scale)\n            dy2 = int(max_dy * scale)\n\n            img2 = Image.new(\"RGB\", (dx2, dy2), (255, 255, 255))\n            offset = (int((dx2 - img.size[0]) / 2), int((dy2 - img.size[1]) / 2))\n            img2.paste(img, offset)\n            img = img2\n\n            img_out = io.BytesIO()\n            if jpeg:\n                img.save(img_out, format=\"JPEG\")\n            else:\n                img.save(img_out, format=\"PNG\")\n            return base64.b64encode(img_out.getbuffer()).decode(\"utf-8\")\n\n        ret = {}\n        component_view_type = form.cleaned_data[\"component_view_type\"]\n\n        jpeg = form.cleaned_data[\"jpeg\"]\n        quality = form.cleaned_data[\"quality\"]\n\n        for img, crop, no in [\n            (\"img1\", \"crop1\", 1),\n            (\"img2\", \"crop2\", 2),\n            (\"img3\", \"crop3\", 3),\n            (\"img4\", \"crop4\", 4),\n        ]:\n            if form.cleaned_data[img]:\n                ret[img] = _encode(\n                    form.cleaned_data[img].read(),\n                    form.cleaned_data[crop],\n                    component_view_type,\n                    no,\n                    jpeg,\n                    quality,\n                )\n            else:\n                if old_dict:\n                    if img in old_dict:\n                        ret[img] = old_dict[img]\n        for i in range(1, 5):\n            ret[\"desc%d\" % i] = form.cleaned_data[\"desc%d\" % i]\n            ret[\"crop%d\" % i] = form.cleaned_data[\"crop%d\" % i]\n            ret[\"img%dclass\" % i] = form.cleaned_data[\"img%dclass\" % i]\n            ret[\"img%dstyle\" % i] = form.cleaned_data[\"img%dstyle\" % i]\n\n        ret[\"component_view_type\"] = component_view_type\n        ret[\"img_view_type\"] = form.cleaned_data[\"img_view_type\"]\n \n        ret[\"jpeg\"] = jpeg\n        ret[\"quality\"] = quality\n        ret[\"json_update\"] = True\n\n        return ret\n\n    def gen_context(self, param, lines, output_format, parent_processor):\n        context = {\"param\": param}\n        cvt = param[\"component_view_type\"]\n        \n        Element = collections.namedtuple(\"Element\", \"type data css_class style\")\n        elements = []\n        img_css_class = \"\"\n\n        def img_process(no, css_class):\n            try:\n                css_class2 = (\n                    param[\"img%dclass\" % no] if param[\"img%dclass\" % no] else css_class\n                )\n                imgstyle = param[\"img%dstyle\" % no]\n                elm = Element(\n                    \"img\",\n                    [param[\"img%d\" % no], param[\"desc%d\" % no]],\n                    css_class2,\n                    imgstyle,\n                )\n                elements.append(elm)\n            except:\n                pass\n\n        if cvt == \"1000\":\n            if not img_css_class:\n                img_css_class = \"col col-12\"\n            img_process(1, img_css_class)\n        elif cvt == \"1200\":\n            img_css_class = \"col col-6\"\n            img_process(1, img_css_class)\n            img_process(2, img_css_class)\n        elif cvt == \"1230\":\n            img_css_class = \"col col-4\"\n            img_process(1, img_css_class)\n            img_process(2, img_css_class)\n            img_process(3, img_css_class)\n        elif cvt == \"1234\":\n            img_css_class = \"col col-3\"\n            img_process(1, img_css_class)\n            img_process(2, img_css_class)\n            img_process(3, img_css_class)\n            img_process(3, img_css_class)\n        elif cvt == \"1213\":\n            if not img_css_class:\n                img_css_class = \"col col-12\"\n            elements.append(Element(\"data\", \"<div class='%s'>\" % img_css_class, \"\", \"\"))\n            elements.append(\n                Element(\n                    \"data\",\n                    \"<table width='100%' class='i1213'><tr><td rowspan='2' width='42%' class='t1'>\",\n                    \"\",\n                    \"\",\n                )\n            )\n            img_process(1, \"\")\n            elements.append(Element(\"data\", \"</td><td class='t2'>\", \"\", \"\"))\n            img_process(2, \"\")\n            elements.append(Element(\"data\", \"</td></tr><tr><td class='t3'>\", \"\", \"\"))\n            img_process(3, \"\")\n            elements.append(Element(\"data\", \"</td></tr></table>\", \"\", \"\"))\n            elements.append(Element(\"data\", \"</div>\", \"\", \"\"))\n        elif cvt == \"1232\":\n            if not img_css_class:\n                img_css_class = \"col col-12\"\n            elements.append(Element(\"data\", \"<div class='%s'>\" % img_css_class, \"\", \"\"))\n            elements.append(\n                Element(\n                    \"data\",\n                    \"<table width='100%' class='i1232'><tr><td class='t1'>\",\n                    \"\",\n                    \"\",\n                )\n            )\n            img_process(1, \"\")\n            elements.append(\n                Element(\"data\", \"</td><td class='t2' rowspan='2' width='42%'>\", \"\", \"\")\n            )\n            img_process(2, \"\")\n            elements.append(Element(\"data\", \"</td></tr><tr><td class='t3'>\", \"\", \"\"))\n            img_process(3, \"\")\n            elements.append(Element(\"data\", \"</td></tr></table>\", \"\", \"\"))\n            elements.append(Element(\"data\", \"</div>\", \"\", \"\"))\n        elif cvt == \"4321\" or cvt == \"1423\":\n            if not img_css_class:\n                img_css_class = \"col col-12\"\n            elements.append(Element(\"data\", \"<div class='%s'>\" % img_css_class, \"\", \"\"))\n            elements.append(\n                Element(\n                    \"data\",\n                    \"<table width='100%%' class='i%s'><tr><td class='t1'>\" % cvt,\n                    \"\",\n                    \"\",\n                )\n            )\n            img_process(1, \"\")\n            elements.append(Element(\"data\", \"</td><td class='t2'>\", \"\", \"\"))\n            img_process(2, \"\")\n            elements.append(Element(\"data\", \"</td></tr><tr><td class='t3'>\", \"\", \"\"))\n            img_process(3, \"\")\n            elements.append(Element(\"data\", \"</td><td class='t4'>\", \"\", \"\"))\n            img_process(4, \"\")\n            elements.append(Element(\"data\", \"</td></tr></table>\", \"\", \"\"))\n            elements.append(Element(\"data\", \"</div>\", \"\", \"\"))\n        context[\"elements\"] = elements\n        return context\n\n    def get_renderer_template_name(self):\n        return \"schwiki/img_wikiobj_view.html\"\n\n    def get_edit_template_name(self):\n        return \"schwiki/img_wikiobj_edit.html\"\n\n\nregister_obj_renderer(\"img\", ImgObjRenderer)\n\n\nclass SvgForm(forms.Form):\n    src = forms.CharField(label=\"Text\", widget=forms.Textarea, required=False)\n    svgsize = forms.CharField(label=\"Svg size\", required=False)\n    svgclass = forms.CharField(label=\"Svg CSS class\", required=False)\n    svgstyle = forms.CharField(label=\"Svg style\", required=False)\n    text = forms.CharField(label=\"Text\", widget=forms.Textarea, required=False)\n    textright = forms.BooleanField(label=\"Text on the right\", required=False)\n    textclass = forms.CharField(label=\"CSS class\", required=False)\n    textstyle = forms.CharField(label=\"Style\", required=False)\n\n\nclass SvgObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"svg\", \"title\": \"Svg\", \"icon\": \"fa fa-puzzle-piece\", \"show_form\": True, }\n\n    def get_edit_form(self):\n        return SvgForm\n\n    def get_renderer_template_name(self):\n        return \"schwiki/svg_wikiobj_view.html\"\n\n\nregister_obj_renderer(\"svg\", SvgObjRenderer)\n\n\nclass VideoForm(forms.Form):\n    src = forms.CharField(label=\"Source video address\", required=True)\n    poster = forms.CharField(label=\"Poster file address\", required=False)\n    controls = forms.BooleanField(label=\"Controls?\", required=False, initial=True)\n    videosize = forms.CharField(label=\"Video size\", required=False)\n    videoclass = forms.CharField(label=\"Video CSS class\", required=False)\n    videostyle = forms.CharField(label=\"Video style\", required=False)\n    text = forms.CharField(label=\"Text\", widget=forms.Textarea, required=False)\n    textright = forms.BooleanField(label=\"Text on the right\", required=False)\n    textclass = forms.CharField(label=\"CSS class\", required=False)\n    textstyle = forms.CharField(label=\"Style\", required=False)\n\n\nclass VideoObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"video\", \"title\": \"Video\", \"icon\": \"fa fa-video-camera\", \"show_form\": True,}\n\n    def get_edit_form(self):\n        return VideoForm\n\n    def gen_context(self, param, lines, output_format, parent_processor):\n        context = {\"param\": param}\n        if \"src\" in param:\n            x = param[\"src\"].split(\";\")\n            sources = []\n            tracks = []\n            for pos in x:\n                if pos.lower().endswith(\".webm\"):\n                    sources.append((pos, \"video/webm;\"))\n                if pos.lower().endswith(\".mp4\"):\n                    sources.append((pos, \"video/mp4;\"))\n                if \".vtt\" in pos.lower():\n                    name = pos\n                    label = \"English subtitles\"\n                    srclang = \"en\"\n                    default = False\n                    kind = \"subtitles\"\n                    if \",\" in pos:\n                        p = pos.split(\",\")\n                        name = p[0]\n                        label = p[1]\n                        if len(p) > 2:\n                            srclang = p[2]\n                            if len(p) > 3:\n                                if p[3]:\n                                    default = 3\n                                if len(p) > 4:\n                                    kind = p[4]\n                    tracks.append((name, label, srclang, default, kind))\n            context.update({\"sources\": sources, \"tracks\": tracks})\n        return context\n\n    def get_renderer_template_name(self):\n        return \"schwiki/video_wikiobj_view.html\"\n\n\nregister_obj_renderer(\"video\", VideoObjRenderer)\n\n\nPLOT_OBJ_RENDERER_FORM = \"\"\"\nname//Plot name\nwidth\nheight\n\"\"\"\n\nclass PlotObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"plot\", \"title\": \"Plot\", \"icon\": \"fa fa-line-chart\", \"show_form\": True,}\n\n    def get_edit_form(self):\n        return PLOT_OBJ_RENDERER_FORM\n\n    def get_renderer_template_name(self):\n        return \"schwiki/plot_wikiobj_view.html\"\n\n\nregister_obj_renderer(\"plot\", PlotObjRenderer)\n\n\nclass ReadMoreObjRenderer(BaseObjRenderer):\n\n    @staticmethod\n    def get_info():\n        return { \"name\": \"read_more\", \"title\": \"Read more\", \"icon\": \"fa fa-eye-slash\", \"show_form\": False,}\n    \n    def render(self, param, lines, output_format, parent_processor):\n        return \"<div class='read_more'></div>\"\n\n\nregister_obj_renderer(\"read_more\", ReadMoreObjRenderer)\n\n\n",
                    "file_type": "l",
                    "name": "makdown_obj_simple"
                }
            ]
        ]
    ],
    [
        {
            "code": ".wiki_editor \n    .form-group:nth-child(1)\n        position: absolute\n        left: 100px\n        width: 300px\n\n.wiki_container\n    padding: 0px\n    margin: 0px\n    \n    h1\n        font-size: 1.2rem\n        margin: 5px 0px\n\n    h2\n        font-size: 1rem\n        margin: 5px 0px\n    \n    .col > h1\n        border-bottom: 2px solid #ccc\n        font-size: 2.4rem;\n\n    .right-block\n        box-shadow: 2px 2px 6px\n        background: #2c3b41\n        padding: 5px\n        margin: 1rem 0px\n        border-radius: 3px\n        color: #fff\n\n        h1\n            font-size: 1.5rem\n            display: flex\n        a\n            color: #fff !important\n            \n        .article-header .article-header-title a\n            background: rgba(255, 255, 255, 0.05) !important\n\n    .article-header .article-header-title a\n        font-size: 1.5rem\n        background: rgba(0,0,0,0.05);\n        display: flex\n        padding: 0px 5px\n        margin: 0px -5px\n        color: #000\n\n    .wiki-object-edit\n        position: absolute\n        top: 2px\n        left: 2px\n        opacity: 0.2\n        z-index: 1000\n        background: aqua\n        width: auto\n\n    .wiki-object-edit-right\n        background: yellow !important\n        right: 2px !important\n        left: initial\n\n\n    .wiki-object-edit:hover\n        opacity: 1\n\n.wiki-frame\n    padding: 0px 0.7rem\n\n    .wiki-breadcrumb\n        background: #fbfbff\n        padding: 5px 10px\n\n    .col\n        padding: 0px\n        \n        .col\n            padding: 0px\n    \n    .row\n        padding: 0px\n        margin: 0px -0.7rem\n        \n        >.col\n            padding: 0px 0.7rem\n            \n            >.col\n                padding: 0px\n        \n        .div_float\n            padding: 0px 0.7rem\n        \n        .img_float\n            width: 66%\n            padding-bottom: 0.1rem\n\n        .img_float_left\n            float: left\n            padding-right: 0.7rem\n\n        .img_float_right\n            float: right\n            padding-left: 0.7rem\n\n        .video_float\n            padding-bottom: 0.1rem\n\n        .video_float_left\n            float: left\n            padding-right: 0.7rem\n        \n        .video_float_right\n            float: right\n            padding-left: 0.7rem\n\n        .svg_float\n            padding-bottom: 0.1rem\n\n        .svg_float_left\n            float: left\n            padding-right: 0.7rem\n        \n        .svg_float_right\n            float: right\n            padding-left: 0.7rem\n",
            "doc": null,
            "name": "wiki_editor",
            "type": "I"
        },
        {
            "code": "TAG = 'insert-object'\n\nTEMPLATE = \"\"\" \n    div name=insert_element\n        slot\n\"\"\"\n\nPARAM_INDENT = 120\n\ndef trim_line(line):\n    x = line.split('#', 1)\n    if len(x)>1:\n        param = JSON.parse(x[1])\n        ret = {}\n        for key, value in param.items():\n            if not (jQuery.type(value)==\"string\" and len(value)>1024):\n                ret[key] = value\n        return x[0]+\"#\"+JSON.stringify(ret).replace('\\n', '\\\\n')\n    return line\n\ndef join_parameters(param, line):\n    x = line.split('#', 1)\n    if len(x)>1:\n        try:\n            param2 = JSON.parse(param)\n            old_param = JSON.parse(x[1])\n            for key in old_param:\n                if not key in param2 or param2[key]==None:\n                    param2[key] = old_param[key]\n            return JSON.stringify(param2).replace('\\n', '\\\\n')\n        except:\n            pass\n    return param\n\ndef get_editor_component(object):\n    return object.closest(\"ptig-codeeditor\") \n\ndef get_editor(object):\n    vc_component = get_editor_component(object) \n    return vc_component.editor\n\ndef is_special_line(line): \n    if line.strip()[:1] == '%':\n        return True\n    else:\n        return False\n\ndef get_current_line(editor):    \n    return editor.getModel().getLineContent(editor.getPosition().lineNumber)    \n\ndef set_current_line(editor, text, overwrite):\n    line_number = editor.getPosition().lineNumber\n    current_line = get_current_line(editor)\n    if overwrite:\n        range = monaco.Range(line_number, 1, line_number, len(current_line)+1) \n        text2 = text \n    else:\n        range = monaco.Range(line_number, 1, line_number, 1)\n        text2 = text + \"\\n\"  \n    id = { 'major': 1, 'minor': 1 }\n    op = { 'identifier': id, 'range': range, 'text': text2, 'forceMoveMarkers': True }\n    editor.executeEdits(\"pytigon\", [op,])\n    if text.endswith(\":\"):\n        editor.setPosition({'lineNumber': line_number, 'column': len(text)+1 })\n    else:\n        editor.setPosition({'lineNumber': line_number, 'column': 1 })\n    editor.focus()\n\ndef wiki_object_to_editor(editor, object_name, is_inline_content, param):\n    global PARAM_INDENT\n    current_line = get_current_line(editor)\n    if len(current_line) >= 64 * 1024:\n        param = join_parameters(param, current_line)\n    x = current_line.lstrip()\n    if len(x)==0 or is_special_line(current_line):\n        overwrite = True\n    else:\n        overwrite = False\n    indent = len(current_line) - len(x)\n    line = (indent * ' ') + '% ' + object_name\n    if is_inline_content:\n        line += \":\"\n    if param:\n        if len(line)<PARAM_INDENT:\n            line += (PARAM_INDENT-len(line)) * ' '\n        line += \"#\"\n        line += param\n    set_current_line(editor, line, overwrite)\n\n\nwith DefineWebComponent(TAG, True) as comp:\n    comp.options['template'] = TEMPLATE\n    \n    def init(component):        \n        href = component.getAttribute(\"href\")\n\n        def _init_OK():\n            nonlocal component\n            ed_component = get_editor_component(component)\n            save = ed_component.state['save']\n            change = ed_component.state['save']\n            \n            def on_ok(event):\n                nonlocal component, save, ed_component                \n                div = component.closest(\".modal-content\")\n                div.style.opacity = \"50%\"\n                def on_saved():\n                    nonlocal component, div\n                    refresh_ajax_frame(div, \"page\", None, None, None)\n                changed = ed_component.state['changed']\n                if changed:\n                    save(on_saved)\n                else:\n                    on_saved()\n            \n            modal_dialog = component.closest(\"div.modal-dialog\")\n            button_OK = modal_dialog.querySelector(\"div.modal-footer > button.btn-primary\")\n            button_OK.setAttribute(\"target\", \"none\")\n            button_OK.onclick = on_ok\n            \n        setTimeout(_init_OK, 1)\n        \n        def update_or_insert(event, insert):\n            nonlocal component, href\n            button = event.currentTarget\n            ed_component = get_editor_component(button)\n            ed = ed_component.editor\n            if insert:\n                object_name = button.getAttribute(\"name\")\n                show_form = False\n                if button.getAttribute(\"show_form\") == '1':\n                    show_form = True\n                inline = False\n                if button.getAttribute(\"inline\") == '1':\n                    inline = True\n                status = \"new_object\"\n                line = None\n            else:\n                line = get_current_line(ed)\n                spec = is_special_line(line)\n                if is_special_line(line) and '#' in line:\n                    object_name = line.split('#')[0].strip()[1:].strip()\n                    inline = False\n                    if object_name.endswith(\":\"):\n                        object_name = object_name[:-1]\n                        inline = True\n                    show_form = True\n                    status = \"edit_object\"\n                    if len(line) >= 64*1024:\n                        line = trim_line(line)\n                else:\n                    return\n                \n            if show_form == True:\n                def _complete(content):\n                    nonlocal object_name, inline, button\n                    def on_loadeddata(event):\n                        nonlocal object_name, inline\n                        print(\"on_loadeddata:\", event.data)\n                        x = JSON.parse(event.data)\n                        if 'line' in x:\n                            wiki_object_to_editor(ed, object_name, inline, x['line'])\n                    setattr(component, \"onloadeddata\", on_loadeddata)                \n                    window.on_popup_edit_new(button, window.get_elem_from_string(content), href)\n                     \n                data = JSON.stringify({'status': status, 'line': line, 'object_name': object_name})\n                ajax_post(href, data, _complete, None)\n            else:\n                wiki_object_to_editor(ed, object_name, inline, None)\n\n        def on_insert(event):\n            update_or_insert(event, True)\n \n        def on_properties(event):\n            update_or_insert(event, False)\n        \n        component.set_state({\"on_insert\": on_insert,  \"on_properties\": on_properties })\n    \n    comp.options['init'] = init\n",
            "doc": null,
            "name": "insert_object",
            "type": "R"
        }
    ]
]