[
    [
        "test,test,test",
        "schcomponents/code_editor\nschcomponents/d3\nschcomponents/leaflet\nschcomponents/video-js\nschcomponents/code_editor\nschcomponents/handsontable\nschcomponents/pivottable\nschcomponents/summernote\nschcomponents/txtarea_editor\nschcomponents/plotly\nschcomponents/vs_editor",
        "desktop_modern",
        "Locale\n    Locales:\n        New locale\n            add 2 letters locale code\n            ",
        "",
        "_schtools.schsimplescripts,_schtools.schtools,_schtools.schauth,_schwiki.schwiki,_schtools.schcommander,_schtasks.schtasks",
        "toolbar(file(open,exit),clipboard)",
        "modern",
        "PIP=pyppeteer\nGUI_COMMAND=\"\"\nANDROID_WEB=1\nANDROID_WEB_PORT=8000\nANDROID_WEB_HOST=\"0.0.0.0\"\nANDROID_WEB_HREF=\"127.0.0.1:8000\"\nANDROID_KIVY=1\nSHORTCUT_DESKTOP=1\nSHORTCUT_MENU=1\nSHORTCUT_ANDROID=1\nSHORTCUT_TITLE=\"DevTools\"\nICON=\"media/app.png\"\n",
        "GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n",
        true,
        false,
        "schdevtools",
        "standard/keymap;standard/tablefilter;standard/image_viewer;standard/hexview;standard/shell;",
        true,
        "PYTIGON\n=======\n\nWhat is it\n----------\n\nPytigon is a combination of several technologies: python, django, \nwxWidgets to create one coherent development environment.\n\nKey capabilities of Pytigon:\n\n- Create an application using popular technologies:\n\n   - Python language\n\n   - django web framework\n\n   - wxWidgets client for desktop program\n\n   - bootstrap based web client\n\n- Run application everywhere:\n\n   - desktop application for: Linux, Windows, OSX,\n\n   - web based client for mobile and desktop devices.\n\n- The strong integration of all components\n   \n   - Python philosophy everywhere: modified django templates based on \n     indentations, embeded python to javascript compiler (Transcrypt)\n   \n   - wxPython widgets integrated with django model fields\n   \n   - django server integrated with wxPython client program\n\n- All in one Pytigon IDE - ide allows you to create program and\n  make instalation program.\n\n\nInstalation\n-----------\n\n1. Windows\n\n   - Download and run instalation program. Instalation program contain\n     python enviroment with all needed libraries.\n   \n2. Linux\n\n   - In the selected folder run command: \n     \n     `git clone https://github.com/Splawik/pytigon.git \n     cd pytigon\n     bash install.sh`\n     \n   - Install wxPython-Phoenix \n     ( `https://wiki.wxpython.org/How to install wxPython`_ )\n     \n\nRun     \n---\n\nrun command in pytigon folder: \n\nWindows:\n   \n   python\\python pytigon.py app_name\n   \nLinux: \n   \n   python/bin/python pytigon.py app_name\n   \nFirst application which you can test is schdevtools - Pytigon ide.\nRun: ...python pytigon.py schdevtools\n     \n",
        "smartfon_standard",
        null,
        "tablet_standard",
        "Developer tools",
        "###> templates_src/template/desktop.ihtml\n\n%% botstrap_css\n    {% css_link 'themes/bootswatch/materia/bootstrap.min.css' %}\n\n%% js_app_init\n    .db_struct = [ [\"devparam\", {\"keyPath\": \"key\"}] ];\n    .init_db(db_struct);\n    .devtools_sync = function(run_after) {\n    .    console.log(\"SYNC!\");\n    .    run_after(\"OK\");\n    .}\n    .sync_struct = [ ['devparam', \"{{base_path}}schdevtools/devparam/\", devtools_sync], ];\n    .init_sync(sync_struct);\n    {{ block.super }}\n\n%% logo\n    span class=logo-lg\n        img src={{base_path}}static/favicon.ico,,,style=height:100%;\n        span class=txt3d text-white,,,style=font-size:1rem;\n            .Pytigon - dev tools\n\n###> templates_src/template/schweb.ihtml\n\n%% toolbars_start\n    tr\n        td\n        td\n        td...Python shell\n        td...1\n        td...client://apps/utilities-terminal.png\n        td...html\n        td...Terminal,^standard/shell/shell.html?schtml=panel\n",
        "GUI_COMMAND_LINE=\"--no_splash --debug --rpc=8090\"\nNUMBER_OF_WORKERS=1"
    ],
    [
        [
            [
                null,
                "",
                null,
                "import os.path\nfrom schlib.schhtml.htmltools import superstrip\nimport inspect\nfrom schlib.schfs.vfstools import norm_path\nfrom django.template import engines\n\nfield_default = {'null':False,'blank':False,'editable':True,}\nfield_defaults = {\n    'AutoField': { },\n    'BooleanField': { \"default\": False },\n    'CharField': {\"param\":\"max_length=64\", \"unique\": False,},\n    'CommaSeparatedIntegerField': {},\n    'DateField': {},\n    'DateTimeField': {},\n    'DecimalField': {},\n    'EmailField': {},\n    'FileField': {},\n    'FilePathField': {},\n    'FloatField': {},\n    'ImageField': {},\n    'IntegerField': {},\n    'GenericIPAddressField': {},\n    'NullBooleanField': {},\n    'PositiveIntegerField': {},\n    'PositiveSmallIntegerField': {},\n    'SlugField': {},\n    'SmallIntegerField': {},\n    'TextField': { 'editable': False, },\n    'TimeField': {},\n    'URLField': {},\n    'XMLField': {},\n    'ForeignKey': { 'name': 'parent', 'description': 'Parent'},\n    'ManyToManyField': { },\n    'HiddenForeignKey': { 'name': 'parent', 'description': 'Parent' },\n    'GForeignKey': { 'name': 'parent', 'description': 'Parent' },\n    'GManyToManyField': {},\n    'GHiddenForeignKey': { 'name': 'parent', 'description': 'Parent', },\n}\n\nformfield_default = {'required':True, }\n\nformfield_defaults = {\n    'CharField': { 'param': \"max_length=None, min_length=None\", },\n    'ChoiceField': { 'param': \"choices=models.[[choice_name]]\", },\n    'TypedChoiceField': { 'param': \"coerce=,empty_value=''\", },\n    'DecimalField': { 'param': \"max_value=None, min_value=None, max_digits=None, decimal_places=None\", },\n    'FilePathField': { 'param': \"path=[[path]], match=None, recursive=False, allow_files=True, allow_folders=False\", },\n    'FloatField': { 'param': \"max_value=None, min_value=None\", },\n    'IntegerField': { 'param': \"max_value=None, min_value=None\", },\n    'GenericIPAddressField': { 'param': \"protocol='both', unpack_ipv4=False\", },\n    'MultipleChoiceField': { 'param': \"choices=models.[[choice_name]]\", },\n    'TypedMultipleChoiceField': { 'param': \"coerce=,empty_value=''\", },\n    'RegexField': {'param': \"regex='[[regex]]', max_length=None, min_length=None\", },\n    'URLField': { 'param': \"max_length=None, min_length=None\", },\n    'ComboField': { 'param': \"fields=[[fields]]\", },    \n}\n\n\nwidgets = [\n    \"ok_cancel\",\n    \"button '[[url]]' '[[description]]' '[[name]]' '[[target]]'\"\n    \"action_table '[[action]]' '[[description]]' '[[name]]' '[[target]]'\",\n    \"print_table '[[description]]' '[[target]]'\",\n    \"new_row '[[description]]' '[[target]]'\",\n    \"edit_row '[[description]]' '[[target]]'\",\n    \"view_row '[[description]]' '[[dx]]' '[[dy]]' , '[[target]]'\",\n    \"print_row '[[description]]' '[[target]]'\",\n    \"action_row '[[action]]' '[[description]]' '[[name]]' '[[target]]'\",\n    \"delete_row '[[description]]' '[[target]]'\",\n    \"list_field '[[field]]' '[[name]]' '[[description]]' '[[target]]'\"\n    \"edit_field '[[field]]' '[[name]]' '[[description]]' '[[target]]'\"\n    \"action_field '[[field]]' '[[action]]' '[[description]]' '[[name]]' '[[target]]'\",\n    \"jscript_link '[[href]]'\",\n    \"css_link '[[href]]'\",\n    ]\n    \n    \ndef apppack():\n    ret = []\n    for ff in os.listdir(settings.APP_PACK_PATH):\n        if os.path.isdir(os.path.join(settings.APP_PACK_PATH, ff)):\n            if not ff.startswith('_'):\n                ret.append([ff, ff])\n    return ret\n",
                "main tools",
                "schbuilder",
                true,
                "",
                "Pytigon builder",
                "gen.for_field('SChAppSet', 'schapp_set', 'Applications', prefix=\"up\", template_name=\"schbuilder/schapp2.html\")\ngen.for_field('SChApp', 'schappmenu_set', 'Menu', prefix=\"wiki\", template_name=\"schbuilder/schappmenu2.html\")\n#gen.standard('SChAppMenu', u'SChAppMenu', prefix=\"wiki\")",
                "icon:fa_building",
                "import shutil\nimport json\nimport zipfile\nimport base64\nimport platform\nimport polib\nimport locale\nimport codecs\nimport signal\nimport os\nimport io\nimport ctypes \nimport time\nimport configparser\n\nfrom django.db import transaction\nfrom django.urls import reverse\n\nfrom schlib.schviews.viewtools import change_pos, duplicate_row\nfrom schlib.schtasks.base_task import get_process_manager\nimport schlib.schindent.indent_style\nfrom schlib.schindent.indent_tools import convert_js\nfrom schlib.schdjangoext.django_ihtml import ihtml_to_html\n\nfrom schlib.schfs.vfstools import ZipWriter, open_and_create_dir\nfrom schlib.schtools.install import extract_ptig\nfrom schlib.schtools.process import py_run\nfrom schlib.schtools.platform_info import platform_name\n\nfrom ext_lib.pygettext import main as gtext\n\ntry:\n    import sass\nexcept:\n    sass =  None\n\n \n_template=\"\"\"\n        [ gui_style | {{appset.gui_type}}({{appset.gui_elements}}) ]\n        [ title  | {{appset.title}} ]\n        [ start_page | {{start_page}} ]\n        [ plugins | {{appset.plugins}} ]\n\"\"\"\n\nappset_attr=sorted([field.name for field in models.SChAppSet._meta.fields if field.name not in ('parent','id')])\napp_attr=sorted([field.name for field in models.SChApp._meta.fields if field.name not in ('parent','id')])\nchoice_attr=sorted([field.name for field in models.SChChoice._meta.fields if field.name not in ('parent','id')])\nchoice_item_attr=sorted([field.name for field in models.SChChoiceItem._meta.fields if field.name not in ('parent','id')])\ntable_attr=sorted([field.name for field in models.SChTable._meta.fields if field.name not in ('parent','id')])\nfield_attr=sorted([field.name for field in models.SChField._meta.fields if field.name not in ('parent','id')])\nview_attr=sorted([field.name for field in models.SChView._meta.fields if field.name not in ('parent','id')])\nstatic_attr=sorted([field.name for field in models.SChStatic._meta.fields if field.name not in ('parent','id')])\ntemplate_attr=sorted([field.name for field in models.SChTemplate._meta.fields if field.name not in ('parent','id')])\nappmenu_attr=sorted([field.name for field in models.SChAppMenu._meta.fields if field.name not in ('parent','id')])\nform_attr=sorted([field.name for field in models.SChForm._meta.fields if field.name not in ('parent','id')])\nformfield_attr=sorted([field.name for field in models.SChFormField._meta.fields if field.name not in ('parent','id')])\ntask_attr=sorted([field.name for field in models.SChTask._meta.fields if field.name not in ('parent','id')])\nfiles_attr=sorted([field.name for field in models.SChFiles._meta.fields if field.name not in ('parent','id')])\nconsumer_attr=sorted([field.name for field in models.SChChannelConsumer._meta.fields if field.name not in ('parent','id')])\n\ndef callback_fun_tab(obj1, obj2):\n    fields_tmp = []\n    for field in obj1.schfield_set.all():\n        field.parent = obj2\n        fields_tmp.append(field)\n    for field in obj2.schfield_set.all():\n        field.parent = obj1\n        field.save()\n    for field in fields_tmp:\n        field.save()\n\ndef change_tab_pos(\n    request,\n    app,\n    tab,\n    pk,\n    forward=True,\n    field=None,\n    callback_fun=None\n    ):\n    return change_pos(request, app, tab, pk, forward, field, callback_fun_tab)\n\ndef change_menu_pos(\n    request,\n    app,\n    tab,\n    pk,\n    forward=True,\n    field=None,\n    callback_fun=None\n    ):\n    return change_pos(request, app, tab, pk, forward, field)\n\ndef change_pos_form_field(\n    request,\n    app,\n    tab,\n    pk,\n    forward=True,\n    field=None,\n    callback_fun=None\n    ):\n    return change_pos(request, app, tab, pk, forward, field)\n\n\ndef template_to_file(base_path, template, file_name, context):\n    txt = render_to_string('schbuilder/wzr/%s.html' % template, context)\n    f = codecs.open(base_path+\"/\"+file_name, 'w', encoding='utf-8')\n    f.write(txt)\n    f.close()\n\ndef template_to_i_file(base_path, template, file_name, context):\n    f=open(template,\"rt\")\n    txt_in = f.read()\n    f.close()\n    t = Template(_template)\n    try:\n        txt = t.render(Context(context))\n    except:\n        import traceback\n        import sys\n        print(sys.exc_info()[0])\n        print(traceback.print_exc())\n    try:\n        if type(txt_in)==str:\n            txt2 = txt_in.replace('$$'+'$', txt)\n        else:\n            txt2 = txt_in.decode('utf-8').replace('$$'+'$', txt)\n    except:\n        import traceback\n        import sys\n        print(sys.exc_info()[0])\n        print(traceback.print_exc())\n\n    f = open(base_path+\"/\"+file_name,\"wb\")\n    if type(txt_in)==str:\n        f.write(txt2.encode('utf-8'))\n    else:\n        f.write(txt2.encode('utf-8'))\n    f.close()\n\ndef str_to_file(base_path, buf, file_name):\n    f = open(base_path+\"/\"+file_name,\"wb\")\n    if buf:\n        if type(buf)==str:\n            f.write(buf.encode('utf-8'))\n        else:\n            f.write(buf)\n    f.close()\n\ndef obj_to_array(obj, attrs):\n    ret = []\n    for attr in attrs:\n        ret.append(getattr(obj, attr.strip()))\n    return ret\n\ndef array_dict(array, attrs):\n    ret = {}\n    i=0\n    for attr in attrs:\n        ret[attr.strip()]=array[i]\n        i+=1\n    return ret\n\ndef copy_files_and_dirs(src, dst):\n    names = os.listdir(src)\n    if not os.path.exists(dst):\n        os.makedirs(dst)\n    errors = []\n    for name in names:\n        srcname = os.path.join(src, name)\n        dstname = os.path.join(dst, name)\n        try:\n            if os.path.isdir(srcname):\n                copy_files_and_dirs(srcname, dstname)\n            else:\n                shutil.copy2(srcname, dstname)\n        except (IOError, os.error) as why:\n            errors.append((srcname, dstname, str(why)))\n        except shutil.Error as err:\n            errors.extend(err.args[0])\n    if errors:\n        raise shutil.Error(errors)\n\ndef run_python_shell_task2(request):\n    id = get_process_manager().put(request, \"python-shell\", \"python3\", '-i')\n    new_url = make_href(\"../../schsys/thread/%d/edit/\" % id)\n    return HttpResponseRedirect(new_url)\n\ndef run_python_shell_task_base(request, base_path, appset_name):\n    command = \"from app_sets.%s.manage import *\" % appset_name\n    pconsole = settings.PYTHON_CONSOLE.split(' ')\n    pconsole[0]=\">>>\" + pconsole[0]\n    pconsole.append('-i')\n    pconsole.append('-c')\n    pconsole.append(command)\n    param = [\"python-shell\",] + pconsole\n    id = get_process_manager().put(request, *param)\n    return id\n\ndef run_python_shell_task(request, base_path, appset_name):\n    id = run_python_shell_task_base(request, base_path, appset_name)\n    new_url = make_href(\"../../schsys/thread/%d/edit/\" % id)\n    return HttpResponseRedirect(new_url)\n\n\ndef make_messages(src_path, path, name, outpath=None, ext_locales=[]):\n    backup_argv = sys.argv\n    \n    sys.argv = [None, '-a', '-d', name, '-p', path]\n\n    for root, dirs, files in os.walk(src_path):\n        for f in files:\n            if f.endswith('.py'):\n                p = os.path.join(root, f)\n                sys.argv.append(p)\n    gtext()\n\n    wzr_filename = os.path.join(path, name+'.pot')\n    for pos in os.scandir(path):\n        if pos.is_dir():            \n            lang = pos.name\n            ftmp = os.path.join(path, lang)\n            if outpath:\n                ftmp = os.path.join(ftmp, outpath)\n            filename = os.path.join(ftmp, name + '.po')\n            old_filename = filename.replace('.po', '.bak')\n            mo_filename = filename.replace('.po', '.mo')\n            try:\n                os.remove(old_filename)\n            except:\n                pass\n            try:\n                os.rename(filename, old_filename)\n            except:\n                pass\n\n            wzr = polib.pofile(wzr_filename)\n            if os.path.exists(old_filename):\n                po = polib.pofile(old_filename)\n            else:\n                po = polib.POFile()\n            po.merge(wzr)\n            \n            #for pos2 in ext_locales:\n            #    ftmp = os.path.join(pos2[1],lang)\n            #    if outpath:\n            #        ftmp = os.path.join(ftmp, outpath)\n            #    ext_filename = os.path.join(ftmp, name+'.po')\n            #    if os.path.exists(ext_filename):\n            #        ext_po = polib.pofile(ext_filename)\n            #        po.merge(ext_po)\n                \n            po.save(filename)\n            po.save_as_mofile(mo_filename)\n\n    sys.argv = backup_argv\n\n\ndef locale_gen_internal(pk):\n    app_pack = models.SChAppSet.objects.get(id=pk)\n\n    base_path = settings.APP_PACK_PATH\n    app_path = os.path.join(base_path, app_pack.name)\n    locale_path = os.path.join(app_path, 'locale')\n\n    ext_apps = []\n    ext_locales = []\n    if app_pack.ext_apps:\n        for pos in app_pack.ext_apps.split(','):\n            pos2 = pos.split('.')[0]\n            if pos2 and not pos2 in ext_apps:\n                ext_apps.append(pos2)\n                app_path2 = os.path.join(base_path, pos2)\n                locale_path2 = os.path.join(app_path2, 'locale')                \n                ext_locales.append([app_path2, locale_path2])\n    make_messages(app_path, locale_path, 'django', 'LC_MESSAGES', ext_locales)\n\n    template_path = os.path.join(app_path, \"templates\")\n\n    to_remove = []\n    for root, dirs, files in os.walk(template_path):\n        for f in files:\n            if f.endswith('.html'):\n                p = os.path.join(root, f)\n                to_remove.append(p)\n\n    for pos in to_remove:\n        os.unlink(pos)\n\n    return { 'object_list': [[ 'OK' ],] }\n        \n\ndef prj_import_from_str(s):\n    object_list = []\n    prj = json.loads(s)\n    with transaction.atomic():\n        appset = models.SChAppSet(**array_dict(prj[0], appset_attr))\n        appset.save()\n    \n        apps_array=prj[1]\n        for app_pos in apps_array:\n            app = models.SChApp(**array_dict(app_pos[0], app_attr))\n            app.parent=appset\n            app.save()\n    \n            tables_array = app_pos[1]\n            for table_pos in tables_array:\n                table = models.SChTable(**array_dict(table_pos[0], table_attr))\n                table.parent=app\n                table.save()\n    \n                fields_array=table_pos[1]\n                for field_pos in fields_array:\n                    field = models.SChField(**array_dict(field_pos, field_attr))\n                    field.parent=table\n                    field.save()\n    \n    \n            choices_array = app_pos[2]\n            for choice_pos in choices_array:\n                choice = models.SChChoice(**array_dict(choice_pos[0], choice_attr))\n                choice.parent=app\n                choice.save()\n    \n                choice_item_array=choice_pos[1]\n                for item_pos in choice_item_array:\n                    choice_item = models.SChChoiceItem(**array_dict(item_pos, choice_item_attr))\n                    choice_item.parent=choice\n                    choice_item.save()\n    \n            views_array=app_pos[3]\n            for view_pos in views_array:\n                view = models.SChView(**array_dict(view_pos, view_attr))\n                view.parent=app\n                view.save()\n    \n            templates_array=app_pos[4]\n            for template_pos in templates_array:\n                template = models.SChTemplate(**array_dict(template_pos, template_attr))\n                template.parent=app\n                template.save()\n    \n            appmenus = app.schappmenu_set.all()\n            appmenus_array=app_pos[5]\n            for appmenu_pos in appmenus_array:\n                appmenu = models.SChAppMenu(**array_dict(appmenu_pos, appmenu_attr))\n                appmenu.parent=app\n                appmenu.save()\n    \n            forms_array = app_pos[6]\n            for form_pos in forms_array:\n                form = models.SChForm(**array_dict(form_pos[0], form_attr))\n                form.parent=app\n                form.save()\n    \n                formfields_array=form_pos[1]\n                for field_pos in formfields_array:\n                    field = models.SChFormField(**array_dict(field_pos, formfield_attr))\n                    field.parent=form\n                    field.save()\n    \n    \n            tasks_array=app_pos[7]\n            for task_pos in tasks_array:\n                task = models.SChTask(**array_dict(task_pos, task_attr))\n                task.parent=app\n                task.save()\n    \n            consumers_array=app_pos[8]\n            for consumer_pos in consumers_array:\n                consumer = models.SChChannelConsumer(**array_dict(consumer_pos, consumer_attr))\n                consumer.parent=app\n                consumer.save()\n    \n    \n            files_array=app_pos[9]\n            for file_pos in files_array:\n                f = models.SChFiles(**array_dict(file_pos, files_attr))\n                f.parent=app\n                f.save()\n    \n        statics_array=prj[2]\n        for static in statics_array:\n            s = models.SChStatic(**array_dict(static, static_attr))\n            s.parent=appset\n            s.save()\n    \n    object_list.append((datetime.datetime.now().time().isoformat(), 'SUCCESS:', \"\"))    \n\n    return { 'object_list': reversed(object_list) }\n\n"
            ],
            [
                [
                    [
                        null,
                        "",
                        true,
                        "",
                        "SChAppSet",
                        "['id']",
                        null,
                        "def get_ext_apps(self, tab=None):\n    if tab:\n        ret = tab\n    else:\n        ret = []\n    if self.ext_apps:\n        #if self.ext_apps == '*':\n        #    appset_list = SChAppSet.objects.all()\n        #    for pos in appset_list:\n        #        if pos.name == self.name or not pos.public:\n        #            continue\n        #        app_list = pos.schapp_set.all()\n        #        for pos2 in app_list:\n        #            name = pos.name+\".\"+pos2.name\n        #            if not name in ret:\n        #                ret.append(name)\n        #    return ret\n        #else:\n        l=self.ext_apps.split(',')\n    else:\n        return ret\n    for a in l:\n        if a !='':\n            if not a in ret:\n                ret.append(a)\n    return ret\n\ndef get_ext_apps_without_pack(self):\n    ret = []\n    if self.ext_apps:\n        l=self.ext_apps.split(',')\n        for a in l:\n            if a !='':\n                if '.' in a:\n                    ret.append(a.split('.')[1])\n                else:\n                    ret.append(a)\n    return ret\n\ndef get_ext_modules(self):\n    ret = []\n    if self.ext_apps:\n        l=self.ext_apps.split(',')\n        for a in l:\n            elms=a.split('.')\n            if len(elms)>1:\n                module=elms[-2]\n                ret.append(module)\n    return ret\n\n\ndef __str__(self):\n    return self.name\n\n@classmethod\ndef table_action(cls, list_view, request, data):\n    return standard_table_action(cls, list_view, request, data, ['copy', 'paste'])\n\n    ",
                        null,
                        "Application package",
                        "Application packages"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Title",
                            true,
                            "",
                            "title",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Extern applications",
                            true,
                            "",
                            "ext_apps",
                            true,
                            "max_length=4096",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Plugins",
                            true,
                            "",
                            "plugins",
                            true,
                            "max_length=4096",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "Gui_CHOICES",
                            false,
                            "",
                            "Gui type",
                            true,
                            "",
                            "gui_type",
                            false,
                            "max_length=32",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Gui elements",
                            true,
                            "",
                            "gui_elements",
                            true,
                            "max_length=1024",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            null,
                            false,
                            "False",
                            "Login required",
                            true,
                            null,
                            "login_required",
                            true,
                            null,
                            null,
                            "NullBooleanField",
                            false,
                            null
                        ],
                        [
                            true,
                            null,
                            false,
                            "False",
                            "Public",
                            true,
                            null,
                            "public",
                            true,
                            null,
                            null,
                            "NullBooleanField",
                            false,
                            null
                        ],
                        [
                            true,
                            null,
                            false,
                            "False",
                            "Main pack",
                            true,
                            null,
                            "main",
                            true,
                            null,
                            null,
                            "NullBooleanField",
                            false,
                            null
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Start page",
                            true,
                            "",
                            "start_page",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "User application template",
                            false,
                            "",
                            "user_app_template",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            null,
                            false,
                            null,
                            "Main application entrypoint",
                            false,
                            null,
                            "app_main",
                            true,
                            null,
                            null,
                            "TextField",
                            false,
                            null
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            false,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "HtmlGui_CHOICES",
                            false,
                            "'auto'",
                            "Gui type for pc web browser",
                            true,
                            "",
                            "desktop_gui_type",
                            false,
                            "max_length=32",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "HtmlGui_CHOICES",
                            false,
                            "'auto'",
                            "Gui type for smartfon",
                            true,
                            "",
                            "smartfon_gui_type",
                            false,
                            "max_length=32",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "HtmlGui_CHOICES",
                            false,
                            "'auto'",
                            "Gui type for tablet",
                            true,
                            "",
                            "tablet_gui_type",
                            false,
                            "max_length=32",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "User parameter",
                            true,
                            "",
                            "user_param",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Custom tags",
                            true,
                            "",
                            "custom_tags",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "readme.txt",
                            false,
                            "",
                            "readme_file",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "license.txt",
                            false,
                            "",
                            "license_file",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "install.ini",
                            false,
                            "",
                            "install_file",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Encoded zip file",
                            false,
                            "",
                            "encoded_zip",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChApp",
                        "['id']",
                        null,
                        "def get_models(self):\n    ret = [\"'self'\", ]\n    for app in self.parent.schapp_set.all():\n        for tab in app.schtable_set.all():\n            if app.name == self.name:\n                ret.append(tab.name)\n            else:\n                ret.append(app.name+\".\"+tab.name)\n    if self.parent.ext_apps:\n        ext_apps = self.parent.ext_apps.split(',')\n    else:\n        ext_apps = []\n    if len(ext_apps)>0:\n        for ext_app in ext_apps:\n            if 'schserw.' in ext_app:\n                try:\n                    module = __import__(ext_app+'.models')\n                    app = getattr(module,ext_app.split('.')[1])\n                    models = getattr(app,'models')\n                    for name in dir(models):\n                        obj = getattr(models, name)\n                        if inspect.isclass(obj):\n                            ret.append(ext_app+\".\"+name)\n                except:\n                    pass\n        for ext_app in ext_apps:\n            if not 'schserw.' in ext_app:\n                try:\n                    appset = ext_app.split('.')[0]\n                    appname = ext_app.split('.')[1]\n                    appsetpath = norm_path(os.path.dirname(__file__)+\"/../../\"+appset)\n                    if not appsetpath in sys.path:\n                        sys.path.append(appsetpath)\n                    module = __import__(appname+'.models')\n                    models = getattr(module,'models')\n                    for name in dir(models):\n                        obj = getattr(models, name)\n                        if inspect.isclass(obj):\n                            ret.append(appname+\".\"+name)\n                except:\n                    pass\n    return ret\n\ndef get_urls(self, main=False):\n    ret = []\n    for table in self.schtable_set.all():\n        if table.generic:\n            ret.append('table/' + table.name +\"/-/form/list/\")\n        for field in table.schfield_set.all():\n            if field.is_rel():\n                if field.type[0]=='G':\n                    if field.name == 'parent' and field.rel_to == \"'self'\":\n                        ret.append('table/'+table.name+\"/0/form/tree/\")\n    for view in self.schview_set.all():\n        if view.url and view.url != \"\":\n            if not main:\n                if view.view_type=='r':\n                    url = 'table/' +  view.url + \"/<<pk>>/action/\"+view.name+\"/\"\n                    ret.append(url)\n            if view.view_type=='t':\n                url = 'table/' +  view.url + \"/action/\"+view.name+\"/\"\n                ret.append(url)\n            if view.view_type=='u':\n                if not (main and '?P' in view.url):\n                    ret.append(view.url)\n    for template in self.schtemplate_set.all():\n        if template.direct_to_template:\n            ret.append(template.get_url_name())\n    #for wiki in Page.objects.all(): \n     #   url = 'schwiki/{{%s}}/{{%s}}/view/' % (wiki.subject, wiki.name)\n     #   ret.append(url)             \n    for form in self.schform_set.all():\n        if not form.name.startswith('_'):\n            ret.append('form/' + form.name +\"/\")\n    return ret\n\ndef model_code_start(self):\n    if self.model_code:\n        return self.model_code.split('[[[GEN]]]')[0]\n    else:\n        return \"\"\n    \ndef model_code_end(self):\n    if self.model_code:\n        x = self.model_code.split('[[[GEN]]]')\n        if len(x)>1:\n            return x[1]\n    return \"\"\n\ndef __str__(self):\n    return self.name\n",
                        "",
                        "SChApp",
                        "SChApp"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChAppSet",
                            "GForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Module title",
                            true,
                            "",
                            "module_title",
                            true,
                            "max_length=32",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Title",
                            true,
                            "",
                            "title",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "False",
                            "Perms",
                            true,
                            "",
                            "perms",
                            false,
                            "",
                            "",
                            "BooleanField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Index",
                            true,
                            "",
                            "index",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Model code",
                            false,
                            "",
                            "model_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "View code",
                            false,
                            "",
                            "view_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Urls code",
                            false,
                            "",
                            "urls_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Tasks code",
                            true,
                            "",
                            "tasks_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            null,
                            false,
                            null,
                            "Consumer code",
                            true,
                            null,
                            "consumer_code",
                            true,
                            null,
                            null,
                            "TextField",
                            false,
                            null
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            false,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Urser parameter",
                            true,
                            "",
                            "user_param",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChChoice",
                        "['id']",
                        null,
                        "def __str__(self):\n    return self.name",
                        "",
                        "SChChoice",
                        "SChChoice"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Verbose name",
                            true,
                            "",
                            "verbose_name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChChoiceItem",
                        "['id']",
                        null,
                        "def __str__(self):\n    return self.name",
                        "",
                        "SChChoiceItem",
                        "SChChoiceItem"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChChoice",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Value",
                            true,
                            "",
                            "value",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChTable",
                        "['id']",
                        null,
                        "def get_models(self):\n    return self.parent.get_models()\n\ndef get_base_table(self):\n    l = self.base_table.split('.')\n    if len(l)>1 and l[-2]!='models':\n        return l[-1]\n    else:\n        return self.base_table\n\ndef __str__(self):\n    return self.name",
                        "",
                        "SChTable",
                        "SChTable"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Base table",
                            true,
                            "",
                            "base_table",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Verbose name",
                            true,
                            "",
                            "verbose_name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Verbose name plural",
                            true,
                            "",
                            "verbose_name_plural",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Metaclass code",
                            false,
                            "",
                            "metaclass_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Table code",
                            false,
                            "",
                            "table_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "\"['id']\"",
                            "Ordering",
                            true,
                            "",
                            "ordering",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            false,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "False",
                            "Generic",
                            true,
                            "",
                            "generic",
                            false,
                            "",
                            "",
                            "BooleanField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Url params",
                            true,
                            "",
                            "url_params",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Proxy model",
                            true,
                            "",
                            "proxy_model",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChField",
                        "['id']",
                        null,
                        "def init_new(self, request, view, param=None):\n    if param:\n        self.type=param\n\n        defaults=self.get_field_defaults()\n        defaults['type'] = param\n\n        for key in defaults:\n            value = getattr(self, key)\n            if not value:\n                setattr(self, key, defaults[key])\n        return defaults\n    else:\n        return None\n\ndef save(self, force_insert=False, force_update=False):\n    super(SChField, self).save(force_insert, force_update)\n\ndef __str__(self):\n    return self.name\n\ndef is_rel(self):\n    if 'Key' in self.type or 'Many' in self.type:\n        return True\n    else:\n        return False\n\ndef is_generic_rel(self):\n    if self.is_rel() and self.type[0]=='G':\n        return True\n    else:\n        return False\n \ndef has_choices(self):\n    if self.type in ('CharField',):\n        return True\n    else:\n        return False\n\ndef get_models(self):\n    return self.parent.get_models()\n\ndef as_declaration(self):\n    #if 'TreeForeignKey' in self.type:\n    #    if not self.parent.base_table in (\"\", \"models.Model\"):\n    #        return \"\"\n    \n    if self.type == 'UserField':\n        return self.param\n    type_desc = dict(Field_CHOICES)[self.type]\n    if type_desc.endswith('!'):\n        module = \"ext_models.\"\n    else:\n        module = 'models.'\n    if self.is_rel():\n        rel_model =self.rel_to.split('.')[-1]\n\n        if self.type[0]=='G':\n            if 'ForeignKey' in self.type:\n                ret = \"%s = %s%s(%s, on_delete=models.CASCADE, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n                    (self.name, module, self.type[1:], rel_model, self.null, self.blank, self.editable, self.description)\n            else:\n                ret = \"%s = %s%s(%s, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n                    (self.name, module, self.type[1:], rel_model, self.null, self.blank, self.editable, self.description)\n        else:\n            if 'ForeignKey' in self.type:\n                ret = \"%s = %s%s(%s, on_delete=models.CASCADE, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n                    (self.name, module, self.type, rel_model, self.null, self.blank, self.editable, self.description)\n            else:\n                ret = \"%s = %s%s(%s, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n                    (self.name, module, self.type, rel_model, self.null, self.blank, self.editable, self.description)\n    else:\n        ret = \"%s = %s%s('%s', null=%s, blank=%s, editable=%s, \" % \\\n            (self.name, module, self.type, self.description, self.null, self.blank, self.editable)\n    if self.unique:\n        ret+= \"unique=%s,\" % self.unique\n    if self.default and len(self.default)>0:\n        ret+= \"default=%s,\" % self.default\n    if self.help_text and len(self.help_text)>0:\n        ret+= \"help_text=%s,\" % self.help_text\n    if self.choices:\n        ret+=\"choices=%s,\" % self.choices\n    if self.param and len(self.param)>0:\n        ret+= self.param\n        #.replace(':','=')\n    ret += \")\"\n    return ret\n\ndef get_field_defaults(self):\n    ret = field_default.copy()\n    if self.type in field_defaults:\n        for key, value in field_defaults[self.type].items():\n            ret[key]=value\n    return ret\n\ndef get_rel_to(self):\n    if self.rel_to == \"'self'\":\n        return self.parent.name\n    else:\n        return self.rel_to\n        \ndef get_relate_set_name(self):\n    if self.param and 'related_name' in self.param:\n        for pos in self.param.split(','):\n            rec=pos.split('=')\n            if rec[0].strip()=='related_name':\n                return rec[1].replace(\"'\",\"\").replace(\"\\\"\",\"\").strip()\n    return self.parent.name.lower()+'_set'\n    \n@classmethod\ndef table_action(cls, list_view, request, data):\n    return standard_table_action(cls, list_view, request, data, ['copy', 'paste'])\n",
                        "",
                        "SChField",
                        "SChField"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChTable",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Description",
                            true,
                            "",
                            "description",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "Field_CHOICES",
                            false,
                            "",
                            "Type",
                            true,
                            "",
                            "type",
                            false,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "False",
                            "Null",
                            true,
                            "",
                            "null",
                            false,
                            "",
                            "",
                            "BooleanField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "False",
                            "Blank",
                            true,
                            "",
                            "blank",
                            false,
                            "",
                            "",
                            "BooleanField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "False",
                            "Editable",
                            true,
                            "",
                            "editable",
                            false,
                            "",
                            "",
                            "BooleanField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "False",
                            "Unique",
                            true,
                            "",
                            "unique",
                            false,
                            "",
                            "",
                            "BooleanField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "False",
                            "DB index",
                            true,
                            "",
                            "db_index",
                            false,
                            "",
                            "",
                            "BooleanField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Default",
                            true,
                            "",
                            "default",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Help text",
                            true,
                            "",
                            "help_text",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Choices",
                            true,
                            "",
                            "choices",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Relation to",
                            true,
                            "",
                            "rel_to",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Param",
                            true,
                            "",
                            "param",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Url params",
                            true,
                            "",
                            "url_params",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChView",
                        "['id']",
                        null,
                        "def init_new(self, request, view, param=None):\n    if param:\n        self.view_type=param\n        defaults={}\n        defaults['view_type'] = param\n        if param=='r':\n            self.param = 'pk'\n            defaults['param'] = self.param\n        if param=='t':\n            pass\n        if param=='u':\n            defaults['param'] = '**argv'\n            defaults['url_params'] = '{}'\n            defaults['url'] = 'fun/(?P<parm>\\d+)/$'\n        return defaults\n    else:\n        return None\n\ndef get_name(self):\n    if '/' in self.name:\n        return self.name.split('/')[-1]\n    else:\n        return self.name\n\ndef get_url(self):\n    name = self.get_name()\n    if self.view_type == 'u':\n        if self.url_params and self.url_params!=\"\":\n            return \"url('%s', views.%s, %s)\" % (self.url, name, self.url_params)\n        else:\n            return \"url('%s', views.%s)\" % (self.url, name)\n    else:\n        if self.view_type == 'r':\n            bname='gen_row_action'\n        else:\n            bname='gen_tab_action'\n    \n        if self.url_params and self.url_params!=\"\":\n            if '#' in self.name:\n                x = self.name.split('#')\n                return \"%s('%s', '%s', views.%s, %s)\" % (bname, self.url, x[0], x[1], self.url_params)\n            else:\n                return \"%s('%s', '%s', views.%s, %s)\" % (bname, self.url, self.name, name,self.url_params)\n        else:\n            if '#' in self.name:\n                x = self.name.split('#')\n                return \"%s('%s', '%s', views.%s)\" % (bname, self.url, x[0], x[1])\n            else:\n                return \"%s('%s', '%s', views.%s)\" % (bname, self.url, self.name, name)\n\ndef __str__(self):\n    return self.name\n\ndef transform_template_name(self, request, template_name):\n    if '/view_code/py/editor' in request.path:\n        if template_name == 'schsys/db_field_edt.html':\n            return 'schbuilder/db_field_edt_mod.html'\n    return template_name\n\ndef get_models(self):\n    return self.parent.get_models()\n\ndef clean_url(self):\n    return self.url.replace('$', '')",
                        "",
                        "SChView",
                        "SChView"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "View_CHOICES",
                            false,
                            "",
                            "View type",
                            true,
                            "",
                            "view_type",
                            false,
                            "max_length=1",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Param",
                            true,
                            "",
                            "param",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Url",
                            true,
                            "",
                            "url",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "View code",
                            false,
                            "",
                            "view_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            false,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Url params",
                            true,
                            "",
                            "url_params",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "ViewRetType_CHOICES",
                            false,
                            "'U'",
                            "Return value type",
                            true,
                            "",
                            "ret_type",
                            false,
                            "max_length=1",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        null,
                        true,
                        null,
                        "SChStatic",
                        "['id']",
                        "",
                        "def __str__(self):\n    return self.get_type_display() + \"/\" + self.name\n",
                        "",
                        "Static file",
                        "Static files"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChAppSet",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "Static_CHOICES",
                            false,
                            "",
                            "Type",
                            true,
                            "",
                            "type",
                            false,
                            "max_length=1",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Code",
                            false,
                            "",
                            "code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            false,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChTemplate",
                        "['id']",
                        null,
                        "def get_url_name(self):\n    if self.url and self.url!=\"\":\n        return self.url\n    else:\n        return self.name\n\ndef get_url(self):\n    if self.direct_to_template:\n        url_name = self.get_url_name()\n        app_name = self.parent.name\n        template_name = self.name.lower().replace(' ','_')+\".html\"\n        if self.url_parm:\n            param = self.url_parm\n        else:\n            param = \"\"\n        return \"url(r'^%s', TemplateView.as_view(template_name='%s/%s'), {%s})\" % (url_name, app_name, template_name, param )\n    else:\n        return None\n            \ndef _get_table_fields(self, tables):\n    ret=[]\n    if len(tables)==1:\n        table = tables[0]\n        for pos in table.schfield_set.all():\n            ret.append(pos.name)\n        if table.base_table and table.base_table != None:\n            ret2 = self._get_table_fields(SChTable.objects.filter(name=table.base_table))\n            for pos in ret2:\n                ret.append(pos)\n    return ret\n\ndef get_table_fields(self):\n    return self._get_table_fields(self.parent.schtable_set.filter(parent=self.parent).filter(name=self.name))\n\ndef get_table_methods(self):\n    ret=[]\n    tables = self.parent.schtable_set.filter(parent=self.parent).filter(name=self.name)\n    if len(tables)==1:\n        table = tables[0]\n        if table.table_code:\n            for line in table.table_code.split('\\n'):\n                if line.startswith('def'):\n                    ret.append(line[4:])\n    return ret\n\ndef get_django_filters(self):\n    ret = []\n    django_engine = engines['django'].engine\n    for pos in django_engine.template_builtins:\n        for f in pos.filters:\n            ret.append(f)\n    return ret\n\ndef get_django_tags(self):\n    ret = []\n    django_engine = engines['django'].engine\n    for pos in django_engine.template_builtins:\n        for f in pos.tags:\n            ret.append(f)\n    return ret\n\ndef get_blocks(self):\n    ret=[]\n    form_path = os.path.join(os.path.dirname(__file__)+\"/../../../templates_src/form.ihtml\")\n    f = open(form_path, \"rt\")\n    buf = f.read()\n    f.close()\n    for line in buf.split('\\n'):\n        if \"%%\" in line:\n            ret.append(superstrip(line).replace(' ',''))\n    return ret\n\ndef get_template_widgets(self):\n    return widgets\n\ndef transform_template_name(self, request, template_name):\n    if 'template_code/py/editor' in request.path:\n        if template_name == 'schsys/db_field_edt.html':\n            return 'schbuilder/db_field_edt_template.html'\n    return template_name\n\ndef __str__(self):\n    return self.name\n    ",
                        "",
                        "SChTemplate",
                        "SChTemplate"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Direct to template",
                            true,
                            "",
                            "direct_to_template",
                            true,
                            "",
                            "",
                            "NullBooleanField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Url",
                            true,
                            "",
                            "url",
                            true,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Parameters passed to the template",
                            true,
                            "",
                            "url_parm",
                            true,
                            "max_length=128",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Template code",
                            false,
                            "",
                            "template_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Static files",
                            true,
                            "",
                            "static_files",
                            true,
                            "",
                            "SChStatic",
                            "ManyToManyField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Mount component tags",
                            true,
                            "",
                            "tags_mount",
                            true,
                            "max_length=256",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        true,
                        "",
                        "SChAppMenu",
                        "['id']",
                        null,
                        "def not_standard_icon_size(self):\n    if self.icon_size=='1':\n        return False\n    else:\n        return True\n\ndef get_perms(self):\n    if self.perms and self.perms!=\" \":\n        return \"'%s'\" % self.perms\n    else:\n        return \"None\"\n\ndef get_main_urls(self):\n    return self.parent.get_urls(main=True)\n\ndef get_urls(self):\n    return self.parent.get_urls(main=False)\n\ndef get_url_type_ext(self):\n    if self.url_type in [None, '-']:\n        return \"?schtml=desktop\"\n    elif self.url_type == 'browser':\n        return ''\n    else:\n        return '?schtml='+self.url_type\n\ndef clean_url(self):\n    return self.url.replace('$', '')\n\ndef __str__(self):\n    return self.name",
                        "",
                        "SChAppMenu",
                        "SChAppMenu"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Url",
                            true,
                            "",
                            "url",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "Url_CHOICES",
                            false,
                            "'-'",
                            "Url type",
                            true,
                            "",
                            "url_type",
                            true,
                            "max_length=16",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Perms",
                            true,
                            "",
                            "perms",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Icon",
                            true,
                            "",
                            "icon",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "IconSize_CHOICES",
                            false,
                            "'1'",
                            "Icon size",
                            true,
                            "",
                            "icon_size",
                            false,
                            "max_length=1",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        null,
                        true,
                        null,
                        "SChForm",
                        "['id']",
                        null,
                        null,
                        "",
                        "Form",
                        "Form"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Module",
                            true,
                            "",
                            "module",
                            true,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Process code",
                            true,
                            "",
                            "process_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "End class code",
                            true,
                            "",
                            "end_class_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "End code",
                            true,
                            "",
                            "end_code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            true,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        null,
                        true,
                        null,
                        "SChFormField",
                        "['id']",
                        null,
                        "def init_new(self, request, view, param=None):\n    if param:\n        self.type=param\n\n        defaults=self.get_field_defaults()\n        defaults['type'] = param\n\n        for key in defaults:\n            setattr(self, key, defaults[key])\n        return defaults\n    else:\n        return None\n\ndef as_declaration(self):\n    if self.type == 'UserField':\n        return self.param        \n    ret = \"%s = forms.%s(label=_('%s'), required=%s, \" % \\\n            (self.name, self.type, self.label, self.required)\n    if self.initial:\n        ret+= \"initial=%s,\" % self.initial\n    if self.widget and len(self.widget)>0:\n        ret+= \"widget=%s,\" % self.widget\n    if self.help_text and len(self.help_text)>0:\n        ret+= \"help_text=%s,\" % self.help_text\n    if self.error_messages:\n        ret+=\"error_messages=%s,\" % self.error_messages\n    if self.param and len(self.param)>0:\n        ret+= self.param\n    ret += \")\"\n    return ret\n\ndef get_field_defaults(self):\n    ret = formfield_default.copy()\n    if self.type in formfield_defaults:\n        for key, value in formfield_defaults[self.type].items():\n            ret[key]=value\n    return ret",
                        "",
                        "Form field",
                        "Form field"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChForm",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "FormField_CHOICES",
                            false,
                            "",
                            "Type",
                            true,
                            "",
                            "type",
                            false,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Required",
                            true,
                            "",
                            "required",
                            true,
                            "",
                            "",
                            "NullBooleanField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Label",
                            true,
                            "",
                            "label",
                            false,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Initial",
                            true,
                            "",
                            "initial",
                            true,
                            "max_length=256",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Widget",
                            true,
                            "",
                            "widget",
                            true,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Help text",
                            true,
                            "",
                            "help_text",
                            true,
                            "max_length=256",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Error messages",
                            true,
                            "",
                            "error_messages",
                            true,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Param",
                            true,
                            "",
                            "param",
                            true,
                            "max_length=64",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        null,
                        true,
                        null,
                        "SChTask",
                        "['id']",
                        null,
                        "def transform_template_name(self, request, template_name):\n    if '/code/py/editor' in request.path:\n        if template_name == 'schsys/db_field_edt.html':\n            return 'schbuilder/db_field_edt_task.html'\n    return template_name\n",
                        "",
                        "SChTask",
                        "SChTask"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Code",
                            true,
                            "",
                            "code",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            true,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        null,
                        true,
                        null,
                        "SChFiles",
                        "['id']",
                        "",
                        null,
                        "",
                        "SChFiles",
                        "SChFiles"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "FileType_CHOICES",
                            false,
                            "",
                            "File  type",
                            true,
                            "",
                            "file_type",
                            false,
                            "max_length=3",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=256",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Content",
                            false,
                            "",
                            "content",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        null,
                        true,
                        null,
                        "SChLocale",
                        "['id']",
                        "",
                        null,
                        "",
                        "Locale",
                        "Locales"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChAppSet",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=16",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        null,
                        true,
                        null,
                        "SChTranslate",
                        "['id']",
                        "",
                        null,
                        "",
                        "Translate",
                        "Translate"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            false,
                            "",
                            "parent",
                            false,
                            "",
                            "SChLocale",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Description",
                            true,
                            "",
                            "description",
                            false,
                            "max_length=1024",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Translation",
                            true,
                            "",
                            "translation",
                            true,
                            "max_length=1024",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Status",
                            false,
                            "",
                            "status",
                            true,
                            "max_length=16",
                            "",
                            "CharField",
                            false,
                            ""
                        ]
                    ]
                ],
                [
                    [
                        null,
                        null,
                        true,
                        null,
                        "SChChannelConsumer",
                        "['id']",
                        null,
                        "def init_new(self, request, view, param=None):\n    if param:\n        self.view_type=param\n        defaults={}\n        defaults['consumer_type'] = param\n        return defaults\n    else:\n        return None\n",
                        null,
                        "Channel consumer",
                        "Channel consumers"
                    ],
                    [
                        [
                            false,
                            "",
                            false,
                            "",
                            "Parent",
                            true,
                            "",
                            "parent",
                            false,
                            "",
                            "SChApp",
                            "GHiddenForeignKey",
                            false,
                            ""
                        ],
                        [
                            false,
                            "",
                            false,
                            "",
                            "Name",
                            true,
                            "",
                            "name",
                            false,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            false,
                            "Consumer_CHOICES",
                            false,
                            null,
                            "Consumer type",
                            true,
                            null,
                            "consumer_type",
                            false,
                            "max_length=64",
                            null,
                            "CharField",
                            false,
                            null
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Url",
                            true,
                            "",
                            "url",
                            true,
                            "max_length=255",
                            "",
                            "CharField",
                            false,
                            ""
                        ],
                        [
                            true,
                            null,
                            false,
                            null,
                            "Consumer code",
                            false,
                            null,
                            "consumer_code",
                            true,
                            null,
                            null,
                            "TextField",
                            false,
                            null
                        ],
                        [
                            true,
                            "",
                            false,
                            "",
                            "Doc",
                            false,
                            "",
                            "doc",
                            true,
                            "",
                            "",
                            "TextField",
                            false,
                            ""
                        ]
                    ]
                ]
            ],
            [
                [
                    [
                        "Field_CHOICES",
                        "Field_CHOICES"
                    ],
                    [
                        [
                            "AutoField",
                            "AutoField"
                        ],
                        [
                            "BooleanField",
                            "BooleanField"
                        ],
                        [
                            "CharField",
                            "CharField"
                        ],
                        [
                            "CommaSeparatedIntegerField",
                            "CommaSeparatedIntegerField"
                        ],
                        [
                            "DateField",
                            "DateField"
                        ],
                        [
                            "DateTimeField",
                            "DateTimeField"
                        ],
                        [
                            "DecimalField",
                            "DecimalField"
                        ],
                        [
                            "EmailField",
                            "EmailField"
                        ],
                        [
                            "FileField",
                            "FileField"
                        ],
                        [
                            "FilePathField",
                            "FilePathField"
                        ],
                        [
                            "FloatField",
                            "FloatField"
                        ],
                        [
                            "ImageField",
                            "ImageField"
                        ],
                        [
                            "IntegerField",
                            "IntegerField"
                        ],
                        [
                            "GenericIPAddressField",
                            "GenericIPAddressField"
                        ],
                        [
                            "NullBooleanField",
                            "NullBooleanField!"
                        ],
                        [
                            "PositiveIntegerField",
                            "PositiveIntegerField"
                        ],
                        [
                            "PositiveSmallIntegerField",
                            "PositiveSmallIntegerField"
                        ],
                        [
                            "SlugField",
                            "SlugField"
                        ],
                        [
                            "SmallIntegerField",
                            "SmallIntegerField"
                        ],
                        [
                            "TextField",
                            "TextField"
                        ],
                        [
                            "TimeField",
                            "TimeField"
                        ],
                        [
                            "URLField",
                            "URLField"
                        ],
                        [
                            "XMLField",
                            "XMLField"
                        ],
                        [
                            "ForeignKey",
                            "ForeignKey"
                        ],
                        [
                            "GForeignKey",
                            "GenericForeignKey!"
                        ],
                        [
                            "ManyToManyField",
                            "ManyToManyField"
                        ],
                        [
                            "GManyToManyField",
                            "GenericManyToManyField!"
                        ],
                        [
                            "HiddenForeignKey",
                            "HiddenForeignKey"
                        ],
                        [
                            "GHiddenForeignKey",
                            "GenericHiddenForeignKey!"
                        ],
                        [
                            "UserField",
                            "UserField"
                        ],
                        [
                            "ForeignKeyWidthIcon",
                            "ForeignKeyWidthIcon!"
                        ],
                        [
                            "ManyToManyFieldWidthIcon",
                            "ManyToManyFieldWidthIcon!"
                        ],
                        [
                            "AutocompleteTextField",
                            "AutocompleteTextField!"
                        ],
                        [
                            "ForeignKeyExt",
                            "ForeignKeyExt!"
                        ],
                        [
                            "TreeForeignKey",
                            "TreeForeignKey!"
                        ],
                        [
                            "GTreeForeignKey",
                            "GTreeForeignKey!"
                        ]
                    ]
                ],
                [
                    [
                        "Gui_CHOICES",
                        "Gui_CHOICES"
                    ],
                    [
                        [
                            "standard",
                            "standard"
                        ],
                        [
                            "modern",
                            "modern"
                        ],
                        [
                            "tree",
                            "tree"
                        ],
                        [
                            "tray",
                            "tray"
                        ],
                        [
                            "dialog",
                            "dialog"
                        ],
                        [
                            "one_form",
                            "one_form"
                        ]
                    ]
                ],
                [
                    [
                        "IconSize_CHOICES",
                        "IconSize_CHOICES"
                    ],
                    [
                        [
                            "0",
                            "small"
                        ],
                        [
                            "1",
                            "medium"
                        ],
                        [
                            "2",
                            "large"
                        ]
                    ]
                ],
                [
                    [
                        "View_CHOICES",
                        "View_CHOICES"
                    ],
                    [
                        [
                            "t",
                            "Table action"
                        ],
                        [
                            "r",
                            "Row action"
                        ],
                        [
                            "u",
                            "View"
                        ]
                    ]
                ],
                [
                    [
                        "Url_CHOICES",
                        "Url_CHOICES"
                    ],
                    [
                        [
                            "Default",
                            "-"
                        ],
                        [
                            "desktop",
                            "desktop"
                        ],
                        [
                            "panel",
                            "panel"
                        ],
                        [
                            "header",
                            "header"
                        ],
                        [
                            "footer",
                            "footer"
                        ],
                        [
                            "script",
                            "script"
                        ],
                        [
                            "pscript",
                            "pscript"
                        ],
                        [
                            "browser",
                            "browser"
                        ],
                        [
                            "browser_panel",
                            "prowser_panel"
                        ],
                        [
                            "browser_header",
                            "browser_header"
                        ],
                        [
                            "browser_footer",
                            "browser_footer"
                        ]
                    ]
                ],
                [
                    [
                        "FormField_CHOICES",
                        "FormField_CHOICES"
                    ],
                    [
                        [
                            "BooleanField",
                            "BooleanField"
                        ],
                        [
                            "CharField",
                            "CharField"
                        ],
                        [
                            "ChoiceField",
                            "ChoiceField"
                        ],
                        [
                            "TypedChoiceField",
                            "TypedChoiceField"
                        ],
                        [
                            "DateField",
                            "DateField"
                        ],
                        [
                            "DateTimeField",
                            "DateTimeField"
                        ],
                        [
                            "DecimalField",
                            "DecimalField"
                        ],
                        [
                            "EmailField",
                            "EmailField"
                        ],
                        [
                            "FileField",
                            "FileField"
                        ],
                        [
                            "FilePathField",
                            "FilePathField"
                        ],
                        [
                            "FloatField",
                            "FloatField"
                        ],
                        [
                            "ImageField",
                            "ImageField"
                        ],
                        [
                            "IntegerField",
                            "IntegerField"
                        ],
                        [
                            "IPAddressField",
                            "IPAddressField"
                        ],
                        [
                            "GenericIPAddressField",
                            "GenericIPAddressField"
                        ],
                        [
                            "MultipleChoiceField",
                            "MultipleChoiceField"
                        ],
                        [
                            "TypedMultipleChoiceField",
                            "TypedMultipleChoiceField"
                        ],
                        [
                            "NullBooleanField",
                            "NullBooleanField"
                        ],
                        [
                            "RegexField",
                            "RegexField"
                        ],
                        [
                            "TimeField",
                            "TimeField"
                        ],
                        [
                            "URLField",
                            "URLField"
                        ],
                        [
                            "UserField",
                            "UserField"
                        ]
                    ]
                ],
                [
                    [
                        "ViewRetType_CHOICES",
                        "ViewRetType_CHOICES"
                    ],
                    [
                        [
                            "T",
                            "Template"
                        ],
                        [
                            "O",
                            "Odf"
                        ],
                        [
                            "P",
                            "Pdf"
                        ],
                        [
                            "J",
                            "Json"
                        ],
                        [
                            "X",
                            "Xml"
                        ],
                        [
                            "U",
                            "User defined"
                        ]
                    ]
                ],
                [
                    [
                        "HtmlGui_CHOICES",
                        "HtmlGui_CHOICES"
                    ],
                    [
                        [
                            "auto",
                            "auto"
                        ],
                        [
                            "desktop_standard",
                            "desktop_standard"
                        ],
                        [
                            "desktop_modern",
                            "desktop_modern"
                        ],
                        [
                            "desktop_traditional",
                            "desktop_traditional"
                        ],
                        [
                            "tablet_standard",
                            "tablet_standard"
                        ],
                        [
                            "tablet_modern",
                            "tablet_modern"
                        ],
                        [
                            "tablet_traditional",
                            "tablet_traditional"
                        ],
                        [
                            "smartfon_standard",
                            "smartfon_standard"
                        ],
                        [
                            "smartfon_modern",
                            "smartfon_modern"
                        ],
                        [
                            "smartfon_traditional",
                            "smartfon_traditional"
                        ]
                    ]
                ],
                [
                    [
                        "ContentType_CHOICES",
                        "ContentType_CHOICES"
                    ],
                    [
                        [
                            "pythonjs",
                            "pythonjs"
                        ],
                        [
                            "react_pjsx",
                            "react_pjsx"
                        ],
                        [
                            "css",
                            "css"
                        ],
                        [
                            "js",
                            "js"
                        ]
                    ]
                ],
                [
                    [
                        "Static_CHOICES",
                        "Static_CHOICES"
                    ],
                    [
                        [
                            "C",
                            "css (included in desktop.html)"
                        ],
                        [
                            "J",
                            "javascript (included in desktop.html)"
                        ],
                        [
                            "P",
                            "python to javascript (included in desktop.html)"
                        ],
                        [
                            "R",
                            "vue.js component (included in desktop.html)"
                        ],
                        [
                            "I",
                            "sass to css (included in desktop.html)"
                        ],
                        [
                            "U",
                            "custom file (embeded translation for .pyj, .vue, .sass)"
                        ]
                    ]
                ],
                [
                    [
                        "FileType_CHOICES",
                        "FileType_CHOICES"
                    ],
                    [
                        [
                            "f",
                            "TemplateFilters"
                        ],
                        [
                            "t",
                            "TemplateTags"
                        ],
                        [
                            "c",
                            "Custom file"
                        ],
                        [
                            "m",
                            "Management command"
                        ],
                        [
                            "p",
                            "Plugin code"
                        ],
                        [
                            "i",
                            "Plugin template"
                        ],
                        [
                            "l",
                            "Library code"
                        ]
                    ]
                ],
                [
                    [
                        "Consumer_CHOICES",
                        "Consumer_CHOICES"
                    ],
                    [
                        [
                            "WebsocketConsumer",
                            "WebsocketConsumer"
                        ],
                        [
                            "AsyncWebsocketConsumer",
                            "AsyncWebsocketConsumer"
                        ],
                        [
                            "JsonWebsocketConsumer",
                            "JsonWebsocketConsumer"
                        ],
                        [
                            "AsyncJsonWebsocketConsumer",
                            "AsyncJsonWebsocketConsumer"
                        ],
                        [
                            "AsyncHttpConsumer",
                            "AsyncHttpConsumer"
                        ],
                        [
                            "AsyncConsumer",
                            "AsyncConsumer"
                        ],
                        [
                            "SyncConsumer",
                            "SyncConsumer"
                        ]
                    ]
                ]
            ],
            [
                [
                    "",
                    "gen",
                    "pk",
                    "T",
                    "SChAppSet",
                    "",
                    "appset = models.SChAppSet.objects.get(id=pk)\nbase_path = os.path.join(settings.APP_PACK_PATH, appset.name)\nsrc_path = os.path.join(settings.APP_PACK_PATH, \"schdevtools\")\nobject_list = []\ngmt = time.gmtime()\ngmt_str = \"%04d.%02d.%02d %02d:%02d:%02d\" % (gmt[0], gmt[1], gmt[2], gmt[3], gmt[4], gmt[5])\n\nif not os.path.exists(base_path):\n    object_list.append((datetime.datetime.now().time().isoformat(), 'mkdir:', base_path))\n    os.makedirs(base_path, exist_ok=True)\n    os.makedirs(base_path+\"/templates\", exist_ok=True)\n    os.makedirs(base_path+\"/templates/template\", exist_ok=True)\n    os.makedirs(base_path+\"/templates_src\", exist_ok=True)\n    os.makedirs(base_path+\"/templates_src/template\", exist_ok=True)\n    os.makedirs(base_path+\"/apache\", exist_ok=True)\n\napps = appset.schapp_set.all()\n\n#template_to_file(base_path, \"license\", \"LICENSE.txt\", {'appset': appset})\n#template_to_file(base_path, \"readme\", \"README.txt\",  {'appset': appset})\nwith open(os.path.join(base_path, \"README.txt\"), \"wt\") as f:\n    if appset.readme_file:\n        f.write(appset.readme_file)\nwith open(os.path.join(base_path, \"LICENSE.txt\"), \"wt\") as f:\n    if appset.license_file:\n        f.write(appset.license_file)\nwith open(os.path.join(base_path, \"install.ini\"), \"wt\") as f:\n    f.write(\"[DEFAULT]\\nAPPSET_NAME=%s\\n\" % appset.name)\n    f.write(\"GEN_TIME='%s'\\n\\n\" % gmt_str)\n    if appset.install_file:\n        f.write(appset.install_file)\nif appset.app_main:\n    with open(os.path.join(base_path, \"appset_main.py\"), \"wt\") as f:\n        f.write(appset.app_main)\n\ntemplate_to_file(base_path, \"manage\", \"manage.py\",  {'appset': appset})\ntemplate_to_file(base_path, \"init\", \"__init__.py\",  {'appset': appset})\ntemplate_to_file(base_path, \"wsgi\", \"wsgi.py\",  {'appset': appset, 'base_path': base_path.replace('\\\\','/')})\ntemplate_to_file(base_path, \"asgi\", \"asgi.py\",  {'appset': appset, 'base_path': base_path.replace('\\\\','/')})\n\napp_names = []\nfor app in apps:\n    object_list.append((datetime.datetime.now().time().isoformat(), 'create app:', app.name))\n    if not os.path.exists(base_path+\"/\"+app.name):\n        os.makedirs(base_path+\"/\"+app.name, exist_ok=True)\n    if not os.path.exists(base_path+\"/templates_src/\"+app.name):\n        os.makedirs(base_path+\"/templates_src/\"+app.name, exist_ok=True)\n    if not os.path.exists(base_path+\"/templates/\"+app.name):\n        os.makedirs(base_path+\"/templates/\"+app.name, exist_ok=True)\n\n    app_names.append(app.name)\n\n    tables = app.schtable_set.all()\n    choices = app.schchoice_set.all()\n    templates = app.schtemplate_set.all()\n\n    is_tree_table = False\n    gfields = []\n    for table in tables:\n        object_list.append((datetime.datetime.now().time().isoformat(), 'create tab:', table.name))\n        table.tree_table = 0\n        for field in table.schfield_set.filter(type__in=['GForeignKey','GManyToManyField', 'GHiddenForeignKey', 'GTreeForeignKey', 'GHiddenTreeForeignKey']):\n            if field.type in ('GTreeForeignKey', 'GHiddenTreeForeignKey'):\n                is_tree_table = True\n                if table.base_table in (None, \"\", \"models.Model\") and not table.proxy_model:\n                    table.base_table = 'TreeModel'\n                    table.tree_tab = 1\n                else: \n                    table.tree_tab = 2\n            gfields.append(field)\n\n    template_to_file(base_path, \"models\", app.name+\"/models.py\",  {'tables': tables, 'app': app, 'appset': appset, 'choices': choices, 'is_tree_table': is_tree_table })\n\n    views = app.schview_set.all()\n    forms = app.schform_set.all()\n    tasks = app.schtask_set.all()\n    consumers = app.schchannelconsumer_set.all()\n    template_to_file(base_path, \"views\", app.name+\"/views.py\",  {'views': views, 'forms': forms, 'app': app})\n    template_to_file(base_path, \"urls\",  app.name+\"/urls.py\",  {'views': views, 'templates': templates, 'tables': tables, 'forms': forms, 'app': app, 'gfields': gfields})\n    template_to_file(base_path, \"tasks\", app.name+\"/tasks.py\",  {'tasks': tasks, 'app': app})\n    template_to_file(base_path, \"consumers\", app.name+\"/consumers.py\",  {'consumers': consumers, 'app': app})\n\n    for template in templates:\n        str_to_file(base_path, template.template_code, \"templates_src/\"+app.name+\"/\"+template.name.lower().replace(' ','_')+\".ihtml\")\n\n    appmenus = app.schappmenu_set.all()\n    \n    if app.user_param:\n        user_param = str(dict([ pos.split('=') for pos in app.user_param.split('\\n') if pos and '=' in pos ]))\n    else:\n        user_param = '{}'\n    \n    template_to_file(base_path, \"app_init\", app.name+\"/__init__.py\",  {'appmenus': appmenus, 'app': app, 'user_param': user_param})\n\n    for file_obj in app.schfiles_set.all():\n        if file_obj.file_type=='f':\n            file_name = base_path + \"/\" + app.name+\"/templatetags/\"+ file_obj.name + \".py\"\n        elif file_obj.file_type=='t':\n            file_name = base_path + \"/\" + app.name+\"/templatetags/\"+ file_obj.name + \".py\"\n        elif file_obj.file_type=='c':\n            file_name = base_path + \"/\" + app.name+\"/\"+ file_obj.name\n        elif file_obj.file_type=='m':\n            f = open_and_create_dir(base_path + \"/\" + app.name+\"/management/__init__.py\", \"wb\")\n            f.close()\n            f = open_and_create_dir(base_path + \"/\" + app.name+\"/management/commands/__init__.py\",\"wb\")\n            f.close()\n            file_name = base_path + \"/\" + app.name+\"/management/commands/\"+ file_obj.name\n        elif file_obj.file_type=='p':\n            if '/' in file_obj.name:\n                x = file_obj.name.split('/')\n                plugin_name = x[0]\n                file_name = x[1]\n            else:\n                plugin_name = file_obj.name\n                file_name = '__init__'\n            file_name = base_path + \"/plugins/\" + app.name + \"/\" + plugin_name + \"/\" + file_name + \".py\"\n        elif file_obj.file_type=='i':\n            if '/' in file_obj.name:\n                x = file_obj.name.split('/')\n                plugin_name = x[0]\n                file_name = x[1]\n            else:\n                plugin_name = file_obj.name\n                file_name = 'index'\n            file_name = base_path + \"/plugins/\" + app.name + \"/\" + plugin_name + \"/\" + file_name + \".html\"\n            content =  ihtml_to_html(None, file_obj.content)\n            f = open_and_create_dir(file_name,\"wb\")\n            f.write(content.encode('utf-8'))\n            f.close()\n            file_name = None\n        elif file_obj.file_type=='l':\n            f = open_and_create_dir(base_path + \"/applib/__init__.py\", \"wb\")\n            f.close()\n            f = open_and_create_dir(base_path + \"/applib/\" + app.name + \"/__init__.py\", \"wb\")\n            f.close()\n            file_name = base_path + \"/applib/\" + app.name + \"/\"+ file_obj.name + \".py\"\n        else: \n            file_name = None\n            \n        if file_name:\n            f = open_and_create_dir(file_name,\"wb\")\n            if type(file_obj.content)==str:\n                f.write(file_obj.content.encode('utf-8'))\n            else:\n                f.write(file_obj.content)\n            f.close()\n        \n\ntemplate_to_file(base_path, \"apps\", \"apps.py\",  {'appset': appset, 'app_names': app_names })\n\nstatic_files = appset.schstatic_set.all()\n\nif settings.STATIC_APP_ROOT:\n    static_root = os.path.join(settings.STATIC_APP_ROOT, appset.name)\nelse:\n    if settings.STATIC_ROOT:\n        static_root = os.path.join(os.path.join(settings.STATIC_ROOT, 'app'),appset.name)\n    else:\n        static_root = os.path.join(os.path.join(settings.STATICFILES_DIRS[0], 'app'),appset.name)\n\nstatic_scripts = os.path.join(static_root,'js')\nstatic_style = os.path.join(static_root,'css')\nstatic_components = os.path.join(static_root,'components')\n\noffline_support = False\n\nfor static_file in static_files:\n    txt = static_file.code\n    typ = static_file.type\n    dest_path = None\n    if static_file.name=='sw.js':\n        offline_support = True\n        \n    if static_file.type=='U':\n        dest_path = os.path.join(static_root,static_file.name)\n        if '.pyj' in static_file.name:\n            dest_path = os.path.join(static_root,static_file.name.replace('.pyj', '.js'))\n            typ = 'P'\n        elif '.sass' in static_file.name:\n            dest_path = os.path.join(static_root,static_file.name.replace('.sass', '.css'))\n            typ = 'I'\n        elif '.vue' in static_file.name:\n            dest_path = os.path.join(static_root,static_file.name.replace('.vue', '.js'))\n            typ = 'R'\n                    \n    if typ=='C':\n        t = Template(txt)\n        txt2 = t.render(Context({'appset': appset} ))\n        f = open_and_create_dir(os.path.join(static_style, static_file.name+\".css\"),\"wb\")\n        f.write(txt2.encode('utf-8'))\n        f.close()        \n    if typ=='J':\n        t = Template(txt)\n        txt2 = t.render(Context({'appset': appset} ))\n        f = open_and_create_dir(os.path.join(static_scripts,static_file.name+\".js\"),\"wb\")\n        f.write(txt2.encode('utf-8'))\n        f.close()        \n    if typ=='P':\n        t = Template(txt)\n        txt2 = t.render(Context({'appset': appset} ))\n        try:\n            codejs = schlib.schindent.indent_style.py_to_js(txt2, None)\n            codejs = codejs.split(\"__pragma__ ('<all>')\",1)[0]\n        except:\n            codejs = \"\"\n        f = open_and_create_dir(dest_path if dest_path else os.path.join(static_scripts,static_file.name+\".js\"),\"wb\")\n        f.write(codejs.encode('utf-8'))\n        f.close()        \n    if typ=='R':\n        try:\n            codejs = schlib.schindent.indent_style.py_to_js(txt, None)\n            codejs = codejs.split(\"__pragma__ ('<all>')\",1)[0]\n        except:\n            codejs = \"\"\n        f = open_and_create_dir(dest_path if dest_path else os.path.join(static_components, static_file.name+'.js'),\"wb\")\n        f.write(codejs.encode('utf-8'))\n        f.close()        \n    if typ=='I':\n        if sass:\n            buf = sass.compile(string=txt, indented=True,)\n            t = Template(buf)\n            txt2 = t.render(Context({'appset': appset} ))\n            f = open_and_create_dir(dest_path if dest_path else os.path.join(static_style,static_file.name+\".css\"),\"wb\")\n            f.write(txt2.encode('utf-8'))\n            f.close()        \n    if typ=='U':\n        t = Template(txt)\n        txt2 = t.render(Context({'appset': appset} ))\n        f = open_and_create_dir(dest_path,\"wb\")\n        f.write(txt2.encode('utf-8'))\n        f.close()        \n\ncomponent_elements = []\n\nif appset.custom_tags:\n    component_elements += [ 'app/'+pos.split('/')[0] + '/components/' + pos.split('/')[1] for pos in appset.custom_tags.replace('\\n',';').replace('\\r','').split(';') if pos and '/' in pos ]    \ncomponent_elements += [ 'app/' + appset.name + \"/components/\" + pos.name for pos in static_files if pos.type in ('R',) ]\n\njs_static_files = [ pos for pos in static_files if pos.type in ('J', 'P') ]\ncss_static_files = [ pos for pos in static_files if pos.type in ('C', 'I') ]\n\n\nstatic_for_ext_apps = []\n\nif appset.ext_apps:\n    appset_tab = []\n    tab = appset.get_ext_apps()\n    for pos in tab:\n        if pos:\n            x = pos.split('.')[0]\n            if not x in appset_tab:\n                appset_tab.append(x)\n    \n    #for pos in appset.ext_apps.split(','):\n    #    if pos:\n    #        x = pos.split('.')[0]\n    #        if not x in appset_tab:\n    #            appset_tab.append(x)\n    for pos in appset_tab:\n        try:\n            appset2 = models.SChAppSet.objects.get(name=pos)\n        except:\n            appset2 = None\n        if appset2:\n            static_files2 = appset2.schstatic_set.all()\n            js_static_files2 = [ pos2 for pos2 in static_files2 if pos2.type in ('J', 'P') ]\n            css_static_files2 = [ pos2 for pos2 in static_files2 if pos2.type in ('C', 'I') ]\n            static_for_ext_apps.append((pos, js_static_files2, css_static_files2))\n\n            if appset2.custom_tags:\n                component_elements += [ 'app/'+pos.split('/')[0] + '/components/' + pos.split('/')[1] for pos in appset2.custom_tags.replace('\\n',';').replace('\\r','').split(';') if pos and '/' in pos ]    \n            component_elements += [ 'app/' + appset2.name + \"/components/\" + pos.name for pos in static_files2 if pos.type in ('R',) ]\n\ntemplate_to_file(base_path, \"desktop\", \"templates_src/template/desktop.ihtml\",  {'appset': appset, 'js_static_files': set(js_static_files), 'css_static_files': set(css_static_files), 'static_for_ext_apps': static_for_ext_apps, 'component_elements': set(component_elements) })\n\n\n#print(component_elements)\n#template_to_i_file(base_path, src_path+\"templates_src/schbuilder/wzr/schweb.ihtml\",\"templates_src/template/schweb.ihtml\",  {'appset': appset, 'component_elements': component_elements })\n\ntemplate_to_file(base_path, \"schweb\", \"templates_src/template/schweb.ihtml\",  {'appset': appset, 'component_elements': component_elements })\n\nconsumers_tab = []\nfor _app in apps:\n    consumers = _app.schchannelconsumer_set.all()\n    for consumer in consumers:\n        consumers_tab.append((app.name+\"/\"+consumer.url+\"/\", _app.name+\".consumers.\"+consumer.name))\n\nfor pos in appset.get_ext_apps():\n    if pos:\n        x = pos.split('.')\n        tab1 = models.SChAppSet.objects.filter(name=x[0])\n        for _appset in tab1:\n            tab2 = _appset.schapp_set.filter(name=x[1])\n            for _app in tab2:\n                consumers = _app.schchannelconsumer_set.all()\n                for consumer in consumers:\n                    consumers_tab.append((_app.name+\"/\"+consumer.url+\"/socket.io/\", _app.name+\".consumers.\"+consumer.name))\n            \ntemplate_to_file(base_path, \"settings_app\", \"settings_app.py\",  {'appset': appset, 'gmtime': gmt_str, 'offline_support': offline_support, 'consumers': consumers_tab })\n\nbase_path_src = base_path + \"/src\"\n\nif os.path.exists(base_path_src):\n    copy_files_and_dirs(base_path_src, base_path)\n\nfile_name = None\nfile_content = []\nfile_append = -1\n\ndef output(file_name, file_append, file_content):\n    os.makedirs(os.path.dirname(os.path.join(base_path, file_name)), exist_ok=True)\n    if file_append==-1:        \n        f = open(os.path.join(base_path, file_name), \"wb\")\n        f.write((\"\\n\".join(file_content)).encode('utf-8'))\n        f.close()\n    elif file_append==-2:\n        f = open(os.path.join(base_path, file_name), \"ab\")\n        f.write((\"\\n\".join(file_content)).encode('utf-8'))\n        f.close()\n    else:\n        f = open(os.path.join(base_path, file_name), \"rb\")\n        txt = f.read().decode('utf-8').split('\\n')\n        f.close()\n        if file_append < len(txt):\n            txt = txt[:file_append] + file_content+txt[file_append:]\n        else:\n            txt = txt+file_content\n        f = open(os.path.join(base_path, file_name), \"wb\")\n        f.write((\"\\n\".join(txt)).encode('utf-8'))\n        f.close()\n        \nif appset.user_app_template and len(appset.user_app_template)>0:\n    txt = appset.user_app_template\n    tab = txt.split('\\n')\n    for row in tab:\n        if row.startswith('###'):\n            if file_name and len(file_content)>0:\n                output(file_name, file_append, file_content)\n            file_content = []\n            file_name = row[3:]\n            if file_name.startswith('>'):\n                file_name = file_name[1:].strip()\n                file_append = -2\n            elif file_name.startswith('<') and '>' in file_name:\n                f = file_name[1:].split('>')\n                file_name = f[1].strip()\n                file_append = int(f[0])                \n            else:\n                file_name = file_name.strip()\n                file_append = -1\n        else:\n            file_content.append(row)\n                \n    if file_name and len(file_content)>0:\n        output(file_name, file_append, file_content)\n\nif appset.encoded_zip:\n    bcontent = base64.decodebytes(appset.encoded_zip.encode('utf-8'))\n    bstream = io.BytesIO(bcontent)\n    with zipfile.ZipFile(bstream, \"r\") as izip:\n        izip.extractall(base_path)\n\nsuccess = True\n\nif platform_name()!='Android' and appset.install_file:\n    init_str = \"[DEFAULT]\\n\"+appset.install_file\n    config = configparser.ConfigParser(allow_no_value=True)\n    config.read_string(init_str)\n    pip_str = config['DEFAULT']['pip']\n    if pip_str:\n        applib_path  = os.path.join(base_path, \"applib\")\n        if not os.path.exists(applib_path):\n            os.mkdir(applib_path)\n        packages = [ x.strip() for x in pip_str.split(' ') if x ]\n        exit_code, output_tab, err_tab = py_run(['-m', 'pip', 'install', f'--target={applib_path}', '--upgrade', ] + packages)\n        if output_tab:\n            for pos in output_tab:\n                if pos:\n                    object_list.append((datetime.datetime.now().time().isoformat(), \"pip info\", pos))\n        if err_tab:\n            for pos in err_tab:\n                if pos:\n                    object_list.append((datetime.datetime.now().time().isoformat(), \"pip error\", pos))\n                    success = False\nif success:    \n    object_list.append((datetime.datetime.now().time().isoformat(), 'SUCCESS:', \"\"))    \nelse:\n    object_list.append((datetime.datetime.now().time().isoformat(), 'ERRORS:', \"\"))    \n    \nreturn { 'object_list': reversed(object_list) }\n",
                    "r"
                ],
                [
                    "",
                    "prj_export",
                    "pk",
                    "U",
                    "SChAppSet",
                    "",
                    "prj = []\nappset = models.SChAppSet.objects.get(id=pk)\nprj.append(obj_to_array(appset,appset_attr))\napps = appset.schapp_set.all()\napps_array=[]\nfor app in apps:\n    tables = app.schtable_set.all()\n    tables_array=[]\n    for table in tables:\n        tmp=obj_to_array(table, table_attr)\n        fields = table.schfield_set.all()\n        fields_array=[]\n        for field in fields:\n            fields_array.append(obj_to_array(field, field_attr))\n        tables_array.append([tmp,fields_array])\n\n    choices = app.schchoice_set.all()\n    choices_array=[]\n    for choice in choices:\n        tmp=obj_to_array(choice, choice_attr)\n        choice_items = choice.schchoiceitem_set.all()\n        choice_items_array=[]\n        for item in choice_items:\n            choice_items_array.append(obj_to_array(item, choice_item_attr))\n        choices_array.append([tmp,choice_items_array])\n\n    views = app.schview_set.all()\n    views_array=[]\n    for view in views:\n        views_array.append(obj_to_array(view,view_attr))\n\n    templates = app.schtemplate_set.all()\n    templates_array=[]\n    for template in templates:\n        templates_array.append(obj_to_array(template,template_attr))\n        \n    appmenus = app.schappmenu_set.all()\n    appmenus_array=[]\n    for appmenu in appmenus:\n        appmenus_array.append(obj_to_array(appmenu,appmenu_attr))\n\n    forms = app.schform_set.all()\n    forms_array=[]\n    for form in forms:\n        tmp=obj_to_array(form, form_attr)\n        fields = form.schformfield_set.all()\n        fields_array=[]\n        for field in fields:\n            fields_array.append(obj_to_array(field, formfield_attr))\n        forms_array.append([tmp,fields_array])\n\n    tasks = app.schtask_set.all()\n    tasks_array=[]\n    for task in tasks:\n        tasks_array.append(obj_to_array(task,task_attr))\n\n    consumers = app.schchannelconsumer_set.all()\n    consumers_array=[]\n    for consumer in consumers:\n        consumers_array.append(obj_to_array(consumer,consumer_attr))\n\n    files = app.schfiles_set.all()\n    files_array=[]\n    for file in files:\n        files_array.append(obj_to_array(file,files_attr))\n\n    tmp = obj_to_array(app, app_attr)\n    apps_array.append([tmp, tables_array, choices_array, views_array, templates_array, appmenus_array, forms_array, tasks_array, consumers_array, files_array])\nprj.append(apps_array)\n\nstatics = appset.schstatic_set.all()\nstatics_array=[]\nfor static in statics:\n    statics_array.append(obj_to_array(static,static_attr))\n\nprj.append(statics_array)\n\nex_str = json.dumps(prj, indent=4)\nreturn HttpResponse(ex_str, content_type=\"text/plain\")\n",
                    "r"
                ],
                [
                    "",
                    "prj_import",
                    "",
                    "T",
                    "SChAppSet",
                    "",
                    "ex_str = request.POST['EDITOR']\nreturn prj_import_from_str(ex_str)\n",
                    "t"
                ],
                [
                    "",
                    "manage",
                    "pk",
                    "U",
                    "SChAppSet",
                    "",
                    "appset = models.SChAppSet.objects.get(id=pk)\nbase_path = os.path.join(settings.APP_PACK_PATH, appset.name)\nsrc_path = os.path.join(settings.APP_PACK_PATH, \"schdevtools\") \ncommand = \"import sys; sys.path.append('%s'); from manage import *\" % base_path\npconsole = settings.PYTHON_CONSOLE.split(' ')\npconsole[0]=\">>>\" + pconsole[0]\npconsole.append('-i')\npconsole.append('-c')\npconsole.append(command)\nparam = [\"python-shell\",] + pconsole\nid = get_process_manager().put(request, *param)\nnew_url = \"../../../tasks/form/TaskListForm/%d/edit2__task\" % id\n#new_url = \"../../schsys/thread/%d/edit/\" % id\nreturn HttpResponseRedirect(new_url)",
                    "r"
                ],
                [
                    "",
                    "template_edit",
                    "pk",
                    "U",
                    "SChTable",
                    "",
                    "table = models.SChTable.objects.get(id=pk)\ntemplates = models.SChTemplate.objects.filter(parent=table.parent).filter(name=table.name)\nif len(templates)==0:\n    template=models.SChTemplate(parent=table.parent, name=table.name)\n\n    generics =  table.schfield_set.filter(type__in=['GTreeForeignKey', 'GHiddenTreeForeignKey',])\n    if len(generics) > 0:\n        template_suffix = \"tree\"\n    else:\n        template_suffix = \"tbl\"\n\n    file_name = settings.APP_PACK_PATH + (\"/schdevtools/templates_src/schbuilder/wzr/new_generic_%s_template.ihtml\" % template_suffix)\n\n    f = open(file_name, \"rt\")\n    template.template_code = f.read()\n    f.close()\n    template.save()\n    id = template.id\nelse:\n    id = templates[0].id\n\nnew_url = make_href(\"/schbuilder/table/SChTemplate/%s/template_code/py/editor/\" % str(id))\n\nreturn HttpResponseRedirect(new_url)\n\n",
                    "r"
                ],
                [
                    null,
                    "prj_import/edit",
                    "",
                    "U",
                    "SChAppSet",
                    "",
                    "return TemplateView.as_view(template_name='schbuilder/import_form.html')(request)",
                    "t"
                ],
                [
                    null,
                    "field_up#change_pos",
                    "pk",
                    "U",
                    "SChField",
                    "{'app':'schbuilder', 'tab':'SChField', 'forward':False, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "field_down#change_pos",
                    "pk",
                    "U",
                    "SChField",
                    "{'app':'schbuilder', 'tab':'SChField', 'forward':True, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "field_duplicate#duplicate_row",
                    "pk",
                    "U",
                    "SChField",
                    "{'app':'schbuilder', 'tab':'SChField', 'field':'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "field_up#change_tab_pos",
                    "pk",
                    "U",
                    "SChTable",
                    "{'app':'schbuilder', 'tab':'SChTable', 'forward':False, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "field_down#change_tab_pos",
                    "pk",
                    "U",
                    "SChTable",
                    "{'app':'schbuilder', 'tab':'SChTable', 'forward':True, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "template_edit2",
                    "pk",
                    "U",
                    "SChForm",
                    "",
                    "form = models.SChForm.objects.get(id=pk)\ntemplates = models.SChTemplate.objects.filter(parent=form.parent).filter(name='Form'+form.name)\nif len(templates)==0:\n    template=models.SChTemplate(parent=form.parent, name='Form'+form.name)\n\n    file_name = settings.APP_PACK_PATH + \"/schdevtools/templates_src/schbuilder/wzr/new_generic_form_template.ihtml\"\n    f = open(file_name, \"rt\")\n    template.template_code = f.read()\n    f.close()\n    template.save()\n    id = template.id\nelse:\n    id = templates[0].id\n        \nnew_url = make_href(\"/schbuilder/table/SChTemplate/%s/template_code/py/editor/\" % str(id))\n\nreturn HttpResponseRedirect(new_url)",
                    "r"
                ],
                [
                    null,
                    "field_up#change_menu_pos",
                    "pk",
                    "U",
                    "SChAppMenu",
                    "{'app':'schbuilder', 'tab':'SChAppMenu', 'forward':False, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "field_down#change_menu_pos",
                    "pk",
                    "U",
                    "SChAppMenu",
                    "{'app':'schbuilder', 'tab':'SChAppMenu', 'forward':True, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "installer",
                    "pk",
                    "T",
                    "SChAppSet",
                    "",
                    "buf = []\n\ntry:\n    pki = int(pk)\n    appset = models.SChAppSet.objects.get(id=pki)\n    name = appset.name\nexcept:\n    name = pk\n\nbase_path = os.path.join(settings.APP_PACK_PATH, name)\nzip_path = os.path.join(settings.DATA_PATH, 'temp')\n\n\nbuf.append(\"COMPILE TEMPLETE FILES:\")\n\n(code, output, err) = py_run([os.path.join(base_path, 'manage.py'), 'compile_templates'])\n\nif output:\n    for pos in output:\n        buf.append(pos)\n\nif err:\n    buf.append(\"ERRORS:\")\n    for pos in err:\n        buf.append(pos)\n\nexclude=[\".*\\.pyc\", \".*__pycache__.*\"]\nzip = ZipWriter(os.path.join(zip_path, name+\".ptig\"), base_path, exclude=exclude)\nzip.toZip(base_path)\n\nbuf.append(\"PACK PROGRAM FILES TO: \" + zip_path + name + \".ptig\")\n\ndb_name = os.path.join(os.path.join(settings.DATA_PATH, name), name+\".db\")\n\nbuf.append(\"ADDING DATABASE FILES\")\n\n(code, output, err) = py_run([os.path.join(base_path, 'manage.py'), 'export_to_local_db'])\n\nbuf.append(\"Export to local db:\")\nif output:\n    for pos in output:\n        buf.append(pos)\n\nif err:\n    buf.append(\"ERRORS:\")\n    for pos in err:\n        buf.append(pos)\n        \nzip.write(db_name, name_in_zip=name+\".db\")\nzip.close()\n\nbuf.append(\"END\")\n\nurl = reverse('start')+'schbuilder/download_installer/'+name+'/'\n\nreturn { 'object_list': buf, 'name': name, 'url': url, 'tp': \"SChAppSet\" }\n\n",
                    "r"
                ],
                [
                    null,
                    "restart_server",
                    "",
                    "U",
                    "SChAppSet",
                    "",
                    "restarted = False\ntry:\n    if platform.system() == \"Linux\":\n        if platform.system() == \"Linux\":\n            if type(request).__name__==\"AsgiRequest\":\n                os.kill(os.getpid(), signal.SIGINT)\n                restarted = True\n            elif 'mod_wsgi.process_group' in request.environ:\n                if request.environ['mod_wsgi.process_group'] != '':\n                    os.kill(os.getpid(), signal.SIGINT)\n                    restarted = True\n            else:\n                try:\n                    import uwsgi\n                    uwsgi.reload()\n                    restarted = True\n                except:\n                    pass\n        else:\n            try:\n                import uwsgi\n                uwsgi.reload()\n                restarted = True\n            except:\n                pass\n    else:\n        ctypes.windll.libhttpd.ap_signal_parent(1)\n        restarted = True\nexcept:\n    pass\n\nscript = \"<script>jQuery('#ModalLabel').html('Restart');</script>\"\n\nif restarted:\n    return HttpResponse(\"<html>%s<body>Restarted</body></html>\" % script)\nelse:\n    return HttpResponse(\"<html>%s<body>I can't restart server</body></html>\" % script)\n    ",
                    "t"
                ],
                [
                    null,
                    "field_up#change_pos_form_field",
                    "pk",
                    "U",
                    "SChFormField",
                    "{'app':'schbuilder', 'tab':'SChFormField', 'forward':False, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "field_down#change_pos_form_field",
                    "pk",
                    "U",
                    "SChFormField",
                    "{'app':'schbuilder', 'tab':'SChFormField', 'forward':True, 'field': 'parent'}",
                    null,
                    "r"
                ],
                [
                    null,
                    "template_edit3",
                    "pk",
                    "U",
                    "SChView",
                    "",
                    "view = models.SChView.objects.get(id=pk)\ntemplates = models.SChTemplate.objects.filter(parent=view.parent).filter(name='v_'+view.name)\nif len(templates)==0:\n    template=models.SChTemplate(parent=view.parent, name='v_'+view.name)\n\n    file_name = settings.APP_PACK_PATH + \"/schdevtools/templates_src/schbuilder/wzr/new_generic_form_template.ihtml\"\n    f = open(file_name, \"rt\")\n    template.template_code = f.read()\n    f.close()\n    template.save()\n    id = template.id\nelse:\n    id = templates[0].id\nnew_url = make_href(\"/schbuilder/table/SChTemplate/%s/template_code/py/editor/\" % str(id))\nreturn HttpResponseRedirect(new_url)",
                    "r"
                ],
                [
                    null,
                    "update",
                    "",
                    "U",
                    "SChAppSet",
                    "",
                    "#g = git.cmd.Git(settings.ROOT_PATH)\n#g.reset('--hard')\n#g.pull()\n\nreturn HttpResponse(\"GIT PULL\", content_type=\"text/plain\")\n\n",
                    "t"
                ],
                [
                    null,
                    "translate_sync",
                    "pk",
                    "T",
                    "SChLocale",
                    "",
                    "locale_obj = models.SChLocale.objects.get(id=pk)\napp_pack = locale_obj.parent\n\nbase_path = settings.APP_PACK_PATH\n\napp_path = os.path.join(base_path, app_pack.name)\nlocale_path = os.path.join(app_path, 'locale')\nlang_path = os.path.join(locale_path, locale_obj.name)\nmsg_path = os.path.join(lang_path, 'LC_MESSAGES')\npo_path = os.path.join(msg_path, 'django.po')\n\nif not os.path.exists(po_path):\n    if not os.path.isdir(locale_path):\n        os.mkdir(locale_path)\n    if not os.path.isdir(lang_path):\n        os.mkdir(lang_path)\n    if not os.path.isdir(msg_path):\n        os.mkdir(msg_path)\n    \n    po_init = \"\"\"#\\nmsgid \"\"\\nmsgstr \"\"\\n\"Project-Id-Version: pytigon\\\\n\"\\n\"Language: %s\\\\n\"\\n\"MIME-Version: 1.0\\\\n\"\\n\"Content-Type: text/plain; charset=UTF-8\\\\n\"\\n\"Content-Transfer-Encoding: 8bit\\\\n\"\\n\"\"\"\n    if locale_obj.name in locale.locale_alias:\n        locale_str = locale.locale_alias[locale_obj.name].split('.')[0]\n    else:\n        locale_str = locale_obj.name\n    \n    po_init2 = po_init % locale_str\n    with open(po_path, \"wt\") as f:\n        f.write(po_init2)\n    \n\n(code, output, err) = py_run([os.path.join(app_path, 'manage.py'), 'compile_templates'])\nlocale_gen_internal(app_pack.id)\n    \npo = polib.pofile(po_path)\n\nlocale_obj.schtranslate_set.update(status='#')\n\ninserted = 0\nupdated = 0\nsave = False\n\nfor entry in po:\n    print(entry.msgid, entry.msgstr, entry.msgctxt)\n    t = locale_obj.schtranslate_set.filter(description=entry.msgid)\n    if len(t)>0:\n        obj = t[0]\n        updated += 1\n        if obj.translation:\n            entry.msgstr =  obj.translation\n            save = True\n    else:\n        obj = models.SChTranslate()\n        obj.description = entry.msgid\n        obj.parent = locale_obj\n        obj.translation = entry.msgstr\n        inserted += 1    \n    if obj.translation:\n        obj.status = 'OK'\n    else:\n        obj.status = ''\n    obj.save()\n\nif save:\n    po.save(po_path)\n\nlocale_gen_internal(app_pack.id)\n\nreturn { 'object_list': [[ updated, inserted ],] }\n\n",
                    "r"
                ],
                [
                    null,
                    "locale_gen",
                    "pk",
                    "T",
                    "SChAppSet",
                    "",
                    "ret = locale_gen_internal(pk)\nif ret:\n    ret_str = 'OK'\nelse:\n    ret_str = 'Error'\n\nreturn { 'object_list': [[ ret_str ],] }\n",
                    "r"
                ],
                [
                    null,
                    "download_installer",
                    "name",
                    "U",
                    "download_installer/(?P<name>\\w+)/$",
                    "{}",
                    "installer = os.path.join(os.path.join(settings.DATA_PATH, 'temp'), name+\".ptig\")\nif os.path.exists(installer):\n    with open(installer, 'rb') as zip_file:\n        response = HttpResponse(zip_file, content_type='application/force-download')\n        response['Content-Disposition'] = 'attachment; filename=\"%s\"' %  name+\".ptig\"\n        return response\nreturn HttpResponse(_(\"No installer file to download\"))\n",
                    "u"
                ]
            ],
            [
                [
                    null,
                    "SChAppSet",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            if '/run' in href:\n                import subprocess\n                import threading\n                import sys\n                def app_process():\n                    cmd = wx.GetApp().scr_path+\"/pytigon.py\"\n                    appset = href.split('_')[-1].split('?')[0]\n                    arg = \" \"+appset\n                    subprocess.call([sys.executable, cmd, arg], shell=False)\n                threading.Thread(target = app_process).start()\n                return True\n            return href\n\n%% all\n    %with edit_vscroll=True table_type='datatable'\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New application set\")\n    % list_action \"prj_import/edit\" _(\"Import\")\n    % list_action \"restart_server\" _(\"Restart server\") target=\"_top\" active=False\n    % list_action \"update\" _(\"Update server from git\")\n\n\n%% list_row_header\n    th...Name\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions: ===>\n        UP,Open in toolbar,[|wx.ART_GO_TO_PARENT],_top2_toolbar_Aplikacje__Lista_aplikacji,+src='client://actions/go-top.png',,{{app_path}}table/SChAppSet_up/{id}/schapp_set/-/form/list/?childwin=1\n        edit\n        gen,Build,[|client://categories/applications-multimedia.png]\n        |\n        field_list/schapp_set,Applications,[|client://apps/preferences-system-windows.png]\n        field_edit/user_app_template,Application template,[|client://mimetypes/text-x-script.png],_top\n        field_edit/app_main,Application main entrypoint,[|client://mimetypes/application-x-executable.png],_top\n        field_edit/doc,Doc,[|client://apps/help-browser.png],_top2\n        field_list/schstatic_set,Static files,[|client://apps/system-file-manager.png],_top\n        field_list/schlocale_set,Locale,[|client://apps/preferences-system-network-proxy.png]\n        manage,Manage,[|client://categories/preferences-system.png]\n        delete\n        run,Run,[|client://actions/media-playback-start.png]\n        prj_export,Export(Distribute),[|client://actions/document-save-as.png]\n        installer,Make installer(Distribute),[|client://apps/internet-web-browser.png]\n        field_edit/readme_file,readme.txt(Distribute),[|fa://navicon.png],_top\n        field_edit/license_file,license.txt(Distribute),license_txt,_top\n        field_edit/install_file,install.ini(Distribute),install_ini,_top\n        field_edit/encoded_zip,encoded zip file(Distribute),encoded_zip,_top\n\n%% dialog_type\n    .modal-lg\n\n%% row_edit\n\n    %form \"^/6\":\n        .name,title\n    %form \"^/12\":\n        .ext_apps,plugins\n    %form \"^/6\":\n        .gui_type,gui_elements,login_required,start_page\n    %form \"^/2\":\n        .desktop_gui_type,tablet_gui_type,smartfon_gui_type,public,main\n\n    % if standard_web_browser:\n        %form \"^/12\":\n            .custom_tags,user_param\n    % else:    \n        % form_item custom_tags:\n            {{form.custom_tags|textfiel_row_col:\"4x100\"}}\n        % form_item user_param:\n            {{form.user_param|textfiel_row_col:\"4x100\"}}\n",
                    null,
                    null
                ],
                [
                    null,
                    "SChApp",
                    "'*'",
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% all\n    %with form_width=620 form_height=380 show_title_bar=1 title=_(\"Applications\")\n        {{ block.super }}\n\n\n%% form_bar2\n      % if form_edit or form_delete or form_info or show_title_bar\n        % if not standard_web_browser\n\n            table width=100%,,,class=form_bar\n                tr\n                    td cellpadding=0,,,align=right,,,valign=top,,,width=36,,,height=36\n                        CTRLCLOSEBUTTON width=36,,,height=36,,,NAME=EXIT,,,SRC=client://emblems/emblem-unreadable.png\n                    % if not form_edit and not form_delete and not form_info\n                        td cellpadding=0,,,align=right,,,valign=top,,,width=36,,,height=36\n                            CTRLNOBG_BUTTON width=36,,,height=36,,,NAME=UP,,,label=_(Open in toolbar),,,SRC=client://actions/go-top.png,,,href={{request.path|replace:\"/table/SChAppSet/|/table/SChAppSet_up/\"}},,,target=_top2_toolbar_Aplikacje__Lista_aplikacji\n                    td width=5\n                    td align=center,,,border=0,,,border-color=#{{color_body_0_7}}\n                        span class=form_title\n                            %%form_title\n                                {{title|wiki_href|safe}}\n            hr\n\n\n%% list_content_actions\n    % new_row _(\"New application\")\n\n\n%% list_row_header\n    th...Name\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions: ===>\n        edit,\n        field_list/schtable_set,Tables,[|client://mimetypes/x-office-spreadsheet.png],_top2\n        field_list/schchoice_set,Choices,[|client://categories/applications-games.png],_top2\n        field_list/schview_set,Views,[|client://mimetypes/text-x-generic-template.png],_top2\n        field_list/schtemplate_set,Templates,[|client://mimetypes/x-office-presentation.png],_top2\n        field_list/schappmenu_set,Menu,[|client://actions/tab-new.png],_top2\n        field_list/schform_set,Forms,[|client://mimetypes/x-office-document.png],_top2\n        field_list/schchannelconsumer_set,Consumers,[|client://places/network-workgroup.png],_top2\n        field_list/schfiles_set,Custom files,files,_top2\n        field_edit/model_code,Additional models,[|client://mimetypes/package-x-generic.png],_top2\n        field_edit/view_code,Additional views,[|client://batch/code.png],_top2\n        field_edit/urls_code,Additional urls,[|client://actions/format-indent-less.png],_top2\n        field_edit/tasks_code,Additional task code,[|client://apps/utilities-terminal.png],_top2\n        field_edit/consumer_code,Additional consumer code,[|client://places/network-workgroup.png],_top2\n        field_edit/doc,Doc,[|client://apps/help-browser.png],_top2\n        delete\n\n\n%% table_header_edit\n  h2...Spis aplikacji\n\n\n%% row_edit\n    % form:\n            'parent', 'name', 'module_title', 'title', 'perms', 'index', 'user_param'\n            ",
                    "",
                    ""
                ],
                [
                    null,
                    "SChChoice",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Choices\")\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New choice\")\n\n\n%% list_row_header\n    th..._(Name)\n    th..._(Description)\n\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.verbose_name}}\n\n\n%% list_row_actions\n    {{block.super}}\n    % row_actions:...field_list/schchoiceitem_set,Fields,[|client://actions/format-indent-more.png]\n\n\n%% table_header_edit\n  h2..._(Choice list)\n\n\n%% row_edit\n    % form:\n        'parent', 'name', 'verbose_name'\n        ",
                    null,
                    null
                ],
                [
                    null,
                    "SChChoiceItem",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Choices\")\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New item\")\n\n\n%% list_row_header\n    th...Name\n    th...Description\n\n\n%% list_row\n    td...{{object.name|escape}}\n    td...{{object.value|escape}}\n\n\n%% table_header_edit\n  h2..._(Table field list)",
                    null,
                    null
                ],
                [
                    null,
                    "SChTable",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'fields'\n                \n            def filter_http_result(self, target, href, mp):\n                if 'field_down' in href or 'field_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        if 'field_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n                    return True\n                elif 'field_duplicate' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        self.tabsort.grid.goto_last_row()\n                    return True\n                else:\n                    return None\n   \n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Tables\") vform=True\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New table\")\n\n\n%% list_row_header\n    th...Name\n    th...Generic\n\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.generic}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up,[|client://actions/go-up.png]\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png]\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/table_code,Code,[fa fa-code fa-2|client://mimetypes/text-x-generic-template.png]\n        .field_edit/metaclass_code,Meta class,[|client://actions/document-properties.png]\n        .field_list/schfield_set,Fields,[|client://actions/format-indent-more.png]\n        .field_edit/doc,Documentation,[|client://apps/help-browser.png]\n        .template_edit,Template\n        .delete\n\n%% table_header_edit\n  h2..._(Table list)\n\n%% row_edit\n    % form:\n        'parent', 'name'\n    \n    % form_item base_table.select:\n        %if not object.base_table or object.base_table == \"\"\n            option selected=selected,,,value=...---------\n        %else\n            option value=...---------\n        %if object.base_table == 'JSONModel'\n            option value=JSONModel,,,selected=selected...JSONModel\n        %else\n            option value=JSONModel...JSONModel                    \n            \n        %for model in object.get_models\n            %if model == object.base_table\n                option value={{model}},,,selected=selected...{{model}}\n            %else\n                option value={{model}}...{{model}}\n            \n    % form:\n        'verbose_name', 'verbose_name_plural', 'proxy_model', 'ordering', 'generic'\n",
                    null,
                    null
                ],
                [
                    null,
                    "SChField",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% pythoncode\n    % if form_edit\n        script language=python\n            def Init(self):\n                self.retdate = None\n                self.param.EventObject=self\n\n            def OnBeforeButtonClick(self):\n                print('/schbuilder/field_param/edit/'+self.type.GetValue()+'/')\n                self.param.set_new_href('/schbuilder/field_param/edit/'+self.type.GetValue()+'/')\n    %else\n        script language=python\n            def init_form(self):\n                #self['add_field'].Bind(wx.EVT_BUTTON, self.OnClick)\n                pass\n\n            def filter_http_result(self, target, href, mp):\n                if 'field_down' in href or 'field_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        if 'field_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n                    return True\n                elif 'field_duplicate' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        self.tabsort.grid.goto_last_row()\n                    return True\n                else:\n                    return None\n\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Fields\") vform=True\n        {{ block.super }}\n\n%% list_content_header2\n    table\n        tr\n            th\n                label for=id_field_list...Select field type:\n            td width=210\n                select name=field_list,,,id=id_field_list,,,width=200\n                    %for item in object_list.model|choices_from_field:\"type\"\n                        option value={{item.0}}\n                            {{item.0}}\n            td align=left\n                % list_action \"add_field\" \"New field\"\n\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % widget class='menu' id='add_field' title='New field':\n                    %for item in object_list.model|choices_from_field:\"type\"\n                        li\n                            a class=btn btn-primary btn-sm,,,href=../../../{{item.0}}/add/\n                                {{item.0}}\n\n%% list_row_header\n    th...Name\n    th...Opis\n    th...Typ\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n    td...{{object.type}}\n\n%% list_row_actions\n    {{block.super}}\n    {% if not forloop.first %}\n        % row_actions:...field_up,Move up,[|client://actions/go-up.png]\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png]\n    {% endif %}\n    \n    % row_actions:...field_duplicate,Duplicate,[|client://actions/go-bottom.png]\n\n\n%% table_header_edit\n  h2...Lista p\u00f3l tabeli\n\n%% row_edit\n    %if object.is_rel or object.has_choices\n        % form:\n                \"parent\", \"name\", \"description\", \"null\", \"blank\", \"editable\", \"unique\", \"db_index\", \"default\",  \"help_text\"\n        %if object.is_rel\n            % form_item rel_to:\n                select name=rel_to,,,id=id_rel_to,,,class=select form-control\n                    %if not object.rel_to or object.rel_to == \"\"\n                        option selected=selected,,,value=...---------\n                    %else\n                        option value=...---------\n                    %for model in object.get_models\n                        %if model == object.rel_to\n                            option value={{model|safe}},,,selected=selected...{{model|safe}}\n                        %else\n                            option value={{model|safe}}...{{model|safe}}\n        %else\n            % form_item rel_to:\n                select name=choices,,,id=id_choices,,,class=select form-control\n                    %if not object.choices or object.choices == \"\"\n                        option selected=selected,,,value=...---------\n                    %else\n                        option value=...---------\n                    %for choice in object.parent.parent.schchoice_set.all\n                        %if choice.name == object.choices\n                            option value={{choice.name}},,,selected=selected...{{choice.name}}\n                        %else\n                            option value={{choice.name}}...{{choice.name}}\n        % form:\n                \"param\"\n    %else\n        % form:\n                \"parent\", \"name\", \"description\", \"null\", \"blank\", \"editable\", \"unique\", \"db_index\", \"default\",  \"help_text\", \"param\"\n    {{form.type.as_hidden}}\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "SChView",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n\n%extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n\n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Views\") vform=True\n        {{ block.super }}\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % widget class='menu' id='new_view' title=_(\"&New view\"):\n                    % for pos in object_list|module_obj:\"View_CHOICES\"\n                        li\n                            a href={{table_path}}{{pos.0}}/add/...{{pos.1}}\n        \n%% list_row_header\n    th...Name\n\n%% list_row\n    td...{{object.name}}\n\n%% list_row_actions\n    {{ block.super }}\n    % if object.ret_type == 'T':\n        % row_actions:\n            .field_edit/view_code,Code,[|client://mimetypes/text-x-generic-template.png],_top\n            .template_edit3,Template,[|client://mimetypes/x-office-presentation.png]\n            .field_edit/doc,Doc,[|client://apps/help-browser.png],_top\n    % else:\n        % row_actions:\n            .field_edit/view_code,Code,[|client://mimetypes/text-x-generic-template.png],_top\n            .field_edit/doc,Doc,[|client://apps/help-browser.png],_top\n    \n%% row_edit\n    {{ form.view_type.as_hidden }}\n    strong \n        {{object.get_view_type_display}}\n                \n    % form:\n        \"ret_type\", \"parent\", \"name\", \"url_params\"\n    \n    % if object.view_type == 'u'\n        % form:\n            \"param\", \"url\"\n    % else\n        {{form.param.as_hidden}}        \n        % form_item url:\n            select name=url,,,id=id_url,,,class=select form-control\n                %if not object.url or object.url == \"\"\n                    option selected=selected,,,value=...---------\n                %else\n                    option value=...---------\n                %for model in object.get_models\n                    %if model == object.url\n                        option value={{model}},,,selected=selected...{{model}}\n                    %else\n                        option value={{model}}...{{model}}\n",
                    null,
                    null
                ],
                [
                    null,
                    "SChTemplate",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n        \n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Templates\")\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New template\")\n\n\n%% list_row_header\n    th..._(Name)\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions:\n        .field_edit/template_code,Code,[|client://mimetypes/x-office-presentation.png],_top\n        .edit\n        .delete\n\n\n%% row_edit\n    % form:",
                    null,
                    null
                ],
                [
                    null,
                    "SChAppMenu",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    % if not form_list:\n        script language=python\n            def init_form(self):\n                import os\n                paths = wx.StandardPaths.Get()\n                self.icon.init_extern_icons(os.path.join(paths.GetDocumentsDir(), \"schbuilder/{{object.parent.parent.name}}/static/\"), \"http://www.onet.pl/\")\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Menu\") vform=True\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New menu item\")\n    a href={{request.path|replace:\"/table/SChApp/|/table/SChApp_wiki/\"}}/../../../-/add,,,class=button,,,name=New wiki item,,,label=_(New wiki item),,,title=_(New wiki item),,,target=_blank\n\n\n%% list_row_header\n    th..._(Name)\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    {{block.super}}\n    {% if not forloop.first %}\n        % row_actions:...field_up,Move up,[|client://actions/go-up.png]\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png]\n    {% endif %}\n\n\n%% table_header_edit\n  h2..._(Menu item list)\n\n\n%% row_edit\n    % form:\n        'name', 'perms'\n    %% url_select\n        input type=hidden,,,name=parent,,,value={{object.parent.id}},,,id=id_parent\n        % if not standard_web_browser:\n            % form_item url:\n                CTRLCHOICE name=url,,,value='{{object.url}}'\n                    tdata\n                        %for url in object.get_urls\n                            tr:::td...{{url}}\n        % else:\n            % form_item url:\n                select name=url2,,,id=id_url2,,,class=select form-control\n                    %if not object.url or object.url == \"\"\n                        option selected=selected,,,value=...---------\n                    %else\n                        option value=...---------\n                        option value={{object.url}},,,selected=selected...{{object.url}}\n                    %for url in object.get_urls\n                        %if not url == object.url\n                            option value={{url}}...{{url}}\n    % form:\n        'url_type'\n    % form_item icon:\n        ctrlbitmapcombobox class=ctrlbitmapcombobox form-control,,,width=250,,,name=icon,,,value={{object.icon}},,,valuetype=str,,,onload=self.init_default_icons=True\n    % form:\n        'icon_size'\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "schapp2",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def init_form(self):\n            self.path = \"{{request.path}}\"\n            http = wx.GetApp().get_http(self)\n            http.post(self, \"{{base_path}}schtools/set_user_param/\", parm={ 'param': 'appset_up', 'value': self.path })\n\n\n        def filter_url(self, type, url):\n            if url and url[0:1]=='.':\n                return None\n            else:\n                if url=='close':\n                    page = self.GetParent().GetParent().GetParent()\n                    win = wx.GetApp().GetTopWindow()\n                    win.toolbar_interface.remove_page(page.title)\n\n                    http = wx.GetApp().get_http(self)\n                    http.post(self, \"{{base_path}}schtools/set_user_param/\", parm={ 'param': 'appset_up', 'value': \"\" })\n\n                    return True\n                else:\n                    id = self.app_list.GetValue()\n                    if id:\n                        return url.replace('{id}', id)\n                    else:\n                        dlg = wx.MessageDialog(self, _('Select application!'), _('A Message Box'), wx.OK | wx.ICON_INFORMATION )\n                        dlg.ShowModal()\n                        dlg.Destroy()\n                        return True\n\n\n%% all\n    %with form_width=320 form_height=50 show_title_bar=1 title=_(\"Applications\")\n        {{ block.super }}\n\n%% body_start\n    <body class=\"toolbar\">\n\n%% body\n    p height=5px\n    table class=toolbar\n        tr\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT name=close_btn,,,label=Close,,,SRC=client://emblems/emblem-unreadable.png,,,href=close\n            td width=160\n                table width=160\n                    tr\n                        td...Wybierz aplikacj\u0119:\n                    tr\n                        td\n                            select name=app_list,,,id=id_app_list,,,width=150\n                                %for item in object_list\n                                    %if forloop.first\n                                        option value={{item.id}},,,selected=selected\n                                            {{item.name}}\n                                    %else\n                                        option value={{item.id}}\n                                            {{item.name}}\n            td width=20\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT NAME=tabele,,,label=_(Table),,,SRC=client://mimetypes/x-office-spreadsheet.png,,,href={{app_path}}table/SChApp/{id}/schtable_set/-/form/list/\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT NAME=choices,,,label=_(Choices),,,SRC=client://categories/applications-games.png,,,href={{app_path}}table/SChApp/{id}/schchoice_set/-/form/list/\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT NAME=views,,,label=_(Views),,,SRC=client://mimetypes/text-x-generic-template.png,,,href={{app_path}}table/SChApp/{id}/schview_set/-/form/list/\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT NAME=forms,,,label=_(Forms),,,SRC=client://mimetypes/x-office-document.png,,,href={{app_path}}table/SChApp/{id}/schform_set/-/form/list/\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT NAME=menu,,,label=_(Menu),,,SRC=client://actions/tab-new.png,,,href={{app_path}}table/SChApp/{id}/schappmenu_set/-/form/list/\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT NAME=tasks,,,label=_(Tasks),,,SRC=client://apps/utilities-terminal.png,,,href={{app_path}}table/SChApp/{id}/schtask_set/-/form/list/\n            td cellpadding=0\n                CTRLNOBG_BUTTON_TXT NAME=consumers,,,label=_(Consumers),,,SRC=client://places/network-workgroup.png,,,href={{app_path}}table/SChApp/{id}/schchannelconsumer_set/-/form/list/\n            td width=20\n            td cellpadding=0\n                % widget class='menu' id='user_action' title='User action' style='toolbar': \n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/schtemplate_set/-/form/list/..._(Templates)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/schfiles_set/-/form/list/..._(Custom files)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/model_code/form/editor/..._(User Models)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/view_code/form/editor/..._(User View)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/urls_code/form/editor/..._(User Url)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/tasks_code/form/editor/..._(User Tasks)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/consumer_code/form/editor/..._(User Consumers)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/doc/form/editor/..._(Doc)\n",
                    null,
                    null
                ],
                [
                    null,
                    "db_field_edt_template",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"schsys/db_field_edt.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncodeinit\n    ===>\n        def init_form(self):\n            self.save_btn.Disable()\n            self.modified = False\n            self.tuser = wx.Timer(self)\n            self.tuser.Start(1000)\n            self.Bind(wx.EVT_TIMER, self.on_timer_user, self.tuser)\n            self.EDITOR.SetSavePoint()\n            self._insert_txt.Bind(wx.EVT_BUTTON, self.on_insert_click)\n            self.save_btn.Bind(wx.EVT_BUTTON, self.on_click)\n            atab=self.get_acc_tab()\n            atab.append((0, wx.WXK_INSERT, self.on_panel_focus))\n            atab.append((wx.ACCEL_ALT, ord('I'), self.on_panel_focus))\n            \n            self.set_acc_key_tab(self,atab)\n            \n            self._panel.Bind(wx.EVT_TREE_ITEM_ACTIVATED, self.on_insert_click)\n            self._insert_icon.Bind(wx.EVT_BUTTON, self.on_insert_image_click)\n            self.EDITOR.SetCurrentPos(0)\n            self.EDITOR.SetSelection(0,0)\n            self.EDITOR.SetFocus()\n            \n            #aTable = [\n             #   (wx.ACCEL_ALT, ord('I'), self.on_panel_focus),\n             #   (wx.ACCEL_ALT, ord(';'), self.on_),\n             #   ]\n            #self.set_acc_key_tab(aTable)\n\n            \n\n        #def on_editor_key_down(self, event):\n        #    if event.KeyCode == wx.WXK_INSERT or (event.AltDown() and event.KeyCode==ord('I')):\n        #        self._panel.SetFocus()\n        #    else:\n        #        event.Skip()\n\n        def on_panel_focus(self, event):\n            self._panel.SetFocus()\n            \n        def on_insert_image_click(self, event):\n            self.insert_txt(self._icon.GetValue())\n\n        def on_insert_click(self, event):\n            item = self._panel.GetSelection()\n            if item.IsOk():\n                txt = self._panel.GetItemText(item)\n                self.insert_txt(txt)\n\n        def insert_txt(self, txt):\n            pos = self.EDITOR.GetCurrentPos()\n            self.EDITOR.InsertText(pos, txt)\n            pos+=len(txt)\n            self.EDITOR.SetCurrentPos(pos)\n            self.EDITOR.SetFocus()\n\n%% all\n    %with form_width=800 form_height=1200 title=tab|add:\".\"|add:verbose_field_name\n        {{ block.super }}\n\n%% title\n    .T:{{object.name}}\n\n%% body\n    % if standard_web_browser:\n        {{ block.super }}\n    % else:\n        table width=100%,,,class=form_bar\n            tr\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRLCLOSEBUTTON width=36,,,height=36,,,NAME=EXIT,,,SRC=client://emblems/emblem-unreadable.png\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRLNOBG_BUTTON width=36,,,height=36,,,name=save_btn,,,SRC=client://actions/document-save.png\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRLNOBG_BUTTON width=36,,,height=36,,,name=_insert_txt,,,label=insert,,,SRC=client://actions/list-add.png\n                td cellpadding=0,,,valign=top,,,width=250,,,height=36\n                    ctrlbitmapcombobox width=250,,,name=_icon,,,onload=self.init_default_icons=True\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRLNOBG_BUTTON width=36,,,height=36,,,name=_insert_icon,,,label=icon,,,SRC=client://actions/list-add.png\n                td width=5\n                td align=center,,,border=0,,,border-color=#{{color_body_0_7}}\n                    span class=form_title\n                        %%form_title\n                            .Edycja: {{object.name}} [{{title}}]\n        hr\n        table width=100%\n            tr\n                td width=200\n                    ctrltree name=_panel,,,width=200,,,height=calc(100% - top - 20)\n                        li...{{object}}\n                            ul\n                                li...object.fields\n                                    ul\n                                        %for pos in object.get_table_fields\n                                            li...{{pos}}\n                                                ul\n                                                    li...{{pos}}\n                                                    li...object.{{pos}}\n                                                    li...form.fields_as_table.{{pos}}\n                                li...object methods\n                                    ul\n                                        %for pos in object.get_table_methods\n                                            li...{{pos}}\n                                                ul\n                                                    li...{{pos}}\n                                                    li...object.{{pos}}\n                        li...django\n                            ul\n                                li...filters\n                                    ul\n                                        %for pos in object.get_django_filters\n                                            li...{{pos}}\n                                li...tags\n                                    ul\n                                        %for pos in object.get_django_tags\n                                            li...{{pos}}\n\n                        li ...widgets\n                            ul\n                                %for pos in object.get_template_widgets\n                                    li...{{pos|safe}}\n\n\n                        li ...blocks\n                            ul\n                                %for pos in object.get_blocks\n                                    li...{{pos|safe}}\n                td\n                    CTRLSTYLEDTEXT NAME=EDITOR,,,width=100%-200,,,HEIGHT=calc(100% - top - 20),,,MINHEIGHT=400,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n                        DATA...{{txt|bencode}}\n\n%% content\n    % if standard_web_browser\n        %% edit_area\n            code_editor id=ace_editor,,,value={{txt|bencode}},,,href={{base_path}}{{save_path}},,,title={{title}}\n    % else:\n        {{ block.super }}\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "db_field_edt_mod",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n\n%extends \"schsys/db_field_edt.html\"\n\n%load exfiltry\n%load exsyntax\n\n%%form_title\n    .Edition: {{object.get_name}} [{{title}}]\n\n%% title\n    .V:{{object.get_name}}\n\n%% edit_area_sch\n    table width=100%\n        tr\n            td\n                .def {{object.get_name}}(request{% if object.param %}, {{object.param|safe}}{% endif %}):\n        tr\n            td\n                CTRLSTYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,HEIGHT=100%,,,MINHEIGHT=400,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n                    DATA...{{txt|bencode}}\n\n\n%% edit_area\n    .def {{object.get_name}}(request{% if object.param %}, {{object.param|safe}}{% endif %}):\n    code_editor id=ace_editor,,,value={{txt|bencode}},,,href={{base_path}}{{save_path}},,,title={{title}}\n",
                    null,
                    null
                ],
                [
                    null,
                    "manage",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def init_form(self):\n            self.stcwindow.Execute(\"from {{name}}.manage import *\")\n            self.insert_cmd.Bind(wx.EVT_BUTTON, self.OnInsertCmd)\n\n        def OnInsertCmd(self, event):\n            parm = self.cmd_list.GetValue()\n            if parm:\n                cmd = \"cmd('%s')\" % parm\n                self.stcwindow.Execute(cmd)\n\n%% all\n    %with form_width=800 form_height=400 show_title_bar=1 title=_(\"Manage\")\n        {{ block.super }}\n\n%% body\n    table width=100%\n        tr\n            td width=100%\n                table width=160\n                    tr\n                        td..._(Choice action):\n                        td\n                            select name=cmd_list,,,id=id_cmd_list,,,width=250\n                                option value=help...--help\n                                option value=syncdb...syncdb\n                                option value=migrate...migrate\n                                option value=createsuperuser...createsuperuser\n\n                        td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                            CTRLNOBG_BUTTON width=36,,,height=36,,,name=insert_cmd,,,label=cmd,,,SRC=client://actions/list-add.png\n    table width=100%\n        tr\n            td cellpadding=0\n                CTRLSHELL width=100%,,,height=100%",
                    null,
                    null
                ],
                [
                    null,
                    "import_form",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Import project\") \n        {{ block.super }}\n\n%% form_action\n    . ../\n\n%% row_edit_form\n    CTRLSTYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,HEIGHT=calc(100%-top-button_size_dy),,,MINHEIGHT=400\n        DATA",
                    null,
                    null
                ],
                [
                    null,
                    "SChAppMenu2",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"schbuilder/schappmenu.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            url = '../schwiki/%s/%s/view/' % (self.subject.GetValue(), self.name.GetValue())\n            self.url.SetValue(url)\n            return href\n\n\n%% url_select\n    tr\n        th align=left\n            em\n                label for=id_url..._(Subject):\n        td\n            input type=text,,,id=id_subject,,,name=subject,,,{%if not object.url %}value={{object.parent.name}}{% endif %}\n    tr\n        th align=left\n            em\n                label for=id_url..._(Wiki name):\n        td\n            input type=text,,,id=id_name,,,name=name\n            input type=hidden,,,name=url,,,id=id_url\n            input type=hidden,,,name=parent,,,value={{object.parent.id}},,,id=id_parent\n",
                    null,
                    null
                ],
                [
                    null,
                    "SChForm",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n    \n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Forms\")\n        {{ block.super }}\n\n%% list_content_actions\n    % new_row _(\"New form\")\n\n\n%% list_row_header\n    th...Name\n\n\n%% list_row\n    td...{{object.name}}\n\n%% list_row_actions\n    {{block.super}}\n    % row_actions:\n        .field_list/schformfield_set,Fields,[|client://actions/format-indent-more.png]\n        .field_edit/process_code,Process code,[|client://mimetypes/text-x-generic-template.png]\n        .field_edit/end_class_code,End class code,[|client://actions/go-first.png]\n        .field_edit/end_code,End code,[|client://actions/go-bottom.png]\n        .field_edit/doc,Doc,[|client://apps/help-browser.png]\n        .template_edit2,Template,[|client://mimetypes/x-office-presentation.png]\n\n\n%% table_header_edit\n  h2..._(Table list)\n\n\n%% row_edit\n    % form:\n            \"parent\", \"name\", \"module\"",
                    null,
                    null
                ],
                [
                    null,
                    "SChFormField",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    % if form_edit\n        script language=python\n            def Init(self):\n                self.retdate = None\n                self.param.EventObject=self\n\n            def OnBeforeButtonClick(self):\n                self.param.set_new_href('/schbuilder/field_param/edit/'+self.type.GetValue()+'/')\n    %else\n        script language=python\n            def init_form(self):\n                self.add_field.Bind(wx.EVT_BUTTON, self.OnClick)\n\n            def signal_from_child(self, child, signal):\n                if signal=='set_bitmap_list':\n                    bitmaps = {\n                        \"field_up\":\"client://actions/go-up.png\",\n                        \"field_down\":\"client://actions/go-down.png\",\n                        \"field_duplicate\":\"client://actions/go-bottom.png\"\n                    }\n                    child.set_bitmaps(bitmaps)\n\n            def OnClick(self, event):\n                x = self.field_list.GetValue()\n                http = wx.GetApp().get_http(self.add_field)\n                adr = \"{{request.path}}\"+self.add_field.href+x+\"/add/\"\n                (err, adr2) = http.get(self, str(adr))\n                self.new_child_page(adr2)\n\n            def filter_http_result(self, target, href, mp):\n                if 'field_down' in href or 'field_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        if 'field_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n                    return True\n                elif 'field_duplicate' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        self.tabsort.grid.goto_last_row()\n                    return True\n                else:\n                    return None\n\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Fields\")\n        {{ block.super }}\n\n%% list_content_header\n    table\n        tr\n            th\n                label for=id_field_list...Select field type:\n            td width=210\n                select name=field_list,,,id=id_field_list,,,width=200\n                    %for item in object_list.model|choices_from_field:\"type\"\n                        option value={{item.0}}\n                            {{item.0}}\n            td align=left\n                % action \"add_field\" _(\"New field\") url=\"../../../\" \n\n\n%% list_row_header\n    th...Name\n    th...Label\n    th...Type\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.label}}\n    td...{{object.type}}\n\n%% list_row_actions\n    {{block.super}}\n    {% if not forloop.first %}\n        % row_actions:...field_up,Move up,[|client://actions/go-up.png]\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png]\n    {% endif %}\n    \n    % row_actions:...field_duplicat,Duplicate,[|client://actions/go-bottom.png]\n\n\n%% table_header_edit\n  h2..._(Table field list)\n\n%% row_edit\n    % form: \n        \"parent\", \"name\", \"required\", \"label\", \"initial\", \"widget\", \"help_text\", \"error_messages\", \"param\"\n    tr\n        td\n        td\n            {{form.type.as_hidden}}\n            ",
                    null,
                    null
                ],
                [
                    null,
                    "v_gen",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Compile result'\n        {{ block.super }}\n\n\n%% user_header\n    th...time\n    th...cmd\n    th...description\n\n\n%% user_row\n    tr\n        td...{{object.0}}\n        td...{{object.1}}\n        td...{{object.2}}\n        \n",
                    null,
                    null
                ],
                [
                    null,
                    "SChTasks",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'fields'\n                \n            def signal_from_child(self, child, signal):\n                if signal=='set_bitmap_list':\n                    bitmaps = {\n                        \"task_code\":\"client://mimetypes/text-x-generic-template.png\",\n                        \"tasks\":\"client://actions/format-indent-more.png\",\n                        \"doc\":\"client://apps/help-browser.png\",\n                    }\n                    child.set_bitmaps(bitmaps)\n\n   \n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Tasks\") vform=True\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New task\")\n\n\n%% list_row_header\n    th...Name\n    th...Generic\n\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.generic}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/table_code,Code,code\n        .field_list/schfield_set,Fields,fields\n        .field_edit/doc,Documentation,doc\n        .template_edit,Template\n        .delete\n\n%% table_header_edit\n  h2..._(Table list)\n\n\n%% row_edit\n    % form:\n        'parent', 'name'\n    \n    % form_item base_table.select:\n        %if not object.base_table or object.base_table == \"\"\n            option selected=selected,,,value=...---------\n        %else\n            option value=...---------\n        %if object.base_table == 'MPTTModel'\n            option value=MPTTModel...MPTTModel,,,selected=selected\n        %else\n            option value=MPTTModel...MPTTModel                    \n            \n        %for model in object.get_models\n            %if model == object.base_table\n                option value={{model}},,,selected=selected...{{model}}\n            %else\n                option value={{model}}...{{model}}\n            \n    % form:\n        'verbose_name', 'verbose_name_plural', 'generic'\n",
                    null,
                    null
                ],
                [
                    null,
                    "SChTask",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n\n%extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n                                \n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Tasks\") vform=True\n        {{ block.super }}\n\n%% list_content_actions\n    % new_row _(\"New task\")\n        \n%% list_row_header\n    th...Name\n\n%% list_row\n    td...{{object.name}}\n\n%% list_row_actions\n    {{ block.super }}\n    % row_actions:\n        .field_edit/code,Code,[|client://mimetypes/text-x-generic-template.png],_top\n        .field_edit/doc,Doc,[|client://apps/help-browser.png],_top\n    \n%% row_edit                \n    % form:\n        \"parent\", \"name\"\n",
                    null,
                    null
                ],
                [
                    null,
                    "db_field_edt_task",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n\n%extends \"schsys/db_field_edt.html\"\n\n%load exfiltry\n%load exsyntax\n\n%%form_title\n    .Edition: {{object.name}} [{{title}}]\n\n%% title\n    .V:{{object.name}}\n\n%% edit_area_sc\n    table width=100%\n        tr\n            td\n    CTRLSTYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,HEIGHT=100%,,,MINHEIGHT=400,,,MINWIDTH=800,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n        DATA...{{txt|bencode}}\n\n    % comment:\n        table width=100%\n            tr\n                td\n                    .def {{object.name}}(id, input_queue, output_queue, *args, **kwargs):\n            tr\n                td\n                    CTRLSTYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,HEIGHT=100%,,,MINHEIGHT=400,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n                        DATA...{{txt|bencode}}\n",
                    "",
                    ""
                ],
                [
                    null,
                    "v_installer",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Build result'\n        {{ block.super }}\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % list_action \"downloadi\" _(\"Download installer\") target=\"_top\" url=url\n\n\n%% user_header\n    th...Description\n\n\n%% user_row\n    %if object:\n        tr\n            td...{{object}}\n        \n",
                    null,
                    null
                ],
                [
                    null,
                    "SChStatic",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=800 form_height=600\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New static file\"\n\n%% list_row_header\n    th...Type\n    th...Name\n\n%% list_row\n    td...{{object.get_type_display}}\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/code,Code,[|client://apps/accessories-text-editor.png],_top\n        .delete\n\n%% row_edit\n    % form:\n",
                    "",
                    ""
                ],
                [
                    null,
                    "SChFiles",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=800 form_height=600\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New file\"\n\n%% list_row_header\n    th...File type\n    th...Name\n\n%% list_row\n    td...{{object.file_type}}\n    td...{{object.name}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/content,Content,content\n        .delete\n\n%% row_edit\n    % form:\n        \"parent\", \"file_type\", \"name\"\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "v_prj_import",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Import result'\n        {{ block.super }}\n\n\n%% user_header\n    th...time\n    th...cmd\n    th...description\n\n\n%% user_row\n    tr\n        td...{{object.0}}\n        td...{{object.1}}\n        td...{{object.2}}\n        \n",
                    null,
                    null
                ],
                [
                    null,
                    "SChLocale",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% all\n    %with edit_vscroll=True table_type='datatable'\n        {{ block.super }}\n\n%% list_content_actions\n    % new_row _(\"New locale\")\n\n%% list_row_header\n    th...Name\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions: ===>\n        edit\n        |\n        field_list/schtranslate_set,Locale,locale\n        translate_sync,_(\"Sync translate messages\"),[|client://actions/view-refresh.png]\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "SChTranslate",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New translation\"\n    \n\n%% list_row_header\n    th...Description\n    th...Translation\n    th...Status\n\n%% list_row\n    td...{{object.description}}\n    td...{{object.translation}}\n    td...{{object.status}}\n\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n\n%% row_edit\n    % form:\n",
                    null,
                    null
                ],
                [
                    null,
                    "v_translate_sync",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='Translaction results'\n        {{ block.super }}\n\n\n%% user_header\n    th...Updated\n    th...Inserted\n\n\n%% user_row\n    tr\n        td align=right... {{object.0}}\n        td align=right... {{object.1}}\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "v_locale_gen",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with show_title_bar=1 title='Generate locale files'\n        {{ block.super }}\n\n%% user_header\n    th...Status\n\n\n%% user_row\n    tr\n        td... {{object.0}}\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "FormInstaller",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='Make installer'\n        {{ block.super }}\n\n",
                    null,
                    null
                ],
                [
                    null,
                    "FormInstall",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='Install application'\n        {{ block.super }}\n\n%% form_content_button\n    button type=submit,,,value=_(Install),,,class=btn btn-fab btn-raised btn-info ladda-button refresh-button,,,data-style=slide-left,,,title=_(Install)\n        span class=fa fa-refresh\n\n%% form_content_schbutton\n    input type=submit,,,value=_(Install),,,class=btn btn-info,,,target=_self,,,height=44\n\n%% user_header\n    th...Message\n\n%% user_row\n    tr\n        td... {{object}}\n\n",
                    null,
                    null
                ],
                [
                    true,
                    "devtools",
                    "",
                    "!!!\nhttp = wx.GetApp().get_http(self)\nhttp.post(self, \"/tools/get_user_param/\", parm={ 'param': 'appset_up' })\npath = http.str()\n\nif path:\n    def _after(address):\n        wx.GetApp().GetTopWindow().new_main_page(address, panel=\"toolbar_Aplikacje__Lista_aplikacji\")\n    wx.CallLater(100, _after, path)\n\n",
                    "devtools",
                    ""
                ],
                [
                    null,
                    "SChChannelConsumer",
                    null,
                    "{# -*- coding: utf-8 -*- #}\n\n%extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n\n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Consumers\") vform=True\n        {{ block.super }}\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % widget class='menu' id='new_consumer' title=_(\"&New consumer\"):\n                    % for pos in object_list|module_obj:\"Consumer_CHOICES\"\n                        li\n                            a href={{table_path}}{{pos.0}}/add/...{{pos.1}}\n        \n%% list_row_header\n    th...Name\n    th...Type\n    th...Url\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.consumer_type}}\n    td...{{object.url}}\n    \n%% list_row_actions\n    {{ block.super }}\n    % row_actions:\n        .field_edit/consumer_code,Code,[|client://mimetypes/text-x-generic-template.png],_top\n        .field_edit/doc,Doc,[|client://apps/help-browser.png],_top\n    \n%% row_edit\n    {{ form.consumer_type.as_hidden }}\n    strong \n        {{object.get_consumer_type_display}}\n                \n    % form:\n        \"parent\", \"name\", \"url\"\n",
                    null,
                    null
                ]
            ],
            [
                [
                    "client://status/folder-open.png",
                    "1",
                    "Application packages",
                    "schbuilder.change_schappset",
                    "table/SChAppSet/-/form/list/",
                    "desktop"
                ],
                [
                    "client://categories/applications-internet.png",
                    "1",
                    "Make installer",
                    "",
                    "form/Installer/",
                    "browser"
                ],
                [
                    "client://devices/drive-optical.png",
                    "1",
                    "Install app",
                    "",
                    "form/Install/",
                    "browser"
                ]
            ],
            [
                [
                    [
                        "",
                        "",
                        "",
                        "",
                        "Installer",
                        "name = self.cleaned_data['name']\nreturn installer(request, name)\n"
                    ],
                    [
                        [
                            "",
                            "",
                            "",
                            "Application package name",
                            "name",
                            "choices=models.apppack",
                            true,
                            "ChoiceField",
                            ""
                        ]
                    ]
                ],
                [
                    [
                        "",
                        "",
                        "",
                        "",
                        "Install",
                        "install_file = request.FILES['install_file']\nname = install_file.name.split('.')[0]\nzip_file = zipfile.ZipFile(install_file.file)\nret = extract_ptig(zip_file, name)\n\nextract_to = os.path.join(settings.APP_PACK_PATH, name)\n(ret_code, output, err) = py_run([os.path.join(extract_to, 'manage.py'), 'post_installation'])\n\n\nreturn { \"object_list\": ret }\n"
                    ],
                    [
                        [
                            "",
                            "",
                            "",
                            "Install file (*.ptig)",
                            "install_file",
                            "",
                            true,
                            "FileField",
                            ""
                        ]
                    ]
                ]
            ],
            [],
            [],
            [
                [
                    "1\n2\n3\n4",
                    "f",
                    "filters.py"
                ],
                [
                    "# -*- coding: utf-8 -*-\nfrom django.core.management.base import BaseCommand, CommandError\n\nimport sys\nimport io\nimport os\nimport getopt\n\nfrom django.conf import settings\n\nfrom schlib.schtools.install import install\nfrom schbuilder.views import prj_export\nfrom schbuilder.models import SChAppSet\n\nAPP_SETS_TO_EXPORT =  [\n    'schdevtools', #prepare with initial data\n    'schsetup', 'schportal', 'schpytigondemo', 'schwebtrapper', 'scheditor', #prepare db but without initial data\n    'schcomponents', 'scheditor', '_schdata', '_schremote', '_schtasks', '_schtools', '_schwiki', #without db\n]    \n\n\nclass Command(BaseCommand):\n    help =\"Prepare installer files\"\n\n    def add_arguments(self, parser):\n        parser.add_argument(\n            '--app_sets', \n            default=None,\n            help='Specifies app_sets',\n        )\n\n    def handle(self, *args, **options):\n        if options['app_sets']:\n            app_sets_to_export = options['app_sets'].replace(',',';').split(';')\n        else:\n            app_sets_to_export = APP_SETS_TO_EXPORT\n            \n        for app_set_name in app_sets_to_export:\n            if not app_set_name:\n                continue\n            app_sets = list(SChAppSet.objects.filter(name = app_set_name))\n            if len(app_sets)>0:\n                app_set = app_sets[-1]        \n                x = prj_export(None, app_set.pk)\n                path = os.path.join(os.path.join(settings.ROOT_PATH, \"install\"), f\"{app_set_name}.prj\")\n                print(\"Export prj: \", path)\n                with open(path, \"wt\") as f: \n                    if type(x.content)==bytes:\n                        f.write(x.content.decode('utf-8'))\n                    else:\n                        f.write(x.content)\n",
                    "m",
                    "prepare_installer_files.py"
                ],
                [
                    "# -*- coding: utf-8 -*-\nfrom django.core.management.base import BaseCommand, CommandError\n\nimport sys\nimport io\nimport os\nimport getopt\n\nfrom django.conf import settings\n\nfrom schbuilder.views import prj_import_from_str\nfrom schbuilder.models import SChAppSet\n\nAPP_SETS_TO_IMPORT =  [\n    'schdevtools', #prepare with initial data\n    'schsetup', 'schportal', 'schpytigondemo', 'schwebtrapper', 'scheditor', #prepare db but without initial data\n    'schcomponents', 'scheditor', '_schdata', '_schremote', '_schtasks', '_schtools', '_schwiki', #without db\n]    \n\n\nclass Command(BaseCommand):\n    help =\"Prepare installer files\"\n\n    def handle(self, *args, **options):\n        for app_set_name in APP_SETS_TO_IMPORT:\n            app_sets = list(SChAppSet.objects.filter(name = app_set_name))\n            if len(app_sets)==0:\n                path = os.path.join(os.path.join(settings.ROOT_PATH, \"install\"), f\"{app_set_name}.prj\")\n                print(\"Import prj: \", path)\n                with open(path, \"rt\") as f: \n                    s = f.read()\n                    prj_import_from_str(s)\n",
                    "m",
                    "import_projects.py"
                ]
            ]
        ]
    ],
    [
        [
            "TEMPLATE=\"\"\"\ndiv\n    div\n        table\n            tr\n            td...Hello\n\"\"\"\n",
            "\r\n",
            "test",
            "R"
        ],
        [
            "",
            null,
            "style",
            "C"
        ],
        [
            "",
            null,
            "test_javascript",
            "J"
        ],
        [
            "class Test:\n    def __init__(self):\n        self.value = 0\n        \n    def get_value(self):\n        return self.value\n\n",
            null,
            "test_python",
            "P"
        ],
        [
            "test\n    width: 100%",
            null,
            "test_icss",
            "I"
        ],
        [
            "console.log(\"Hello world\");",
            null,
            "test/test_user.js",
            "U"
        ],
        [
            "print(\"Hello world!\")",
            null,
            "test/test.vue",
            "U"
        ],
        [
            "CACHE_NAME = 'PYTIGON_{{appset}}';\n",
            null,
            "sw.js",
            "U"
        ]
    ]
]