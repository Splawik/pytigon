{
    "model": "SChProject",
    "attributes": {
        "jsondata": null,
        "name": "_schdata",
        "title": "Data structures",
        "version": "latest",
        "main_view": true,
        "ext_apps": "_schtools.schtools",
        "plugins": null,
        "gui_type": "modern",
        "gui_elements": null,
        "login_required": false,
        "public": true,
        "main": false,
        "start_page": "_schdata",
        "user_app_template": "",
        "app_main": null,
        "doc": "",
        "desktop_gui_type": "tablet_modern",
        "smartfon_gui_type": "auto",
        "tablet_gui_type": "tablet_modern",
        "additional_settings": "",
        "custom_tags": "_schcomponents/components/ptig-wysiwygedit.js\n_schcomponents/components/ptig-codeeditor.js",
        "readme_file": null,
        "license_file": null,
        "install_file": null,
        "encoded_zip": null,
        "icon": "None",
        "icon_size": "1",
        "icon_code": null,
        "git_repository": "https://git.pytigon.cloud/pytigon/_schdata.git",
        "autor_name": null,
        "autor_email": null,
        "autor_www": null,
        "components_initial_state": null,
        "template_desktop": null,
        "template_smartfon": null,
        "template_tablet": null,
        "template_schweb": null,
        "template_theme": null
    },
    "children": [
        {
            "model": "SChApp",
            "attributes": {
                "jsondata": null,
                "name": "schchart",
                "title": "Charts",
                "module_name": "config",
                "module_title": "Config",
                "perms": true,
                "index": null,
                "model_code": "from pytigon_lib.schtools.schjson import json_dumps, json_loads\n#from schlib.schdjangoext.django_ihtml import ihtml_to_html\n#from django.template import Context, Template\nfrom django.db.models import Max, Min\n\nfrom schelements.models import *\n\nGET_CONFIG = \"\"\"\ndef get_config(obj, request_param):\n    config = {\n        'displaylogo': True, \n    }\n    return config\n\"\"\"\n\nGET_DATA = \"\"\"\ndef get_data(obj, request_param):\n    prj = apps.get_model(\"schbi\", \"project\").objects.get(name=\"test_bi_prj\")\n    tbl_year = prj.get_data()[\"year_sample\"]\n\n    yy = request_param[\"param\"].split(\"-\")\n\n    x = \"select year as x, y1 as y from tbl_year\"\n    x += \" where\" if yy[0] or yy[1] else \"\"\n    x += (\" year >= \" + yy[0]) if yy[0] else \"\"\n    if yy[1]:\n        if yy[0]:\n            x += \" and\"\n        x += \" year <= \" + yy[1]\n\n    data = duckdb.execute(x).fetchnumpy()\n    data['type'] = 'bar'\n\n    return {\n        'data': [data,],\n        'events': ['click', 'hover=>plotly/plotly-status/',]\n    }\n\"\"\"\n\nGET_LAYOUT = \"\"\"\ndef get_layout(obj, request_param):\n    layout = {\n      \"title\": {\n        \"text\": 'title'\n      },\n      \"font\": {\"size\": 18}\n    };\n    return layout\n\"\"\"\n\nON_EVENT = \"\"\"\ndef on_event(obj, data, request_param):\n    ret = {\n        'function': 'react',\n        'data': [\n            {\n            'x': ['giraffes', 'monkeys'],\n            'y': [20, 23],\n            'type': 'bar',\n            }\n        ],\n    }\n    return ret\n\"\"\"\n",
                "view_code": "from pytigon_lib.schtools.schjson import json_loads\n\nfrom django.apps import apps\nimport pyarrow\nimport duckdb\nimport numpy\nimport plotly\n\nfrom pytigon_lib.schdjangoext.import_from_db import run_code_from_db_field, ModuleStruct\n",
                "urls_code": null,
                "tasks_code": "",
                "consumer_code": "",
                "doc": null,
                "user_param": "",
                "icon": "None",
                "icon_size": "1",
                "icon_code": null
            },
            "children": [
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "Plot",
                        "verbose_name": "Plot",
                        "verbose_name_plural": "Polts",
                        "metaclass_code": null,
                        "table_code": "def get_get_config_if_empty(self, request, template_name, ext, extra_context, target):\n    return GET_CONFIG                    \n        \ndef get_get_data_if_empty(self, request, template_name, ext, extra_context, target):\n    return GET_DATA                    \n        \ndef get_get_layout_if_empty(self, request, template_name, ext, extra_context, target):\n    return GET_LAYOUT                    \n        \ndef get_on_event_if_empty(self, request, template_name, ext, extra_context, target):\n    return ON_EVENT\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "group",
                                "description": "Group",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "get_config",
                                "description": "Get config",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "get_data",
                                "description": "Get data",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "get_layout",
                                "description": "Get layout",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "on_event",
                                "description": "On event",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "permission",
                                "description": "Permission",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "plot_service",
                        "view_type": "u",
                        "param": "**argv",
                        "url": "plot_service/(?P<name>\\w+)/$",
                        "view_code": "request_param = { 'argv': argv }\nrequest_param['GET'] = request.GET\nif 'param' in request.GET:\n    request_param[\"param\"] = request.GET[\"param\"]\nelse:\n    request_param[\"param\"] = None\n    \nparam = json_loads(request.body.decode('utf-8'))\n\nrequest_param['body'] = param\n\naction = param['action']\nname = param['name']\n\nobjs = models.Plot.objects.filter(name=name)\nif len(objs) == 1:\n    obj = objs[0]\nelse:\n    obj = None\n\nif obj:\n    if action == 'get_config':\n        if obj.get_config:\n            config = run_code_from_db_field(\n                f\"plot__get_config{obj.pk}.py\",\n                obj,\n                \"get_config\",\n                \"get_config\",\n                obj=obj,\n                request_param=request_param\n            )            \n        else:\n            config = {\n                'displayModeBar': False, \n                'showLink': False, \n                'displaylogo': False, \n                'scrollZoom': True, \n                'modeBarButtonsToRemove': ['sendDataToCloud'],\n            }\n        return config\n    elif action == 'get_data':\n        if obj.get_data:\n            data = run_code_from_db_field(\n                f\"plot__get_data{obj.pk}.py\",\n                obj,\n                \"get_data\",\n                \"get_data\",\n                obj=obj,\n                request_param=request_param\n            )            \n        else:\n            data = {}\n        return data\n    elif action == 'get_layout':\n        if obj.get_layout:\n            layout = run_code_from_db_field(\n                f\"plot__get_layout{obj.pk}.py\",\n                obj,\n                \"get_layout\",\n                \"get_layout\",\n                obj=obj,\n                request_param=request_param\n            )            \n        else:\n            layout = {}\n        return layout\n    elif action == 'on_event':\n        if obj.on_event:\n            ret = run_code_from_db_field(\n                f\"plot__on_event{obj.pk}.py\",\n                obj,\n                \"on_event\",\n                \"on_event\",\n                obj=obj,\n                data=param,\n                request_param=request_param\n            )            \n            return ret\n        else:\n            return {}\n    else:\n        return { 'error': 'Action not found'}\n        \nreturn { 'error': 'Plot object not found'}\n",
                        "url_params": "{}",
                        "ret_type": "J",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "ReportDef",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New report definition\"\n\n%% list_row_header\n    th...name\n    th...description\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/declaration,Declaration,declaration\n        .field_edit/template,Template,template\n        .field_edit/to_html_rec,To html row,to_html_rec\n        .field_edit/save_fun,Save function,save_fun\n        .field_edit/load_fun,Load function,load_fun\n        .delete\n\n%% row_edit\n    % form:\n        .app,name,description\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Report",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='simple':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions    \n    div class=tr d-inline\n        .New: \n        % for pos in object_list.model.get_rep_types:        \n            % new_row_inline pos \"\" \"\" \"\" \"\" \"../../../../../new_rep/\"|append_str:pos|append_str:\"/0/\" \n\n\n%% list_row_header\n    th...Report type\n    th...Date\n\n%% list_row\n    td...{{object.report_def_name}}\n    td...{{object.date|isoformat}}\n\n\n%% list_row_actions\n    % row_actions:\n        .edit-inline,_(Update),,,,,../../../../../../schreports/table/Report/{id}/edit__rep/        \n        .pdf\n        .odf        \n        .field_edit/data,Data,data        \n        .delete\n\n%% row_edit\n    % form:\n        \"parent\", \"parent_field_name\", \"order\", \"report_def_name\", \"date\"\n\n%% dialog_type\n    .modal-max\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "subreport",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n\n% load exfiltry\n% load exsyntax\n    \n% subform href\n\n%% dialog_type\n    .modal-max\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "v_edit_subrep",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n\n% load exfiltry\n% load exsyntax\n\n    div class=form-group\n        %% header_new_button\n            div class=row\n                div class=tr d-inline\n                    % new_row \"+ \"|append_str:rep_def.description \"\" \"\" \"\" \"-\" \"{{base_path}}schreports/new_subrep/\"|append_str:parent_rep.id|append_str:\"/\"|append_str:rep_type|append_str:\"/\"            \n        \n        div class=row\n            %% header\n            \n            % for object in reports:\n                div \n                    %% rep_line\n                    div class=fab,,,style=transform:scale(0.5); -webkit-transform:scale(0.5); -moz-transform:scale(0.5); -o-transform:scale(0.5); margin-left: -40px;\n                        nav class=menu\n                            input type=checkbox,,,href=#,,,class=menu-open,,,name=menu-open,,,id=menu-open-subrep-{{forloop.counter0}}\n                            label class=menu-open-button,,,for=menu-open-subrep-{{forloop.counter0}},,,draggable=true,,,ondrop=subreport_drop(event,'{{base_path}}');,,,ondragstart=subreport_dragstart(event);,,,ondragenter=subreport_ondragenter(event);,,,ondragleave=subreport_ondragleave(event);,,,ondragover=subreport_ondragover(event);,,,name={{object.id}}\n                                h4...{{forloop.counter}}\n                                span class=fa fa-bars fa-3x\n                                \n                            a class=menu-item,,,data-inline=,,,true,,,href={{base_path}}schreports/table/Report/{{object.id}}/action/move_up/,,,name=move_up,,,title=Move up,,,target=refresh_frame\n                                i class=fa fa-hand-o-left fa-2x\n\n                            a class=menu-item bg-primary popup,,,href={{base_path}}schreports/table/Report/{{object.id}}/edit__rep/,,,name=update/inline,,,title=update,,,target=popup_edit\n                                i class=fa fa-pencil-square-o fa-2x\n                                \n                            a class=menu-item bg-danger popup,,,href={{base_path}}schreports/table/Report/{{object.id}}/delete/,,,name=delete,,,title=delete,,,target=popup_delete\n                                i class=fa fa-trash-o fa-2x\n                                                                                                \n                            a class=menu-item,,,data-inline=true,,,href={{base_path}}schreports/table/Report/{{object.id}}/action/move_down/,,,name=move_down,,,title=Move down,,,target=refresh_frame\n                                i class=fa fa-hand-o-right fa-2x\n                                \n\n                                \n                                                    \n            %% footer\n            \n        %% footer_new_button\n            div class=row\n                div class=tr d-inline\n                    % new_row \"+ \"|append_str:rep_def.description \"\" \"\" \"\" \"-\" \"{{base_path}}schreports/new_subrep/\"|append_str:parent_rep.id|append_str:\"/\"|append_str:rep_type|append_str:\"/\"            \n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Form_FilterFormReport",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='<<form_title>>'\n        {{ block.super }}\n\n\n%% user_header\n    th...<<col_name1>>\n    th...<<col_name2>>\n    th...<<col_name3>>\n\n\n%% user_row\n    tr\n        td... {{object.0}}\n        td align=right... {{object.1|floatnullformat}}\n        td align=right... {{object.2|to_int}}\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "report_pdf",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"base_pdf.html\"\n\n% load exfiltry\n% load exsyntax\n% load subreport\n\n%% css\n    style type=text/css{:}\n        body:\n            font-family:sans-serif\n            font-size:80%\n            padding:20\n\n        table:\n            border:0\n            vertical-align:top\n            padding:3\n\n        td table:\n            padding: 1\n            border: 0\n\n        th:\n            cellpadding:3\n            font-weight:bold\n            border: 0\n\n        td:\n            vertical-align:top\n            cellpadding:3\n            border: 0\n\n        strong,b:\n            font-weight:bold\n\n        p:\n            cellpadding:2\n            border:0\n            width:100%\n\n        a:\n            color:#0000ff\n            text-decoration: underline\n\n        strong a:\n            color:#00ffff\n\n        ul:\n            border:0\n\n        li:\n            cellpadding:5\n            width:95%-60\n\n        ul li:\n            font-style: italic\n\n        em:\n            font-style: italic\n\n        b:\n            font-weight: bold\n\n        td:hover.test:\n            bgcolor: #ff0000\n\n        h1:\n            font-size:300%\n            font-weight:bold\n            cellpadding:12 2 12 2\n\n        h2:\n            font-size:240%\n            font-weight:bold\n            cellpadding:10 2 50 2\n\n        h3:\n            font-size:190%\n            font-weight: bold\n            cellpadding:8 2 8 2\n            width: 100%\n            align: center\n\n        h4:\n            font-size:150%\n            font-weight: bold\n            cellpadding:6 2 6 2\n\n        h5:\n            font-size:120%\n            font-weight: bold\n            cellpadding:4 2 4 2\n\n        h6:\n            font-size:100%\n            font-weight: bold\n            cellpadding:2 2 2 2\n\n\n        table.tabdel:\n            border:1\n            width:100%\n\n        table.tabdel tr th:\n            bgcolor:#ccc\n            border:1\n            padding:5\n            cellpadding:5\n\n        table.tabdel tr td:\n            bgcolor:#eee\n            border:1\n            padding:5\n            cellpadding:5\n\n        .helptext:\n            font-size:120%\n            font-style:italic\n            \n        i:\n            font-style:italic\n            \n        .podpis:\n            align: center\n\n        table.simple:\n            border:0\n            padding:0\n        \n        table.simple tr td:\n            cellpadding:0\n            \n        table.tab_header:\n            font-size:60%\n        \n        table.with_border:\n            border:1\n            \n        table.with_border tr td:\n            border:1\n            margins:1\n        \n        table.for_img:\n            border:1\n            margins:0\n            padding:0\n            \n            \n        table.for_img tr td:\n            border:1\n            margins:0\n            padding:0\n            cellpadding:0\n\n        img:\n            margins:0\n            padding:0\n        \n        td.x11:\n            width: 69\n            height: 69\n            margins: 0\n            padding: 0\n        \n        td.x21:\n            width: 138\n            height: 69\n            margins: 0\n            padding: 0\n\n        td.x12:\n            width: 69\n            height: 138\n            margins: 0\n            padding: 0\n        \n        td.x22:\n            width: 138\n            height: 138\n            margins: 0\n            padding: 0\n\n        td.x23:\n            width: 138\n            height: 207\n            margins: 0\n            padding: 0\n\n        td.x11 img:\n            width: 67\n            height: 67\n            margins: 0\n            padding: 0\n        \n        td.x21 img:\n            width: 136\n            height: 67\n            margins: 0\n            padding: 0\n\n        td.x12 img:\n            width: 67\n            height: 136\n            margins: 0\n            padding: 0\n        \n        td.x22 img:\n            width: 136\n            height: 136\n            margins: 0\n            padding: 0\n\n        td.x23 img:\n            width: 136\n            height: 205\n            margins: 0\n            padding: 0\n\n        img.checkbox:\n            width: 12\n            height: 12\n            margin: 20\n\n%% page_setup\n    page\n        %% page_header\n            header height=100        \n                table width=100%,,,class=tab_header\n                    tr\n                        td width=25%\n                            .POLBRUK S.A.\n                        td width=50%\n                            .BEZPIECZE\u0143STWO I CHIGIENA PRACY\n                        td width=25%\n                            .Linia: {{object.json_nag1}}\n                    tr\n                        td...NAZWA PROCESU:\n                        td...{{object.json_nag2}}\n                        td...X\n                    tr\n                        td...NUMER DOKUMENTU: {{object.json_st1}}\n                        td\n                            table width=50%,,,class=simple\n                                tr \n                                    td width=50%\n                                        .WYDANIE: {{object.json_st2}}\n                                    td width=50%\n                                        .DATA WYDANIA: {{object.json_st3}}\n                        td...\u0141\u0105czny czas trwania:\n        %% page_footer\n\n\n%% content \n\n    table width=100%,,,class=with_border\n        tr height=100\n            td width=33%,,,height=40\n                .Opracowa\u0142:\n            td  width=33%\n                .Sprawdzi\u0142:\n            td width=34%\n                .Zatwierdzi\u0142:\n        tr \n            td height=40\n                .Data i podpis:\n            td...Data i podpis:\n            td...Data i podpis:\n        \n    p...{{object.json_ostrz1}}\n    p...{{object.json_ostrz2}}\n    \n    %check object.json_so1\n    .X1 <br>                \n                \n    table width=100%,,,class=simple\n        %for subrep in object|args:\"etap\"|call:\"getsubreps\":\n            %if forloop.counter0|divisibleby:\"4\":\n                <tr>            \n            td width=25%\n                table class=for_img\n                    %if subrep.json_view_type == '1234'    \n                            tr \n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek1 }}\n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek2 }}\n                            tr \n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek3 }}\n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek4 }}\n                            tr\n                                td colspan=2,,,class=x21                                    \n                                    {{ subrep.json_opis }}\n                        %elif subrep.json_view_type == '1123'\n                            tr \n                                td colspan=2,,,class=x21\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek1 }}\n                            tr\n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek2 }}\n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek3 }}\n                            tr\n                                td colspan=2,,,class=x21\n                                    {{ subrep.json_opis }}\n                        %elif subrep.json_view_type == '1213'\n                            tr\n                                td rowspan=2,,,class=x12\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek1 }}\n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek2 }}\n                            tr \n                                td class=x11\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek3 }}\n                            tr \n                                td colspan=2,,,class=x21\n                                    {{ subrep.json_opis }}\n                        %elif subrep.json_view_type == '1122'\n                            tr\n                                td class=x21\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek1 }}\n                            tr \n                                td class=x21\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek2 }}\n                            tr \n                                td class=x21\n                                    {{ subrep.json_opis }}\n                        %elif subrep.json_view_type == '1212'\n                            tr\n                                td class=x12\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek1 }}\n                                td class=x12\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek2 }}\n                            tr \n                                td colspan=2,,,class=x21\n                                    {{ subrep.json_opis }}\n                        %elif subrep.json_view_type == '1111'\n                            tr \n                                td  class=x22\n                                    img src=data:image/png;base64,{{ subrep.json_obrazek1 }}\n                            tr \n                                td class=x21\n                                    {{ subrep.json_opis }}\n                        %elif subrep.json_view_type == '0000'\n                            tr \n                                td class=x23\n                                    {{ subrep.json_opis }}\n                        %else\n                            tr \n                                td class=x23\n                                    {{ subrep.json_opis }}                \n\n            %if forloop.counter0|add:\"1\"|divisibleby:\"4\" or forloop.last:\n                </tr>\n        \n    table width=100%,,,class=tab_body\n        tr\n            td width=25%\n                strong...Sprz\u0119t ochronny: \n                <br>\n                %check object.json_so1 \"ochronniki s\u0142uchu<br>\" \n                %check object.json_so2 \"maski przeciwpy\u0142owe<br>\" \n                %check object.json_so3 \"maski przeciwchemiczne<br>\" \n                %check object.json_so4 \"szelki i linka bezpiecze\u0144stwa<br>\" \n                %check object.json_so5 \"okulary ochronne<br>\" \n                %check object.json_so6 \"r\u0119kawice ochronne<br>\" \n                %check object.json_so7 \"kask ochronny<br>\" \n                %check object.json_so8 \"dzie\u017c, obuwie i sprz\u0119t ochronny w EX<br>\" \n                %check object.json_so9 \"inny sprz\u0119t ochronny <br>\" \n                <br>&nbsp;<br>\n                strong...Sprz\u0119t specjalistyczny\n                <br>\n                %check object.json_ss1 \"drabina <br>\" \n                %check object.json_ss2 \"pomost <br>\" \n                %check object.json_ss3 \"rusztowanie <br>\" \n                %check object.json_ss4 \"wysi\u0119gnik z koszem <br>\" \n                %check object.json_ss5 \"podno\u015bniki/wci\u0105gniki <br>\" \n                %check object.json_ss6 \"w\u00f3zek wid\u0142owy <br>\" \n                %check object.json_ss7 \"zawiesie <br>\" \n                <br>&nbsp;<br>\n                strong...Stosowane substancje niebezpieczne\n                <br>\n                .Nazwa: {{sn1}} <br>\n                %check object.json_sn2 \"karty substancji niebezpiecznych <br>\"\n\n            td width=75%\n                table width=100%\n                    tr\n                        td width=33%\n                            .Prace na wysoko\u015bci:\n                        td width=67%\n                            table width=100%\n                                tr\n                                    td width=50%\n                                        .Szczeg\u00f3lne zabezpieczenia w przestrzeniach zamkni\u0119tych\n                                    td width=50%\n                                        .X\n\n    table width=100%,,,class=podpisy            \n        tr\n            td class=podpis...<br />.........................................................................\n            td class=podpis...<br />.........................................................................\n        tr\n            td class=podpis...(sporz\u0105dzi\u0142 \u2013 data i podpis) \n            td class=podpis...(zatwierdzi\u0142 \u2013 data i podpis)              \n        tr\n            td height=80\n            td\n        tr\n            td class=podpis...<br />.........................................................................\n            td\n        tr\n            td class=podpis...(wykona\u0142 - data i podpis)\n            td\n            ",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "check",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% if is_checked:\n    img class=checkbox,,,src=file:///static/fonts/font-awesome/fonts/32x32/check.png\n% else:\n    img class=checkbox,,,src=file:///static/fonts/font-awesome/fonts/32x32/square-o.png\n&nbsp;&nbsp;{{title|safe}}",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Plot",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New plot\"\n\n%% list_row_header\n    th...name\n    th...group\n    th...permission\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.group}}\n    td...{{object.permission}}\n\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/get_config,Get config,get_config\n        .field_edit/get_data,Get data,get_data\n        .field_edit/get_layout,Get layout,get_layout\n        .field_edit/on_event,On event,on_event\n        .delete\n\n%% row_edit\n    % form:\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "CommonGroup",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/tree.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=800 form_height=600 table_type='simple' title=_(\"Common Groups\"):\n        {{ block.super }}\n\n%% list_content_actions_new_row\n    div class=tr d-inline\n        % with object_list.model|args:parent_pk|call:\"get_group_types\" as tab:\n            % if tab:\n                ._(New): \n                % for pos in tab:\n                    % new_row_inline pos.description \"\" \"\" \"\" \"\" table_path|append_str:\"../../new_group/\"|append_str:pos.name|append_str:\"/\"|append_str:parent_pk|append_str:\"/\"\n\n%% list_row_header\n    th...Title\n\n%% list_row\n    td...{{object.to_str|safe }}\n        \n%% list_row_actions\n    % if object.get_def.action_template:\n        {% subtemplate object.get_def.get_action_template %}\n    % else:\n        % row_actions:\n            .edit-inline,_(Update),,,,,../../../../../../schreports/table/CommonGroup/{id}/edit__group/\n            .pdf\n            .odf        \n            .field_edit/data,Data,data        \n            .delete\n\n%% row_edit\n    % form:\n        \n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "CommonGroupDef",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New group definition\"\n\n%% list_row_header\n    th...Name\n    th...Description\n    th...Main group\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n    td...{{object.main_group}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/declaration,Declaration,declaration\n        .field_edit/template,Template,template\n        .field_edit/to_html_rec,To html row,to_html_rec\n        .field_edit/save_fun,Save function,save_fun\n        .field_edit/load_fun,Load function,load_fun\n        .field_edit/on_new_elem_event,On new element,on_new_elem_event\n        .field_edit/allowed_new_fields,Allowed new fields,allowed_new_fields\n        .field_edit/to_str_fun,Convert to string function,to_str_fun\n        .field_edit/action_template,Action template,action_template\n        .delete\n\n%% row_edit\n    % form:\n        .app,name,description,main_group\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Plots",
                        "url": "table/Plot/-/form/list/",
                        "url_type": "desktop",
                        "perms": null,
                        "icon": "fa://pencil-square.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                }
            ]
        },
        {
            "model": "SChApp",
            "attributes": {
                "jsondata": null,
                "name": "schelements",
                "title": "Elements",
                "module_name": "config",
                "module_title": "Config",
                "perms": true,
                "index": null,
                "model_code": "import copy\nfrom pytigon_lib.schdjangoext.django_ihtml import ihtml_to_html\nfrom django.template.loader import select_template\nimport datetime\nfrom django.db import transaction\nfrom django.contrib.contenttypes.models import ContentType\nfrom django.db.models import Q, Sum\nfrom django.apps import apps\nfrom django.dispatch import receiver\nfrom django.db.models.signals import post_delete\nfrom django.conf import settings\nfrom django.template import Template, Context\n\nfrom pytigon_lib.schviews.actions import new_row_ok, update_row_ok\nfrom pytigon_lib.schdjangoext.import_from_db import run_code_from_db_field, ModuleStruct\nfrom pytigon_lib.schdjangoext.fastform import form_from_str, FAST_FORM_EXAMPLE\n\nfrom pytigon_lib.schdjangoext.django_ihtml import ihtml_to_html\nfrom pytigon_lib.schdjangoext.import_from_db import run_code_from_db_field, get_fun_from_db_field, ModuleStruct\nfrom pytigon_lib.schtools.tools import is_in_cancan_rules\n\nfrom pytigon_lib.schviews import actions\n\ndef get_element_queryset():\n    return None\n\nGET_ELEMENT_QUERYSET =  OverwritableCallable(get_element_queryset)\n\nclass ElementManager(models.Manager):\n    def get_queryset(self):\n        q = GET_ELEMENT_QUERYSET()\n        if q:\n            q2 = super().get_queryset().filter(q)\n        else:\n            q2 = super().get_queryset()\n        return q2.prefetch_related(\"parent\", \"grand_parent1\", \"grand_parent2\", \"grand_parent3\", \"grand_parent4\", \"first_ancestor\")\n\nGROUP_FOR_TYPE = None\n\nSTRUCTURE = {\n    \"ROOT\":  {\"next\": [\"I-GRP\", \"O-GRP\", \"C-GRP\"]},\n    \"O-GRP\": { \"title\": \"Group of owners\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-COM\": { \"title\": \"Companies\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-DIV\": { \"title\": \"Divisions\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-DEP\": { \"title\": \"Departaments\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-POS\": { \"title\": \"Positions\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-EMP\": { \"title\": \"Employees\", \"table\": \"Element\", \"app\": \"schelements\" }, \n    \"O-LOC\": { \"title\": \"Locations\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-PER\": { \"title\": \"Persons\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-CUS\": { \"title\": \"Customers\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-SUP\": { \"title\": \"Suppliers\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-DEV\": { \"title\": \"Devices\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-OTH\": { \"title\": \"Other owners\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"O-ALI\": { \"title\": \"Aliases\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-GRP\": { \"title\": \"Group of items\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-SRV\": { \"title\": \"Services\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-INT\": { \"title\": \"Intellectual values\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-CUR\": { \"title\": \"Currency\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-MAT\": { \"title\": \"Materials\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-RAW\": { \"title\": \"Raw materials\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-PRD\": { \"title\": \"Products\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-IPR\": { \"title\": \"Intermediate products\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-MER\": { \"title\": \"Merchandises\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-DEV\": { \"title\": \"Devices\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-PMA\": { \"title\": \"Production machines\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-VEH\": { \"title\": \"Vehicles\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-OTH\": { \"title\": \"Other items\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"I-ALI\": { \"title\": \"Item aliases\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"C-SYS\": { \"title\": \"Config - system\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"C-UNT\": { \"title\": \"Units of measure\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"C-DIC\": { \"title\": \"Dictionaries\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"C-OTH\": { \"title\": \"Config - others\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"C-ALI\": { \"title\": \"Config aliases\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"C-FLD\": { \"title\": \"Config folders\", \"table\": \"Element\", \"app\": \"schelements\" },\n    \"C-GRP\": { \"title\": \"Group of config\", \"table\": \"Element\", \"app\": \"schelements\" },\n}\n\nACCESS_FUN = \"\"\"#import datetime\n#\n#def q_for_list(request, user, profile):\n#    pass\n#\n#def check_user_perm(dochead, user, perm, doc_type_name):\n#    pass \n    \n\"\"\"\n\nSAVE_ITEM = \"\"\"#import datetime\n#\n#def save(docitem, view, form, request):\n#    return True #True if you want to save the object else False\n    \n\"\"\"\n\nSAVE_HEAD = \"\"\"#import datetime\n#\n#def save(dochead, view, form, request):\n#    return True #True if you want to save the object else False\n    \n\"\"\"\n\n    \nTO_STR = \"\"\"#Example: \n#import datetime\n#\n#def to_str(obj):\n#    pass\n\n\"\"\"\n\nLOAD_BASE_OBJ = \"\"\"#Example: \n#import datetime\n#\n#def load(data):\n#    return data\n    \n\"\"\"\n\nSAVE_BASE_OBJ = \"\"\"#Example: \n#import datetime\n#\n#def save(form, obj):\n#    return form.cleaned_data\n    \n\"\"\"\n\nACCEPT_PROC = \"\"\"#Example: \n#import datetime\n#\n#def accept(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form):\n#    pass\n\n\"\"\"\n\nUNDO_PROC = \"\"\"#Example: \n#import datetime\n#\n#def undo(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form):\n#    pass\n\n\"\"\"\n\nCAN_SET = \"\"\"#Example: \n#import datetime\n#\n#def can_set(request, doc_head):\n#    pass\n\n\"\"\"\n\nCAN_UNDO = \"\"\"#Example: \n#import datetime\n#\n#def can_undo(request, doc_head):\n#    pass\n\n\"\"\"\n\nHEAD_TEMPLATE=\"\"\"#Example:\n#% extends \"schelements/dochead.html\"\n#\n#% load exfiltry\n#% load exsyntax\n\n\"\"\"\n\n\nITEM_TEMPLATE=\"\"\"#Example:\n#% extends \"schelements/docitem.html\"\n#\n#% load exfiltry\n#% load exsyntax\n\n\"\"\"\n\nTEMPLATE_SRC = \"\"\"#Example:\n% extends \"forms/edit_form.html\"\n\n% load exfiltry\n% load exsyntax\n% load subdoc\n\n%% row_edit_form\n    % form:\n\n\"\"\"\n\nACTION_TEMPLATE = \"\"\"#Example\n#% load exfiltry\n#% load exsyntax\n\"\"\"\n\nINFO_TEMPLATE = \"\"\"#Example\n#% load exfiltry\n#% load exsyntax\n\"\"\"\n\n\nTO_STR = \"\"\"#Example\n#import datetime\n#\n#def to_str(obj):\n#    return obj.name\n\"\"\"\n\nON_DELETE = \"\"\"#Example\n#import datetime\n#\n#def on_delete(obj, request, view):\n#    pass\n\"\"\"\n\nACTION = \"\"\"#Example\n#import datetime\n#\n#def action(obj, action_name argv):\n#    pass\n\"\"\"\n\nTO_HTML_REC = \"\"\"#header\n#\n#body\n#    {{ object.opis }}\n#\n#footer\n#\n\n\"\"\"   \n\nHEAD_FORM = '\\n'.join(('#' + item for item in FAST_FORM_EXAMPLE.split(\"\\n\")))\nITEM_FORM = HEAD_FORM\nDECLARATION = ITEM_FORM\nACCEPT_FORM = ITEM_FORM\nUNDO_FORM = ITEM_FORM\n\n$$$@receiver(post_delete,sender=Element)\ndef delete_profile(sender, instance, *args, **kwargs):\n    if instance.parent:\n        n = instance.parent.number_of_children()\n        if n<2:\n            instance.parent.has_children = False\n",
                "view_code": "from django.urls import resolve\nfrom django.conf import settings\nfrom django.db import transaction\nfrom django_select2.forms import HeavySelect2Widget, ModelSelect2Widget\nfrom django.core.validators import int_list_validator\nfrom django.http import Http404\n\nfrom pytigon_lib.schdjangoext.fastform import form_from_str\nfrom django.db.models import Q, F\n\nfrom pytigon_lib.schdjangoext.import_from_db import run_code_from_db_field, get_fun_from_db_field, ModuleStruct\n\ndef year_ago():\n    dt = datetime.date.today()    \n    try:\n        dt = dt.replace(year=dt.year-1)\n    except ValueError:\n        dt = dt.replace(year=dt.year-1, day=dt.day-1)\n    return dt\n\ndef change_status(request, pk, action='accept'):    \n    action_name = request.GET.get('x1', '')\n    doc_head = models.DocHead.objects.get(pk=pk)\n    return doc_head.change_status(action_name, action, request.POST, request, request.user.username)\n\ndef __change_status(request, pk, action='accept'):    \n    doc_head = models.DocHead.objects.get(pk=pk)\n    doc_type = doc_head.doc_type_parent\n    doc_reg = doc_type.parent\n    action_name = request.GET.get('x1', '')\n    reg_status_list = models.DocRegStatus.objects.filter(parent=doc_reg, name=action_name)\n    if len(reg_status_list)==1:\n        reg_status = reg_status_list[0]\n    else: \n        reg_status = None\n    form = None\n\n    if reg_status:\n        if action=='accept':\n            form_txt = reg_status.accept_form\n            fun = get_fun_from_db_field(\n                f\"regstatus__accept_proc_{reg_status.pk}.py\",\n                reg_status,\n                \"accept_proc\",\n                \"accept\",\n            )\n        else:\n            form_txt = reg_status.undo_form\n            fun = get_fun_from_db_field(\n                f\"regstatus__undo_proc_{reg_status.pk}.py\",\n                reg_status,\n                \"undo_proc\",\n                \"undo\",\n            )\n\n        params = {\n            'request': request,\n            'doc_head': doc_head,\n            'doc_type': doc_type,\n            'doc_reg': doc_reg,\n        }\n        if form_txt:\n            form_class = form_from_str(form_txt, params)\n        else:\n            form_class = None\n\n        if (not form_class) or request.POST :\n            if form_class:\n                form = form_class(request.POST)\n            else:\n                form = None\n\n            if (not form) or form.is_valid():\n                doc_status = models.DocHeadStatus()\n                doc_status.parent = doc_head\n                callback = None\n                new_status = None\n\n                try:\n                    if fun:\n                        with transaction.atomic(): \n                            ret = fun(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form)\n                            if type(ret) == dict and 'errors' in ret:\n                                errors = ret['errors']\n                                if 'callback' in ret:\n                                    callback = ret['callback']\n                                if 'status' in ret:\n                                    new_status = ret['status']\n                            else:\n                                errors = ret\n                    else:\n                        errors = None\n                            \n                except ValueError as err:\n                    errors = err.args\n\n                if not errors:\n                    if new_status:\n                        doc_head.status = action_name\n                        doc_head.save()\n                    elif action_name and action_name[:1] != '_' and action_name != doc_head.status:\n                        doc_head.status = action_name\n                        doc_head.save()\n\n                    if action != 'accept':\n                        models.DocItem.objects.filter(parent=doc_head, level__gt = reg_status.order if reg_status.order >=0 else 0).delete()\n\n                    doc_status.date = timezone.now()\n                    doc_status.operator = request.user.username\n                    doc_status.save()\n                    if callback:\n                        return callback()\n                    else:\n                        return actions.update_row_ok(request, int(doc_head.id), str(doc_head))\n                else:\n                    return { 'errors': errors, 'form': form, 'doc_head': doc_head, 'doctype': doc_type, 'doc_reg': doc_reg, 'reg_status': reg_status, 'action_name': action_name, }\n        if not form:\n            if form_class:\n                form = form_class()\n            else:\n                form = None\n            return { 'error': False, 'form': form, 'doc_head': doc_head, 'doctype': doc_type, 'doc_reg': doc_reg, 'reg_status': reg_status, \n                'action_name': action_name,\n            }\n    else:\n        return { 'error': \"Status %s doesn't exists\" % action_name }\n",
                "urls_code": "gen.for_field('DocType', 'dochead_set', 'Documents', prefix=\"doc\", template_name=\"schelements/dochead2.html\")\n",
                "tasks_code": "",
                "consumer_code": "",
                "doc": "",
                "user_param": "",
                "icon": "None",
                "icon_size": "1",
                "icon_code": null
            },
            "children": [
                {
                    "model": "SChChoice",
                    "attributes": {
                        "name": "account_type_choice_2",
                        "verbose_name": "Account type 2"
                    },
                    "children": [
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "B",
                                "value": "Balance"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O",
                                "value": "Off-balance"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "N",
                                "value": "Non-financial"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "V",
                                "value": "Inventory"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I",
                                "value": "Inventory income"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "D",
                                "value": "Disposal"
                            }
                        }
                    ]
                },
                {
                    "model": "SChChoice",
                    "attributes": {
                        "name": "account_type_choice_1",
                        "verbose_name": "Account type 1"
                    },
                    "children": [
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "S",
                                "value": "Synthetic"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "A",
                                "value": "Analytical"
                            }
                        }
                    ]
                },
                {
                    "model": "SChChoice",
                    "attributes": {
                        "name": "element_type_choice",
                        "verbose_name": "Element type choice"
                    },
                    "children": [
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-GRP",
                                "value": "Owner/Group"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-COM",
                                "value": "Owner/Company"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-DIV",
                                "value": "Owner/Division"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-DEP",
                                "value": "Owner/Department"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-POS",
                                "value": "Owner/Position"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-EMP",
                                "value": "Owner/Employee"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-LOC",
                                "value": "Owner/Location"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-PER",
                                "value": "Owner/Person"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-CUS",
                                "value": "Owner/Customer"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-SUP",
                                "value": "Owner/Supplier"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-DEV",
                                "value": "Owner/Device"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-OTH",
                                "value": "Owner/Other"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "O-ALI",
                                "value": "Owner/Alias"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-GRP",
                                "value": "Item/Group"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-SRV",
                                "value": "Item/Service"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-INT",
                                "value": "Item/Intellectual value"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-CUR",
                                "value": "Item/Currency"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-MAT",
                                "value": "Item/Material"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-RAW",
                                "value": "Item/Raw material"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-PRD",
                                "value": "Item/Product"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-IPR",
                                "value": "Item/Intermediate product"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-MER",
                                "value": "Item/Merchandise"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-DEV",
                                "value": "Item/Device"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-PMA",
                                "value": "Item/Production machine"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-VEH",
                                "value": "Item/Vehicle"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-OTH",
                                "value": "Item/Other"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "I-ALI",
                                "value": "Item/Alias"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "C-SYS",
                                "value": "Config/System"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "C-UNT",
                                "value": "Config/Unit of measure"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "C-DIC",
                                "value": "Config/Dictionary"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "C-OTH",
                                "value": "Config/Other"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "C-ALI",
                                "value": "Config/Alias"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "C-FLD",
                                "value": "Config/Folder"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "C-GRP",
                                "value": "Config/Group"
                            }
                        }
                    ]
                },
                {
                    "model": "SChChoice",
                    "attributes": {
                        "name": "doctype_status",
                        "verbose_name": "Status of document head"
                    },
                    "children": [
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "0",
                                "value": "Disabled"
                            }
                        },
                        {
                            "model": "SChChoiceItem",
                            "attributes": {
                                "name": "1",
                                "value": "Activ"
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "Element",
                        "verbose_name": "Element",
                        "verbose_name_plural": "Elements",
                        "metaclass_code": "permissions = [\n    (\"admin_element\", \"Can administer elements\"),\n]\n",
                        "table_code": "@staticmethod\ndef get_structure():\n    return STRUCTURE\n\ndef init_new(self, request, view, param=None):\n    defaults = { 'type': param }\n    return defaults\n\ndef save(self, *argi, **argv):\n    if not self.parent:\n        global GROUP_FOR_TYPE\n        if GROUP_FOR_TYPE == None:\n            GROUP_FOR_TYPE = {}\n            object_list = Element.objects.filter(Q(type=\"I-GRP\")|Q(type=\"O-GRP\"))\n            for obj in object_list:\n                if obj.code:\n                    if \"(\" in obj.description and \")\" in obj.description:\n                        types = obj.description.split(\"(\")[1].split(\")\")[0].replace(\",\", \";\").split(\";\")\n                        for t in types:\n                            t2 = t.strip()\n                            if t2:\n                                GROUP_FOR_TYPE[t2]=obj        \n        if self.type in GROUP_FOR_TYPE:\n            self.parent = GROUP_FOR_TYPE[self.type]\n\n    if not self.code:\n        self.code = self.gen_code()\n    \n    path = self.code if self.code else \"\"\n\n    tab = self.parents()\n    for pos in tab:\n        if pos.code:\n            path = pos.code + \"/\" + path\n\n    self.path = path\n    \n    if len(tab)>0:\n        self.first_ancestor = tab[-1]\n        super().save(*argi, **argv)\n    else:\n        super().save(*argi, **argv)\n        self.first_ancestor = self\n        super().save(*argi, **argv)\n\n    if self.parent:\n        if not self.parent.has_children:\n            self.parent.has_children = True\n            self.parent.save()\n    \n\ndef get_name(self):\n    return self.name\n\ndef _get_parent_elem(self, element_type):\n    tab = self.parents()\n    for pos in tab:\n        if pos.type==element_type:\n            return pos\n    return None\n    \ndef company(self):\n    return self._get_parent_elem('O-COM')\n\ndef division(self):\n    return self._get_parent_elem('O-DIV')\n\ndef departament(self):\n    return self._get_parent_elem('O-DEP')\n\ndef position(self):\n    return self._get_parent_elem('O-POS')\n\ndef location(self):\n    return self._get_parent_elem('O-LOC')\n\ndef owner_group(self):\n    return self._get_parent_elem('O-GRP')\n\ndef owner_grand_group(self):\n    grp =  self._get_parent_elem('O-GRP')\n    if grp:\n        return grp._get_parent_elem('O-GRP')\n    else:\n        return None\n\ndef item_group(self):\n    return self._get_parent_elem('I-GRP')\n\ndef item_grand_group(self):\n    grp =  self._get_parent_elem('I-GRP')\n    if grp:\n        return grp._get_parent_elem('I-GRP')\n    else:\n        return None\n\ndef related(self):\n    ret = \"\"\n    for obj in (self.grand_parent1, self.grand_parent2, self.grand_parent3, self.grand_parent4):\n        if obj:\n            if ret == \"\":\n                ret = obj.name\n            else:\n                ret = ret + \"; \" + obj.name\n    return ret\n\ndef parents(self):\n    p = []\n    parent = self.parent\n    while(parent):\n        p.append(parent)\n        if parent==parent.parent:\n            break\n        parent = parent.parent\n    return p\n\ndef q_for_children(self, child_type):\n    ret = []\n    ret.append(Q(parent=self))\n    object_list = list(Element.objects.filter(parent=self).exclude(type=child_type))\n    if len(object_list)>0:\n        for child in object_list:\n                x = child.get_children(child_type)\n                if x:\n                    ret.extend(list(x))\n    return ret\n\ndef get_children(self, child_type):\n    qq = self.q_for_children(child_type)\n    return Element.objects.filter(*qq)\n\ndef number_of_children(self):\n    return Element.objects.filter(parent=self).count()\n\n@staticmethod\ndef get_children_for_element(parent_code, child_type):\n    object_list = Element.objects.filter(code=parent_code)\n    if len(object_list)>0:\n        return object_list[0].get_children(child_type)\n    return []\n\n@staticmethod\ndef limit_choices(parent_code, child_type):\n    ids = []\n    objects = Element.get_children_for_element(parent_code, child_type)\n    for obj in objects:\n        ids.append(obj.id)\n    return Q(id__in=ids)\n\ndef href_path(self):\n    p = self.parents()\n    n=\"\"\n    for parent in p:\n        href = \"<a target='_refresh_data' href='../../%s/form/tree'>\" % parent.id\n        if parent.code and parent.code!=\"\":\n            n = href + parent.code + \"</a>/\" + n\n        else:\n            n = href + \"?</a>/\" + n\n    return \"<a target='_refresh_data' href='../../0/form/tree'>/</a>\" + n + self.code\n\ndef href_path_list(self):\n    p = self.parents()\n    n=[]\n    for parent in p:\n        href = \"<a target='_refresh_data' href='../../%s/form/tree'>\" % parent.id\n        if parent.code and parent.code!=\"\":\n            n.append(href + parent.code + \"</a>\")\n        else:\n            n.append(href + \"?</a>\")\n    n.append(\"<a target='_refresh_data' href='../../0/form/tree'>/</a>\")\n    return n\n\ndef __str__(self):\n    p = self.parents()\n    if self.code and self.code!=\"\":\n        n = self.code + \":\" + self.name\n    else:\n        n = self.name\n    for parent in p:\n        if parent.code and parent.code!=\"\":\n            n = parent.code + \"/\" + n\n        else:\n            n = \"?/\" + n\n    return n\n\n@staticmethod\ndef gen_url(value):\n    if value:\n        id = int(value)\n    else:\n        id = -1\n    return \"/schsys/treedialog/schelements/Element/%s/\" % id\n    \n\n@staticmethod\ndef add_type(type_code, type_name, title, table, app):\n    global element_type_choice\n    element_type_choice.append((type_code, type_name))\n    s = Element.get_structure()\n    if not type_code in s:\n        s[type_code] = {\n            'title': title,\n            'table': table,\n            'app': app\n        }\n\n\ndef get_derived_object(self, param=None):\n    t = None\n    if type(self)==Element:\n        s = Element.get_structure()\n        if s:\n            if param and 'view' in param and 'add_param' in param['view'].kwargs:\n                t = param['view'].kwargs['add_param']\n                if t=='-':\n                    return self\n                if s[t]['app']==\"schelements\" and s[t]['table'] == \"Element\":\n                    return self\n                if t in s:\n                    model = apps.get_model(s[t]['app'], s[t]['table'])\n                    return model.objects.get(pk=self.id)\n            else:\n                t = self.type\n                if t in s:\n                    if hasattr(self, s[t]['table'].lower()):\n                        return getattr(self, s[t]['table'].lower())\n                    else:\n                        if s[t]['app']==\"schelements\" and s[t]['table'] == \"Element\":\n                            return self\n                        model = apps.get_model(s[t][\"app\"], s[t][\"table\"])\n                        try:\n                            ret = model.objects.get(pk=self.id)\n                        except:\n                            print(\"Object of type %s[%d] does'nt exists!\" % (model.__name__, self.id))\n                            ret = self\n                        return ret\n                        \n    return self\n\n\ndef template_for_object(self, view, context, doc_type):\n    if self.id and doc_type in ('html', 'json'):\n        s = Element.get_structure()\n        if s:\n            t = self.type\n            if t in s:\n                names = [ s[t]['app'].lower() + '/' + s[t]['table'].lower()+\".html\", ]\n                return names\n    return None\n\n\n@staticmethod\ndef _get_new_buttons(elem_type=\"ROOT\"):\n    buttons = []\n    \n    s = Element.get_structure()\n    if s:\n        if elem_type in s:\n            if 'next' in s[elem_type]:\n                for item in s[elem_type]['next']:\n                    if item in s:\n                        button = {}\n                        button['type'] = item\n                        if 'title' in s[item]:\n                            button['title'] = s[item]['title']\n                        else:\n                            button['title'] = item\n                        if 'app' in s[item]:\n                            button['app'] = s[item]['app']\n                        else:\n                            button['app'] = \"\"\n                        if 'table' in s[item]:\n                            button['table'] = s[item]['table']\n                        else:\n                            button['table'] = \"\"\n\n                        buttons.append(button)\n    return buttons\n    \n@staticmethod\ndef get_root_new_buttons():\n    return Element._get_new_buttons(\"ROOT\")\n\n\ndef get_new_buttons(self):\n    if self.type in (\"O-GRP\", \"I-GRP\", \"C-GRP\") and Element.get_structure():\n        obj = self\n        while obj and obj.type in (\"O-GRP\", \"I-GRP\", \"C-GRP\"):\n            obj = obj.parent\n        if obj:\n            buttons = self._get_new_buttons(obj.type)\n        else:\n            buttons = self._get_new_buttons(\"ROOT\")\n    \n        buttons2 = self._get_new_buttons(self.type)\n        \n        for b in buttons2:\n            if not b in buttons:\n                buttons.append(b) \n\n        if self.description and \"(\" in self.description and \")\" in self.description:\n            items = self.description.split(\"(\")[1].split(\")\")[0]\n            s = Element.get_structure()\n            for item in items.replace(\",\", \";\").split(\";\"):\n                if s:\n                    if item and item in s:\n                        button = {}\n                        button[\"type\"] = item\n                        if \"title\" in s[item]:\n                            button[\"title\"] = s[item][\"title\"]\n                        else:\n                            button[\"title\"] = item\n                        if \"app\" in s[item]:\n                            button[\"app\"] = s[item][\"app\"]\n                        else:\n                            button[\"app\"] = \"\"\n                        if \"table\" in s[item]:\n                            button[\"table\"] = s[item][\"table\"]\n                        else:\n                            button[\"table\"] = \"\"\n                        if not button in buttons:\n                            buttons.append(button)\n            ret = []\n            for button in buttons:\n                if button[\"type\"] in self.description:\n                    ret.append(button)\n            return ret\n        else:\n            return buttons\n\n    else:\n        return self._get_new_buttons(self.type)\n\n@classmethod\ndef filter(cls, value, view=None, request=None):    \n    if hasattr(settings, \"CANCAN\") and settings.CANCAN and request and is_in_cancan_rules(cls, request.ability.access_rules.rules):\n        if value and value != '-':\n            return request.ability.queryset_for('view', cls).filter(type=value)\n        else:\n            return request.ability.queryset_for('view', cls)\n    else:\n        if value and value != '-':\n            return cls.objects.filter(type=value)\n        else:\n            return cls.objects.all()\n\n\ndef gen_standard_code(self):\n    code = \"\"\n    if self.parent and self.type in ( 'I-MAT', 'I-RAW', 'I-PRD', 'I-IPR', 'I-MER'):\n        if self.parent.type in ('I-GRP',):\n            code = self.parent.code\n        if self.parent.parent and self.parent.parent.type in ('I-GRP',):\n            code = self.parent.parent.code + \"-\" + code\n        if code:\n            code += \"-\"\n        obj = Element.objects.filter(type=self.type, code__startswith=code).order_by(\"-code\").first()\n        if obj:\n            try:\n                n = int(obj.code[len(code):])\n                n += 1\n                code += str(n)\n            except:\n                code = code + \"0\"\n        else:\n            code = code + \"1\"\n        return code\n    return None\n\n\ndef gen_code(self):\n    code=\"\"\n    try:\n        code = super().gen_code()\n    except:\n        code = self.gen_standard_code()\n    return code\n\n\ndef can_view(self, user, check_parents=True):\n    if self.can_view_permission:\n        ret = user.has_perm(self.can_view_permission.name)\n    else:\n        ret = user.has_perm(\"schelements.view_element\")\n    if check_parents:\n        if ret and self.parent:\n            ret = self.parent.can_view(user)\n        if ret and self.grand_parent1:\n            ret = self.grand_parent1.can_view(user, False)\n        if ret and self.grand_parent2:\n            ret = self.grand_parent2.can_view(user, False)\n        if ret and self.grand_parent3:\n            ret = self.grand_parent3.can_view(user, False)\n    return ret\n    \ndef can_change(self, user):\n    if self.can_change_permission:\n        ret =  user.has_perm(self.can_change_permission.name)\n    else:\n        ret = user.has_perm(\"schelements.change_element\")\n    if ret:\n        ret = self.can_view(user)\n    return ret\n \ndef can_delete(self, user):\n    if self.can_delete_permission:\n        ret = user.has_perm(self.can_delete_permission.name)\n    else:\n        ret = user.has_perm(\"schelements.delete_element\")\n    if ret:\n        ret = self.can_view(user)\n    return ret\n \ndef can_add(self, user, child_type):\n    if self.can_add_permission:\n        ret = user.has_perm(self.can_add_permission.name)\n    else:\n        ret = user.has_perm(\"schelements.add_element\")\n    if ret:\n        ret = self.can_view(user)\n    return ret\n\n@classmethod\ndef table_action(cls, list_view, request, data):\n    return standard_table_action(\n        cls, list_view, request, data, [\"copy\", \"paste\", \"delete\"]\n    )\n\nobjects = ElementManager()\n\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigTreeForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": "",
                                "help_text": "",
                                "choices": "",
                                "rel_to": "'self'",
                                "param": "",
                                "url_params": ""
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "type",
                                "description": "Element type",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": "element_type_choice",
                                "rel_to": null,
                                "param": "max_length=8",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "subtype",
                                "description": "Element subtype",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "code",
                                "description": "Code",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "path",
                                "description": "Path",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=1024",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": "",
                                "help_text": "",
                                "choices": "",
                                "rel_to": "",
                                "param": "max_length=64",
                                "url_params": ""
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "grand_parent1",
                                "description": "Grand parent 1",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "related_name='grandparent1'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "grand_parent2",
                                "description": "Grand parent 2",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "related_name='grandparent2', search_fields=[\"name__icontains\",]",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "grand_parent3",
                                "description": "Grand parent 3",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "related_name='grandparent3', search_fields=[\"name__icontains\",]",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "grand_parent4",
                                "description": "Grand parent 4",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "related_name='grandparent4', search_fields=[\"name__icontains\",]",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "first_ancestor",
                                "description": "First ancestor",
                                "type": "ForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "related_name='first_ancestors'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "can_have_children",
                                "description": "Can have children",
                                "type": "BooleanField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": "True",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "has_children",
                                "description": "Element has children",
                                "type": "BooleanField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": "False",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "can_view_permission",
                                "description": "Permission to view element",
                                "type": "UserField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "can_view_permission =  models.ForeignKey('auth.Permission', related_name=\"permission_set_perm_view\", on_delete=models.CASCADE, null=True, blank=True,)",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "can_add_permission",
                                "description": "Permission to add elements",
                                "type": "UserField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "can_add_permission =  models.ForeignKey('auth.Permission', related_name=\"permission_set_perm_add\", on_delete=models.CASCADE, null=True, blank=True,)",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "can_change_permission",
                                "description": "Permission to change elements",
                                "type": "UserField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "can_change_permission =  models.ForeignKey('auth.Permission', related_name=\"permission_set_perm_change\", on_delete=models.CASCADE, null=True, blank=True,)",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "can_delete_permission",
                                "description": "Permission to delete elements",
                                "type": "UserField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "can_delete_permission =  models.ForeignKey('auth.Permission', related_name=\"permission_set_perm_delete\", on_delete=models.CASCADE, null=True, blank=True,)",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "DocReg",
                        "verbose_name": "Document register",
                        "verbose_name_plural": "Document registers",
                        "metaclass_code": "permissions = [\n    (\"admin_docreg\", \"Can administer document registers\"),\n]\n",
                        "table_code": "def __str__(self):\n    return self.name\n\ndef save(self, *args, **kwargs):\n    self.update_time = timezone.now()\n    super().save(*args, **kwargs)\n\ndef get_parent(self):\n    if '/' in self.name:\n        x = self.name.rsplit('/',1)\n        objs = DocReg.objects.filter(name=x[0])\n        if len(objs)==1:\n            return objs[0]\n    return None\n\ndef get_last_subname(self):\n    if '/' in self.name:\n        return self.name.rsplit('/',1)[1]\n    else:\n        return self.name\n\ndef get_save_head_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return SAVE_HEAD\n\ndef get_save_item_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return SAVE_ITEM\n\ndef get_head_form_if_empty(self, request, template_name, ext, extra_context, target):\n    return HEAD_FORM\n\ndef get_item_form_if_empty(self, request, template_name, ext, extra_context, target):\n    return ITEM_FORM\n\ndef get_head_template_if_empty(self, request, template_name, ext, extra_context, target):\n    return HEAD_TEMPLATE\n\ndef get_item_template_if_empty(self, request, template_name, ext, extra_context, target):\n    return ITEM_TEMPLATE\n\ndef get_access_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return ACCESS_FUN\n\ndef copy_to_clipboard(self):\n    object_list = self.docregstatus_set.all()\n    return {\n        \"action\": \"paste_from_clipboard\",\n        \"table\": \"DocReg\",\n        \"objects\": [\n            {\n                \"app\": self.app,\n                \"name\": self.name,\n                \"group\": self.group,\n                \"description\": self.description,\n                \"head_form\": self.head_form,\n                \"head_template\": self.head_template,\n                \"item_form\": self.item_form,\n                \"item_template\": self.item_template,\n                \"save_head_fun\": self.save_head_fun,\n                \"save_item_fun\": self.save_item_fun,\n                \"access_fun\": self.access_fun,\n                \"statuses\": [ obj.copy_to_clipboard() for obj in object_list ],\n            },\n        ],\n    }\n\n@classmethod\ndef table_action(cls, list_view, request, data):\n    if (\n        \"action\" in data\n        and data[\"action\"] == \"paste_from_clipboard\"\n        and \"table\" in data\n        and data[\"table\"] == \"DocReg\"\n    ):\n        class _LV():\n            pass\n        \n        obj = None\n        object_list = data[\"objects\"]\n        for obj_param in object_list:\n            obj = DocReg()\n            obj.app = obj_param[\"app\"]\n            obj.name = \"COPY: \" + obj_param[\"name\"]\n            obj.group = obj_param[\"group\"]\n            obj.description = obj_param[\"description\"]\n            obj.head_form = obj_param[\"head_form\"]\n            obj.head_template = obj_param[\"head_template\"]\n            obj.item_form = obj_param[\"item_form\"]\n            obj.item_template = obj_param[\"item_template\"]\n            obj.save_head_fun = obj_param[\"save_head_fun\"]\n            obj.save_item_fun = obj_param[\"save_item_fun\"]\n            obj.access_fun = obj_param[\"access_fun\"]\n            obj.save()\n            \n            lv = _LV()\n            lv.kwargs={ \"parent_pk\": obj.id }\n            for status in obj_param[\"statuses\"]:\n                DocRegStatus.table_action(lv, request, status)\n                \n        if obj:\n            return new_row_ok(request, int(obj.id), str(obj))\n        return True\n        \n    return standard_table_action(cls, list_view, request, data, [\"copy\", \"paste\", \"delete\" ])\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "app",
                                "description": "Application",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=32",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "group",
                                "description": "Group",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "head_form",
                                "description": "Head form",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "head_template",
                                "description": "Head template",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "item_form",
                                "description": "Item form",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "item_template",
                                "description": "Item template",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "save_head_fun",
                                "description": "Save head function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "save_item_fun",
                                "description": "Save item function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "access_fun",
                                "description": "Access function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "update_time",
                                "description": "Time of the last update",
                                "type": "DateTimeField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "auto_now_add=True",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "DocType",
                        "verbose_name": "Type of document",
                        "verbose_name_plural": "Types of documents",
                        "metaclass_code": "permissions = [\n    (\"admin_doctype\", \"Can administer document types\"),\n]\n",
                        "table_code": "def __str__(self):\n    return self.name\n    \ndef get_save_head_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return SAVE_HEAD\n\ndef get_save_item_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return SAVE_ITEM\n\ndef get_head_form_if_empty(self, request, template_name, ext, extra_context, target):\n    return HEAD_FORM\n\ndef get_item_form_if_empty(self, request, template_name, ext, extra_context, target):\n    return ITEM_FORM\n\ndef get_head_template_if_empty(self, request, template_name, ext, extra_context, target):\n    return HEAD_TEMPLATE\n\ndef get_item_template_if_empty(self, request, template_name, ext, extra_context, target):\n    return ITEM_TEMPLATE\n\ndef get_access_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return ACCESS_FUN\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigHiddenForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "DocReg",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "correction",
                                "description": "Correction",
                                "type": "NullBooleanField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": "False",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "head_form",
                                "description": "Head form",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "head_template",
                                "description": "Head template",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "item_form",
                                "description": "Item form",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "item_template",
                                "description": "Item template",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "save_head_fun",
                                "description": "Save head function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "save_item_fun",
                                "description": "Save item function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "doctype_status",
                                "description": "Status of document type",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": "doctype_status",
                                "rel_to": null,
                                "param": "max_length=1",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "update_time",
                                "description": "Time of the last update",
                                "type": "DateTimeField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "auto_now_add=True",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "correction_name",
                                "description": "Correction name",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "JSONModel",
                        "name": "DocHead",
                        "verbose_name": "Document header",
                        "verbose_name_plural": "Document headers",
                        "metaclass_code": "permissions = [\n    (\"admin_dochead\", \"Can administer document headers\"),\n]\n",
                        "table_code": "def __str__(self):\n    if self.number:\n        return self.doc_type_parent.name + \":\" + self.number\n    else:\n        return self.doc_type_parent.name + \":\" \n\n@classmethod\ndef get_documents_for_reg(cls, value):\n    reg = DocReg.objects.filter(name = value.replace('_', '/'))\n    ret = []\n    if len(reg) == 1:\n        docs = DocType.objects.filter(parent=reg[0])\n        for doc in docs:\n            ret.append(doc)\n    return ret\n\n@classmethod\ndef filter(cls, value, view=None, request=None):\n    if value and value.startswith(\"_code_\"):\n        code = value.replace(\"_code_\", \"\")\n        return cls.objects.filter(parent_element__code=code)\n    elif value and value.startswith(\"_pk_\"):\n        i = value.replace(\"_pk_\", \"\")\n        x = cls.objects.filter(parent_element__pk=int(i))\n        return x\n    elif value and value.startswith(\"_children_\"):\n        i  = value.replace(\"_children_\", \"\")\n        x = cls.objects.filter(parents__pk=int(i))\n        return x        \n    elif value and value.startswith(\"_parents_\"):\n        i  = value.replace(\"_parents_\", \"\")\n        obj = cls.objects.get(pk=int(i))\n        return obj.parents.all()\n    elif value:\n        rej = value.replace(\"_\", \"/\")\n        return cls.objects.filter(doc_type_parent__parent__name=rej)\n    else:\n        return cls.objects.all()\n\ndef init_new(self, request, view, add_param=None):\n    if add_param:\n        docs = DocType.objects.filter(name = add_param)\n        if len(docs)==1: \n            self.doc_type_parent = docs[0]\n            self.date = timezone.now()\n            self.status = 'draft'\n            self.operator = request.user.username\n            \n    return None\n\n@staticmethod\ndef template_for_list(view, model, context, doc_type):\n    if doc_type in (\"html\", \"json\") and \"filter\" in context:\n        reg = DocReg.objects.filter(name=context[\"filter\"].replace(\"_\", \"/\")).first()\n        if reg:\n            names = []\n            if \"version\" in context and context[\"version\"]:\n                v = context[\"version\"]\n                if \"__\" in v:\n                    app, version = v.split(\"__\", 1)\n                else:\n                    app = reg.app\n                    version = v\n                if version:\n                    names.append(\n                        (\n                            app\n                            + \"/\"\n                            + reg.name.replace(\"/\", \"_\")\n                            + \"_dochead_list_\"\n                            + version\n                            + \".html\"\n                        ).lower()\n                    )\n                else:\n                    names.append(\n                        (\n                            app\n                            + \"/\"\n                            + reg.name.replace(\"/\", \"_\")\n                            + \"_dochead_list\"\n                            + \".html\"\n                        ).lower()\n                    )\n                    \n                if reg and reg.head_template:\n                    names.append(\"db/DocReg-%d-head_template.html\" % reg.id)\n            else:\n                if reg and reg.head_template:\n                    names.append(\"db/DocReg-%d-head_template.html\" % reg.id)\n                x = reg\n                while x:\n                    names.append(\n                        (\n                            x.app\n                            + \"/\"\n                            + x.name.replace(\"/\", \"_\")\n                            + \"_dochead_list.html\"\n                        ).lower()\n                    )\n                    x = x.get_parent()\n\n\n            names.append(view.template_name)\n            return names\n\n    return None\n\ndef template_for_object(self, view, context, doc_type):\n    if doc_type in (\"html\", \"json\"):\n        try:\n            if \"add_param\" in view.kwargs:\n                objects = DocType.objects.filter(name=view.kwargs[\"add_param\"])\n                doc_type = objects[0]\n                reg = doc_type.parent\n                obj = None\n            else:\n                obj = DocHead.objects.get(pk=self.id)\n                reg = obj.doc_type_parent.parent\n\n            names = []\n            if \"version\" in context and context[\"version\"]:\n                v = context[\"version\"]\n                if \"__\" in v:\n                    app, version = v.split(\"__\", 1)\n                else:\n                    app = reg.app\n                    version = v\n                names.append(\n                    (\n                        app\n                        + \"/\"\n                        + reg.name.replace(\"/\", \"_\")\n                        + \"_dochead_edit_\"\n                        + version\n                        + \".html\"\n                    ).lower()\n                )\n                if reg.head_template:\n                    names.append(\"db/DocReg-%d-head_template.html\" % reg.id)\n            else:\n                if reg.head_template:\n                    names.append(\"db/DocReg-%d-head_template.html\" % reg.id)\n                \n                names.append(\n                    \"%s/%s\" % (self._meta.app_label, self._meta.model.__name__)\n                )\n                if obj:\n                    names.append(\n                        (\n                            reg.app\n                            + \"/\"\n                            + obj.doc_type_parent.name\n                            + \"_dochead_edit.html\"\n                        ).lower()\n                    )\n                else:\n                    names.append(\n                        (\n                            reg.app + \"/\" + doc_type.name + \"_dochead_edit.html\"\n                        ).lower()\n                    )\n                names.append(\n                    (\n                        reg.app\n                        + \"/\"\n                        + reg.name.replace(\"/\", \"_\")\n                        + \"_dochead_edit.html\"\n                    ).lower()\n                )\n\n    \n                x = reg.get_parent()\n                while x:\n                    names.append(\n                        (\n                            x.app\n                            + \"/\"\n                            + x.name.replace(\"/\", \"_\")\n                            + \"_dochead_edit.html\"\n                        ).lower()\n                    )\n                    x = x.get_parent()\n                names.append(context[\"view\"].template_name)\n\n            return names\n        except:\n            return None\n    return None\n\ndef old_get_form_source(self):\n    if self.id:\n        obj = DocHead.objects.get(pk=self.id)            \n        if obj.doc_type_parent.head_form:\n           return obj.doc_type_parent.head_form \n           \n        x = obj.doc_type_parent.parent\n        while x:\n            if x.head_form:\n                return x.head_form\n            x = x.get_parent()\n    \n    return None\n\n\ndef get_form_source(self):\n    if self.doc_type_parent:\n        if self.doc_type_parent.head_form:\n            return self.doc_type_parent.head_form\n        x = self.doc_type_parent.parent\n        while x:\n            if x.head_form:\n                return x.head_form\n            x = x.get_parent()\n\n    return None\n\n\ndef post_form(self, view, form, request):\n    obj = self\n    save_fun_src_obj = None\n    if obj.doc_type_parent.save_head_fun:\n        save_fun_src_obj = obj.doc_type_parent\n    else:\n        x = obj.doc_type_parent.parent\n        while x:\n            if x.save_head_fun:\n                save_fun_src_obj = x\n                break\n            x = x.get_parent()\n    if save_fun_src_obj:\n        ret = run_code_from_db_field(\n            f\"dochead__save_{save_fun_src_obj.pk}.py\",\n            save_fun_src_obj,\n            \"save_head_fun\",\n            \"save\",\n            dochead=self,\n            view=view,\n            form=form,\n            request=request\n        )\n        return ret\n    return True\n\ndef save(self, *args, **kwargs):        \n    if not self.pk:\n        self.date_c = timezone.now()\n        \n        y = \"%04d\" % datetime.date.today().year\n        t = self.doc_type_parent.name\n        objects = DocHead.objects.filter(doc_type_parent=self.doc_type_parent, number__startswith=t+\"/\"+y).order_by('-number')\n        if len(objects)>0:\n            tmp = objects[0].number\n            \n            try:\n                max_num = int(tmp.split('/')[-1])+1\n            except:\n                max_num = 1\n        else:\n            max_num = 1\n        self.number = \"%s/%s/%06d\" % (t, y, max_num)\n    \n    if self.corrected_dochead:\n        if self.status in (\"draft\", \"\"):\n            if self.corrected_dochead.corrected:\n                self.corrected_dochead.corrected = False\n                self.corrected_dochead.save()\n        else:\n            if not self.corrected_dochead.corrected:\n                self.corrected_dochead.corrected = True\n                self.corrected_dochead.save()\n                \n    super().save(*args, **kwargs)\n\ndef get_visible_statuses(self, request=None):\n    if self.id:\n        obj = self            \n        reg = obj.doc_type_parent.parent\n        parent_reg = reg\n        if hasattr(reg, \"cached_statuses\"):\n            statuses_to_cache = reg.cached_statuses\n        else:\n            statuses_to_cache = []\n            while reg:\n                statuses = reg.docregstatus_set.all().order_by(\"order\")\n                if len(statuses) > 0:\n                    statuses_to_cache += list(statuses)                        \n                reg = reg.get_parent()\n            setattr(parent_reg, \"cached_statuses\", statuses_to_cache)\n        ret = []\n        for status in statuses_to_cache:\n            data = run_code_from_db_field(\n                f\"docregstatus__can_set_proc_{status.pk}.py\",\n                status,\n                \"can_set_proc\",\n                \"can_set\",\n                request=request,\n                doc_head=self\n            )\n            if data == None or data:\n                ret.append(status)\n        return ret\n    return []\n\ndef status_can_be_undo(self, request=None):\n    if self.id:\n        obj = DocHead.objects.get(pk=self.id)\n        reg = obj.doc_type_parent.parent\n        statuses = reg.docregstatus_set.filter(name=obj.status)\n        if len(statuses)==1:\n            status = statuses[0]\n            data = run_code_from_db_field(\n                f\"docregstatus__can_undo_proc_{status.pk}.py\",\n                status,\n                \"can_undo_proc\",\n                \"can_undo\",\n                request=request,\n                doc_head=self\n            )\n            if data:\n                return True\n            elif data != None:\n                return False\n                \n        if obj.status == \"\" or obj.status == \"edit\":\n            return False\n        else:\n            return True\n    \n    return False        \n\ndef get_reg_status(self):\n    reg = self.doc_type_parent.parent\n    if hasattr(reg, \"cached_statuses\"):\n        statuses = reg.cached_statuses\n        for status in statuses:\n            if status.name == self.status:\n                return status\n    else:\n        statuses = reg.docregstatus_set.filter(name=self.status)\n        if len(statuses) > 0:\n            return statuses[0]\n    return None\n\ndef get_undo_target(self):\n    reg = self.doc_type_parent.parent\n    statuses = reg.docregstatus_set.filter(name=self.status)\n    if len(statuses)>0:\n        status = statuses[0]\n        return status.get_undo_target()\n    return \"refresh_frame\"\n    \n    \ndef get_derived_object(self, param=None):\n    t = None\n    if type(self)==DocHead:\n        if param and 'view' in param and 'add_param' in param['view'].kwargs:\n            t = param['view'].kwargs['add_param']\n            if t=='-':\n                return self\n            object_list = DocType.objects.filter(name=t)\n            if len(object_list):\n                t = object_list[0].parent.name\n                \n            c = ContentType.objects.filter(model=t.lower()+\"dochead\").first()\n            if c:\n                return c.model_class()()\n            else:\n                return DocHead()\n            \n        else:            \n            t = self.doc_type_parent.parent.name\n            name = t.lower()+\"dochead\"\n            if hasattr(self, name):\n                return getattr(self, name)\n            else:\n                c = ContentType.objects.filter(model=name).first()\n                if c:\n                    obj2 = copy.copy(self)\n                    obj2.__class__ = c.model_class()\n                    return obj2\n    return self\n\n@classmethod\ndef table_action(cls, list_view, request, data):\n    return standard_table_action(cls, list_view, request, data, ['copy', 'paste', 'delete'])\n    \n@staticmethod\ndef filter_by_permissions(view, queryset_or_obj, request):\n    q = None\n    doc_regs = None\n\n    if hasattr(request, \"user\")  and request.user.is_superuser:\n        return queryset_or_obj\n\n    if hasattr(request, \"user\") and hasattr(request.user, \"profile\"):\n        profile = request.user.profile\n        if profile.doc_regs:\n            doc_regs = list([ item.strip() for item in profile.doc_regs.replace(',',';').split(\";\") if item.strip() ])\n    else:\n        profile = None\n    \n    def append_reg_filter(reg):\n        nonlocal q, profile\n        q2 = Q(doc_type_parent__parent__name = reg.name)\n        qq = run_code_from_db_field(\n            f\"dochead__q_for_list_{reg.pk}.py\",\n            reg,\n            \"access_fun\",\n            \"q_for_list\",\n            request=request,\n            user=request.user,\n            profile=profile\n        )\n        if qq:\n            q2 = qq\n        if q2:\n            if q:\n                q = q | q2\n            else:\n                q = q2\n            \n    if queryset_or_obj != None:\n        if 'filter' in view.kwargs and not view.kwargs['filter'].startswith('_'):\n            reg_name = view.kwargs['filter'].replace('_','/')\n            if doc_regs:\n                if not reg_name in doc_regs:\n                    return queryset_or_obj.filter(pk=0)\n            reg = DocReg.objects.get(name=reg_name)\n            append_reg_filter(reg)\n        else:\n            regs = DocReg.objects.all()\n            for reg in regs:\n                if not doc_regs or ( doc_regs and reg in doc_regs): \n                    append_reg_filter(reg)\n        if q:\n            return queryset_or_obj.filter(q)\n        else:\n            return queryset_or_obj\n    else:\n        return queryset_or_obj\n    \ndef _check_perm(self, user, perm):\n    # perm: add, change, delete, view\n    reg = self.doc_type_parent.parent\n    check = run_code_from_db_field(\n        f\"dochead__check_user_perm_{reg.pk}.py\",\n        reg,\n        \"access_fun\",\n        \"check_user_perm\",\n        dochead=self,\n        user=user, \n        perm=perm, \n        doc_type_name=self.doc_type_parent.name            \n    )\n    if check != None:\n        return check\n    return True\n\ndef can_change(self, user):\n    return self._check_perm(user, \"change\")\n    \ndef can_delete(self, user):\n    return self._check_perm(user, \"delete\")\n\ndef can_view(self, user):\n    return self._check_perm(user, \"view\")\n\n@staticmethod\ndef can_add(doc_type_name, user):\n    doc_type = DocType.objects.get(name=doc_type_name)\n    reg = doc_type.parent\n    check = run_code_from_db_field(\n        f\"dochead__check_user_perm_{reg.pk}.py\",\n        reg,\n        \"access_fun\",\n        \"check_user_perm\",\n        dochead=None,\n        user=user, \n        perm=\"add\",  \n        doc_type_name=doc_type_name            \n    )\n    if check != None:\n        return check\n    return True\n\ndef log(self, log_class, request, description, save=True):\n    obj = log_class()\n    obj.application = 'schelements'\n    obj.table = 'DocHead'\n    obj.group = 'default'\n    obj.parent_id = self.id\n    obj.description = description\n    obj.operator_id = request.user.id\n    obj.operator = request.user.username\n    if save:\n        obj.save()\n    return obj\n\n\ndef change_status(self, action_name, action='accept', data=None, request=None, operator=None, batch_mode=False):    \n    doc_type = self.doc_type_parent\n    doc_reg = doc_type.parent\n    reg_status_list = DocRegStatus.objects.filter(parent=doc_reg, name=action_name)\n    if len(reg_status_list)==1:\n        reg_status = reg_status_list[0]\n    else: \n        reg_status = None\n    form = None\n\n    if reg_status:\n        if action=='accept':\n            form_txt = reg_status.accept_form\n            fun = get_fun_from_db_field(\n                f\"regstatus__accept_proc_{reg_status.pk}.py\",\n                reg_status,\n                \"accept_proc\",\n                \"accept\",\n            )\n        else:\n            form_txt = reg_status.undo_form\n            fun = get_fun_from_db_field(\n                f\"regstatus__undo_proc_{reg_status.pk}.py\",\n                reg_status,\n                \"undo_proc\",\n                \"undo\",\n            )\n\n        params = {\n            'request': request,\n            'doc_head': self,\n            'doc_type': doc_type,\n            'doc_reg': doc_reg,\n        }\n        if form_txt:\n            form_class = form_from_str(form_txt, params)\n        else:\n            form_class = None\n\n        if (not form_class) or data != None:\n            if form_class:\n                form = form_class(data)\n            else:\n                form = None\n\n            if (not form) or form.is_valid():\n                doc_status = DocHeadStatus()\n                doc_status.parent = self\n                callback = None\n                new_status = None\n\n                try:\n                    if fun:\n                        with transaction.atomic(): \n                            ret = fun(request, self, reg_status, doc_type, doc_reg, doc_status, form)\n                            if type(ret) == dict and 'errors' in ret:\n                                errors = ret['errors']\n                                if 'callback' in ret:\n                                    callback = ret['callback']\n                                if 'status' in ret:\n                                    new_status = ret['status']\n                            else:\n                                errors = ret\n                    else:\n                        errors = None\n                            \n                except ValueError as err:\n                    errors = err.args\n\n                if not errors:\n                    if new_status:\n                        self.status = action_name\n                        self.save()\n                    elif action_name and action_name[:1] != '_' and action_name != self.status:\n                        self.status = action_name\n                        self.save()\n\n                    if action != 'accept':\n                        DocItem.objects.filter(parent=self, level__gt = reg_status.order if reg_status.order >=0 else 0).delete()\n\n                    doc_status.date = timezone.now()\n                    if operator:\n                        doc_status.operator = operator\n                    elif not batch_mode:\n                        doc_status.operator = request.user.username\n                    doc_status.save()\n                    if callback:\n                        if batch_mode:\n                            return callback\n                        else:\n                            return callback()\n                    else:\n                        if batch_mode:\n                            return { 'errors': None, 'id': self.id, 'description': str(self) }\n                        else:\n                            return actions.update_row_ok(request, int(self.id), str(self))\n                else:\n                    return { 'errors': errors, 'form': form, 'doc_head': self, 'doctype': doc_type, 'doc_reg': doc_reg, 'reg_status': reg_status, 'action_name': action_name, }\n        if not form:\n            if form_class:\n                form = form_class()\n            else:\n                form = None\n            return { 'error': False, 'form': form, 'doc_head': self, 'doctype': doc_type, 'doc_reg': doc_reg, 'reg_status': reg_status, \n                'action_name': action_name,\n            }\n    else:\n        return { 'error': \"Status %s doesn't exists\" % action_name }\n\ndef copy_to(self, doc_head_dest, doc_head_callback=None, doc_item_callback=None, without_items=False):\n    doc_head_dest.doc_type_parent = self.doc_type_parent\n    doc_head_dest.parent_element = self.parent_element\n    doc_head_dest.description = self.description\n    doc_head_dest.param1 = self.param1\n    doc_head_dest.param2 = self.param2\n    doc_head_dest.param3 = self.param3\n    doc_head_dest.date_c = timezone.now()\n    doc_head_dest.date = datetime.date.today()\n    doc_head_dest.status = \"draft\"\n    if doc_head_callback:\n        doc_head_callback(self, doc_head_dest)\n    else: \n        doc_head_dest.save()\n    if not without_items:\n        for _item in docitem_set.all():\n            item = _item.get_derived_object()\n            item2 = type(item)()\n            item.copy_to(item2)\n            if doc_item_callback:\n                doc_item_callback(item, item2)\n            else:\n                item2.save()\n\ndef gen_correction(self, request):\n    if not self.doc_type_parent.correction_name:\n        return\n    \n    new_obj = type(self)()\n    \n    def dochead_callback(dochead_src, dochead_dest):\n        dochead_dest.doc_type_parent = DocType.objects.get(name=self.doc_type_parent.correction_name)\n        dochead_dest.corrected_dochead = self\n        dochead_dest.operator = request.user.username\n        dochead_dest.save()\n        dochead_dest.parents.add(self)\n\n    def docitem_callback(docitem_src, docitem_dest):\n        docitem_dest.parent = new_obj\n        docitem_dest.parent_item = docitem_src\n        docitem_dest.save()\n\n    self.copy_to(new_obj, dochead_callback, docitem_callback)\n    \n    return new_obj\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parents",
                                "description": "Parents",
                                "type": "ManyToManyField",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "symmetrical=False",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "doc_type_parent",
                                "description": "Document type parent",
                                "type": "PtigHiddenForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "DocType",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent_element",
                                "description": "Parent element",
                                "type": "PtigHiddenForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "select2=True",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "number",
                                "description": "Document number",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "date_c",
                                "description": "Creation date",
                                "type": "DateTimeField",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": "timezone.now",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "date",
                                "description": "Date",
                                "type": "DateField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": "datetime.date.today",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=128",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "comments",
                                "description": "Comments",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "status",
                                "description": "Status",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": "'draft'",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "operator",
                                "description": "Operator",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=255",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "param1",
                                "description": "Parameter 1",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "param2",
                                "description": "Parameter 2",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "param3",
                                "description": "Parameter 3",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "corrected",
                                "description": "Corrected",
                                "type": "BooleanField",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": "False",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "corrected_dochead",
                                "description": "Corrected dochead",
                                "type": "ForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "related_name=\"correction\"",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "JSONModel",
                        "name": "DocItem",
                        "verbose_name": "Document item",
                        "verbose_name_plural": "Document items",
                        "metaclass_code": "permissions = [\n    (\"admin_docitem\", \"Can administer document items\"),\n]\n",
                        "table_code": "@staticmethod\ndef template_for_list(view, model, context, doc_type):\n    if doc_type in (\"html\", \"json\"):\n        if \"parent_pk\" in context[\"view\"].kwargs:\n            parent_pk = int(context[\"view\"].kwargs[\"parent_pk\"])\n            dochead = DocHead.objects.get(pk=parent_pk)\n            reg = dochead.doc_type_parent.parent\n            names = []\n            if \"version\" in context and context[\"version\"]:\n                v = context[\"version\"]\n                if \"__\" in v:\n                    app, version = v.split(\"__\", 1)\n                else:\n                    app = reg.app\n                    version = v\n                names.append(\n                    (\n                        app\n                        + \"/\"\n                        + dochead.doc_type_parent.name\n                        + \"_docitem_list_\"\n                        + version\n                        + \".html\"\n                    ).lower()\n                )\n                names.append(\n                    (\n                        app\n                        + \"/\"\n                        + dochead.doc_type_parent.parent.name\n                        + \"_docitem_list_\"\n                        + version\n                        + \".html\"\n                    ).lower()\n                )\n                if reg.item_template:\n                    names.append(\"db/DocReg-%d-item_template.html\" % reg.id)\n            else:\n                if reg.item_template:\n                    names.append(\"db/DocReg-%d-item_template.html\" % reg.id)\n\n                names.append(\n                    (\n                        reg.app\n                        + \"/\"\n                        + dochead.doc_type_parent.name\n                        + \"_docitem_list.html\"\n                    ).lower()\n                )\n                names.append(\n                    (\n                        reg.app\n                        + \"/\"\n                        + reg.name.replace(\"/\", \"_\")\n                        + \"_docitem_list.html\"\n                    ).lower()\n                )\n\n                x = reg.get_parent()\n                while x:\n                    names.append(\n                        x.app\n                        + \"/\"\n                        + x.name.replace(\"/\", \"_\")\n                        + \"_docitem_list.html\"\n                    )\n                    x = x.get_parent()\n                names.append(view.template_name)\n            return names\n\n    return None\n\ndef template_for_object(self, view, context, doc_type):\n    if doc_type in (\"html\", \"json\"):\n        try:\n            obj = DocItem.objects.get(pk=self.id)\n            dochead = obj.parent\n        except:\n            dochead = context[\"view\"].object.parent\n\n        reg = dochead.doc_type_parent.parent\n        doc = dochead.doc_type_parent\n        names = []\n\n        if \"version\" in context and context[\"version\"]:\n            v = context[\"version\"]\n            if \"__\" in v:\n                app, version = v.split(\"__\", 1)\n            else:\n                app = reg.app\n                version = v\n\n            names.append(\n                (\n                    app\n                    + \"/\"\n                    + doc.name.replace(\"/\", \"_\")\n                    + \"_docitem_edit_\"\n                    + version\n                    + \".html\"\n                ).lower()\n            )\n            names.append(\n                (\n                    app\n                    + \"/\"\n                    + reg.name.replace(\"/\", \"_\")\n                    + \"_docitem_edit_\"\n                    + version\n                    + \".html\"\n                ).lower()\n            )\n            if reg.item_template:\n                names.append(\"db/DocReg-%d-item_template.html\" % reg.id)\n        else:\n            if reg.item_template:\n                names.append(\"db/DocReg-%d-item_template.html\" % reg.id)\n\n            names.append(\n                (\n                    reg.app\n                    + \"/\"\n                    + doc.name.replace(\"/\", \"_\")\n                    + \"_docitem_edit.html\"\n                ).lower()\n            )\n            names.append(\n                (\n                    reg.app\n                    + \"/\"\n                    + reg.name.replace(\"/\", \"_\")\n                    + \"_docitem_edit.html\"\n                ).lower()\n            )\n\n\n            x = reg.get_parent()\n            while x:\n                names.append(\n                    x.app + \"/\" + x.name.replace(\"/\", \"_\") + \"_docitem_edit.html\"\n                )\n                x = x.get_parent()\n\n            names.append(\n                context[\"view\"].template_name.replace(reg.app + \"/\", \"schelements/\")\n            )\n        return names\n    return None\n    \ndef get_form_source(self):\n    obj = self\n    if obj.parent.doc_type_parent.item_form:\n       return obj.parent.doc_type_parent.item_form \n       \n    x = obj.parent.doc_type_parent.parent\n    while x:\n        if x.item_form:\n            return x.item_form\n        x = x.get_parent()\n    \n    return None\n\ndef init_new(self, request, view, param=None):\n    if 'parent_pk' in view.kwargs:\n        parent_pk = view.kwargs['parent_pk']\n        parent = DocHead.objects.get(pk=parent_pk)\n        items = DocItem.objects.filter(parent=parent).order_by('-order')\n        if len(items)>0:\n            max_nr = int(items[0].order)+1\n        else:\n            max_nr = 1\n        \n        if request.POST:\n            return { 'parent': str(parent.id), 'order': max_nr, 'date_c': timezone.now(), 'level': 0 }\n        \n    return None\n\ndef post_form(self, view, form, request):\n    obj = self.parent\n    save_fun_src_obj = None \n    if obj.doc_type_parent.save_item_fun:\n        save_fun_src_obj = obj.doc_type_parent\n    else:\n        x = obj.doc_type_parent.parent\n        while x:\n            if x.save_item_fun:\n                save_fun_src_obj = x\n                break\n            x = x.get_parent()\n    if save_fun_src_obj:            \n        ret = check = run_code_from_db_field(\n            f\"docitem__save_{save_fun_src_obj.pk}.py\",\n            save_fun_src_obj,\n            \"save_item_fun\",\n            \"save\",\n            docitem=self,\n            view=view,\n            form=form,\n            request=request\n        )\n        return ret\n    return True\n\ndef save(self, *args, **kwargs):        \n    if self.parent.correction and self.parent_item:\n        if self.active:\n            if not self.parent_item.corrected:\n                self.parent_item.corrected = True\n                self.parent_item.save()\n        else:\n            if self.parent_item.corrected:\n                self.parent_item.corrected = False\n                self.parent_item.save()\n    super().save(*args, **kwargs)\n    \n   \ndef get_qty(self):\n    if self.parent.correction and self.parent_item:\n        return self.qty - self.parent_item.qty\n    else:\n        return self.qty\n   \n   \ndef get_derived_object(self, param=None):\n    t = None\n    if type(self)==DocItem:\n        if param and 'view' in param and 'add_param' in param['view'].kwargs:\n            t = param['view'].kwargs['add_param']\n            if t=='-':\n                return self\n            return ContentType.objects.get(model=t.lower()+\"docitem\").model_class()()\n        else:\n            t = self.parent.doc_type_parent.parent.name\n            name = t.lower()+\"docitem\"\n            if hasattr(self, name):\n                return getattr(self, name)\n            else:\n                c = ContentType.objects.filter(model=name).first()\n                if c:\n                    obj2 = copy.copy(self)\n                    obj2.__class__ = c.model_class()\n                    return obj2\n    return self\n\ndef get_period(self):\n    return \"%04d-%02d\" % (self.parent.date.year, self.parent.date.month)\n\n\n\ndef new_account_operations(\n    self,\n    account_states_and_qty,\n    description,\n    sign,\n    payment=None,\n    save=True,\n    transfer=False,\n):\n    account_operations = []    \n    for account_state, qty in account_states_and_qty:\n        account_operation = AccountOperation()\n        account_operation.parent = self\n        account_operation.description = description\n        account_operation.payment = payment\n        account_operation.account_state = account_state\n        account_operation.sign = sign\n        account_operation.qty = qty\n        account_operation.enabled = transfer\n        \n        account_operations.append(account_operation)\n        \n        if save:\n            account_operation.save()\n        \n    return account_operations\n    \n\ndef new_account_operation(\n    self,\n    target,\n    account_name,\n    description,\n    sign,\n    qty,\n    element,\n    classifier1value=None,\n    classifier2value=None,\n    classifier3value=None,\n    subcode=\"\",\n    payment=None,\n    save=True,\n):    \n    account_state = AccountState.get_or_create_account_state(\n        account_name, \n        subcode, \n        target, \n        classifier1value=classifier1value, \n        classifier2value=classifier2value, \n        classifier3value=classifier3value,  \n        period=\"\", \n        element=element, \n        aggregate=False\n    )    \n    return self.new_account_operations(((account_state, qty),), description, sign, payment, save)\n\ndef move_account_operation(self, docitem_src, account_name, description=None, payment=None, percent=100, update_docitem=False, update_docitem_src=False, update_account_states=False):\n    sum = 0\n    account_operations = []\n    for account_operation in docitem_src.accountoperation_set.filter(account_state__parent__name=account_name, enabled=True):\n        qty = account_operation.qty * percent / 100\n        sum += qty\n        account_operation.qty -= qty\n        if update_account_states:\n            account_operation2 = self.accountoperation_set.filter(account_state=account_operation.account_state, enabled=True).first()\n            if account_operation2:\n                account_operation2.qty += qty\n                account_operation2.save()\n                account_operations.append(account_operation2)\n        else:\n            account_operations.extend(\n                self.new_account_operations(((account_operation.account_state, qty),), description if description else account_operation.description, account_operation.sign, payment, transfer=True)\n            )\n        account_operation.save()\n    \n    if update_docitem_src:\n        docitem_src.qty -= sum\n        docitem_src.save()\n    if update_docitem:\n        self.qty += sum\n        self.save()\n        \n    return account_operations\n\ndef copy_to(self, doc_item_dest):\n    doc_item_dest.owner = self.owner\n    doc_item_dest.order = self.order\n    doc_item_dest.item = self.item\n    doc_item_dest.qty = self.qty\n    doc_item_dest.description = self.description\n    doc_item_dest.level = self.level\n    doc_item_dest.param1 = self.param1\n    doc_item_dest.param2 = self.param2\n    doc_item_dest.param3 = self.param3\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigHiddenForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "DocHead",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent_item",
                                "description": "Parent item",
                                "type": "PtigHiddenForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "owner",
                                "description": "Owner",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name=\"owners\"",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "order",
                                "description": "Order",
                                "type": "IntegerField",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": "1",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "item",
                                "description": "Item",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "qty",
                                "description": "Quantity",
                                "type": "DecimalField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_digits=16, decimal_places=2",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": "",
                                "help_text": "",
                                "choices": "",
                                "rel_to": "",
                                "param": "max_length=255",
                                "url_params": ""
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "level",
                                "description": "Level",
                                "type": "IntegerField",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": "0",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "active",
                                "description": "Active item",
                                "type": "BooleanField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": "True",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "param1",
                                "description": "Parameter 1",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "param2",
                                "description": "Parameter 2",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "param3",
                                "description": "Parameter 3",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "corrected",
                                "description": "Corrected",
                                "type": "BooleanField",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": "False",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "DocRegStatus",
                        "verbose_name": "Document status",
                        "verbose_name_plural": "Document status",
                        "metaclass_code": "permissions = [\n    (\"admin_docregstatus\", \"Can administer document register statuses\"),\n]\n",
                        "table_code": "def __str__(self):\n    return self.name\n        \ndef get_accept_target(self):\n    if self.accept_form:\n        return \"popup_edit\"\n    else:\n        return \"refresh_frame\"\n\ndef get_undo_target(self):\n    if self.undo_form:\n        return \"popup_edit\"\n    else:\n        return \"refresh_frame\"\n\ndef get_accept_proc_if_empty(self, request, template_name, ext, extra_context, target):\n    return ACCEPT_PROC\n    \ndef get_undo_proc_if_empty(self, request, template_name, ext, extra_context, target):\n    return UNDO_PROC\n    \ndef get_can_set_proc_if_empty(self, request, template_name, ext, extra_context, target):\n    return CAN_SET\n\ndef get_can_undo_proc_if_empty(self, request, template_name, ext, extra_context, target):\n    return CAN_UNDO\n\ndef get_accept_form_if_empty(self, request, template_name, ext, extra_context, target):\n    return ACCEPT_FORM\n\ndef get_undo_form_if_empty(self, request, template_name, ext, extra_context, target):\n    return UNDO_FORM\n\ndef copy_to_clipboard(self):\n    return {\n        \"action\": \"paste_from_clipboard\",\n        \"table\": \"DocRegStatus\",\n        \"objects\": [\n            {\n                \"order\": self.order,\n                \"name\": self.name,\n                \"description\": self.description,\n                \"icon\": self.icon,\n                \"accept_proc\": self.accept_proc,\n                \"undo_proc\": self.undo_proc,\n                \"can_set_proc\": self.can_set_proc,\n                \"can_undo_proc\": self.can_undo_proc,\n                \"accept_form\": self.accept_form,\n                \"undo_form\": self.undo_form,\n                \"for_accept_template\": self.for_accept_template,\n                \"for_undo_template\": self.for_undo_template,\n            },\n        ],\n    }\n\n@classmethod\ndef table_action(cls, list_view, request, data):\n    print(\"TABLE_ACTION\", data)\n    if (\n        \"action\" in data\n        and data[\"action\"] == \"paste_from_clipboard\"\n        and \"table\" in data\n        and data[\"table\"] == \"DocRegStatus\"\n    ):\n        print(\"X1: \", data)\n        try:\n            parent_pk = int(list_view.kwargs[\"parent_pk\"])\n        except:\n            parent_pk = -1\n        if parent_pk >= 0:\n            obj = None\n            object_list = data[\"objects\"]\n            for obj_param in object_list:\n                obj = DocRegStatus()\n                obj.parent_id = parent_pk\n                obj.order = obj_param[\"order\"]\n                obj.name = \"COPY: \" + obj_param[\"name\"]\n                obj.description = obj_param[\"description\"]\n                obj.icon = obj_param[\"icon\"]\n                obj.accept_proc = obj_param[\"accept_proc\"]\n                obj.undo_proc = obj_param[\"undo_proc\"]\n                obj.can_set_proc = obj_param[\"can_set_proc\"]\n                obj.can_undo_proc = obj_param[\"can_undo_proc\"]\n                obj.accept_form = obj_param[\"accept_form\"]\n                obj.undo_form = obj_param[\"undo_form\"]\n                obj.for_accept_template = obj_param[\"for_accept_template\"]\n                obj.for_undo_template = obj_param[\"for_undo_template\"]\n                \n                obj.save()\n            if obj:\n                return new_row_ok(request, int(obj.id), str(obj))\n            #print(\"PASTE: \", data)\n        return True\n    return standard_table_action(cls, list_view, request, data, [\"copy\", \"paste\", \"delete\" ])\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigHiddenForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "DocReg",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "order",
                                "description": "Order",
                                "type": "IntegerField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "icon",
                                "description": "Icon",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "accept_proc",
                                "description": "Accept status procedure",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "undo_proc",
                                "description": "Undo status procedure",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "can_set_proc",
                                "description": "Check if status can be set",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "can_undo_proc",
                                "description": "Check if status can be removed",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "accept_form",
                                "description": "Form for accept",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "undo_form",
                                "description": "Form for undo",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "for_accept_template",
                                "description": "Template for accept",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "for_undo_template",
                                "description": "Template for undo",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "JSONModel",
                        "name": "DocHeadStatus",
                        "verbose_name": "Document head status",
                        "verbose_name_plural": "Documents head status",
                        "metaclass_code": "permissions = [\n    (\"admin_docheadstatus\", \"Can administer document header statuses\"),\n]\n",
                        "table_code": "def __str__(self):\n    return self.name",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigHiddenForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "DocHead",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "date",
                                "description": "Date",
                                "type": "DateTimeField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "operator",
                                "description": "Operator",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=255",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "Account",
                        "verbose_name": "Account",
                        "verbose_name_plural": "Account",
                        "metaclass_code": "permissions = [\n    (\"admin_account\", \"Can administer accounts\"),\n]\nordering = ['name', ]",
                        "table_code": "def save(self, *args, **kwargs):\n    if self.parent:\n        self.parent.type1='S'\n        self.parent.save()\n        self.type2 = self.parent.type2\n    self.type1 = 'A'\n    super().save(*args, **kwargs)\n\ndef __str__(self):\n    return self.name + \": \" + self.description\n\n@staticmethod    \ndef get(account_name):\n    return Account.objects.get(name=account_name)",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigTreeForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "type1",
                                "description": "Type 1",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": "account_type_choice_1",
                                "rel_to": null,
                                "param": "max_length=1",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "type2",
                                "description": "Type 2",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": "account_type_choice_2",
                                "rel_to": null,
                                "param": "max_length=1",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=32",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "correctness_rule",
                                "description": "Correctness rule",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "root_classifier1",
                                "description": "Root classifier 1",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name='baseaccount_rc1_set'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "root_classifier2",
                                "description": "Root classifier 2",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name='baseaccount_rc2_set'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "root_classifier3",
                                "description": "Root classifier 3",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name='baseaccount_rc3_set'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "enabled",
                                "description": "Enabled",
                                "type": "NullBooleanField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": "True",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "AccountState",
                        "verbose_name": "State of account",
                        "verbose_name_plural": "States of account",
                        "metaclass_code": "permissions = [\n    (\"admin_accountstatus\", \"Can administer account statuses\"),\n]\nordering = ['parent__name',  'subcode', 'period', 'target__name', 'element__name', ]",
                        "table_code": "def __str__(self):\n    s = self.parent.name\n    \n    if self.subcode:\n        s+=\"-\"+self.subcode\n\n    if self.target or self.classifier1value or self.classifier2value or self.classifier3value:\n        s+=\"/\"\n    else:\n        s+=\" [\"+self.element.name+\"]\"\n        return s\n            \n    if self.target and self.parent:\n        s += self.target.name\n    \n    if self.classifier1value or self.classifier2value or self.classifier3value:\n        if self.classifier1value:\n            s+= \":\"+self.classifier1value.name\n        else:\n            s+=\":\"\n        if self.classifier2value:\n            s+= \":\"+self.classifier2value.name\n        else:\n            s+=\":\"\n        if self.classifier3value:\n            s+= \":\"+self.classifier3value.name\n        else:\n            s+=\":\"\n    s+=\" [\"+self.element.name+\"]\"\n    return s\n\n@staticmethod    \ndef get_account_states(account, subcode=\"\", target=None, classifier1value=None, classifier2value=None, classifier3value=None,  period=\"\", element=None, aggregate=False, q=None):\n    if type(account) == str:\n        account = Account.objects.get(name=account)\n    \n    objs = AccountState.objects.filter(\n        parent=account,\n        subcode=subcode, \n        element=element, \n        classifier1value=classifier1value, \n        classifier2value=classifier2value, \n        classifier3value=classifier3value,\n        period=period,\n        aggregate=aggregate,\n    )\n        \n    if target:\n        objs = objs.filter(target=target)\n    else:\n        objs = objs.filter(target__isnull=True)\n\n    if element:\n        objs = objs.filter(element=element)\n    \n    if q:\n        objs = objs.filter(q)\n\n    return objs\n\n@staticmethod    \ndef completing(quantity, account, subcode=\"\", target=None, classifier1value=None, classifier2value=None, classifier3value=None, element=None, q=None, only_all=True, raise_error=False):\n    sum = 0\n    ret_tab = []\n    object_list = AccountState.get_account_states(account, subcode, target, classifier1value, classifier2value, classifier3value, \"\", element, False, q).order_by(\"date_c\").exclude(zero_balance=True)\n    for obj in object_list:\n        if sum + obj.credit - obj.debit < quantity:\n            ret_tab.append((obj, obj.credit-obj.debit))\n            sum += obj.credit - obj.debit\n        else:\n            ret_tab.append((obj, quantity-sum))\n            return ret_tab\n    if only_all:\n        if raise_error:\n            raise ValueError(\"Not enough quantity in stock!\")\n        else:\n            return None\n    else:\n        return ret_tab\n\n\n@staticmethod    \ndef get_or_create_account_state(account, subcode=\"\", target=None, classifier1value=None, classifier2value=None, classifier3value=None,  period=\"\", element=None, aggregate=False):\n    if type(account) == str:\n        account = Account.objects.get(name=account)\n\n    objs = AccountState.get_account_states(account, subcode, target, classifier1value, classifier2value, classifier3value, period, element, aggregate)\n     \n    if objs.count() > 0:\n        return objs[0]\n    else:\n        obj = AccountState()\n        obj.parent = account\n        obj.target = target\n        obj.classifier1value = classifier1value\n        obj.classifier2value = classifier2value\n        obj.classifier3value = classifier3value\n        obj.period = period\n        obj.subcode = subcode\n        obj.element = element\n        obj.debit = 0\n        obj.credit = 0\n        obj.zero_balance = True\n        obj.aggregate = aggregate\n        obj.date_c = timezone.now()\n        obj.save()\n        return obj\n\n@staticmethod    \ndef get_balance(account, subcode=\"\", target=None, classifier1value=None, classifier2value=None, classifier3value=None, period=None, element=None, aggregate=False, q=None):\n    ret = AccountState.get_account_states(account, subcode, target, classifier1value, classifier2value, classifier3value, period, element, aggregate, q)\n    result = ret.aggregate(Sum('credit'), Sum('debit'))\n    result['balance__sum'] = result['debit__sum'] - result['credit__sum']\n    return result\n\n\ndef update_state(self, debit, credit, period):\n    self.debit += debit\n    self.credit += credit\n    \n    if self.target:\n        targets = [self.target, None]\n    else:\n        targets = [None,]\n    \n    classifier1values = [ self.classifier1value, ]\n    if self.classifier1value:\n        classifier1values.append(None)\n    classifier2values = [ self.classifier2value, ]\n    if self.classifier2value:\n        classifier2values.append(None)\n    classifier3values = [ self.classifier3value, ]    \n    if self.classifier3value:\n        classifier3values.append(None)\n    periods = (None, period)\n\n    tab = []\n    parent = self.parent\n    while parent:\n        if len(tab)==0:\n            if self.subcode:\n                tab.append((parent, self.subcode))\n                tab.append((parent, None))\n            else:\n                tab.append((parent, None))\n        else:\n            tab.append((parent,None))\n        parent = parent.parent\n\n    first = True\n    for account, subcode in tab:\n        for target in targets:\n            for classifier1value in classifier1values:\n                for classifier2value in classifier2values:\n                    for classifier3value in classifier3values:\n                        for period in periods:\n                            state = self.get_or_create_account_state(account, subcode, target, classifier1value, classifier2value, classifier3value, period, self.element, True)\n                            state.debit += debit\n                            state.credit += credit\n                            state.save()\n                            first = False\n    self.save()\n\n\ndef twin_state(self, account, target=0):\n    object_list = AccountState.objects.filter(\n        classifier1value=self.classifier1value, \n        classifier2value=self.classifier2value, \n        classifier3value=self.classifier3value, \n        subcode=self.subcode,\n        aggregate=self.aggregate\n    )\n    if account:\n        if type(account) == str:\n            account = Account.objects.get(name=account)    \n        object_list = object_list.filter(parent=account)\n    if target != 0:\n        object_list = object_list.filter(target=target)\n    return object_list.first()\n\n\ndef save(self, *args, **kwargs):\n    if self.parent.correctness_rule:\n        x = self.parent.correctness_rule.split(\":\")\n        if len(x)>1:\n            expression = x[0]\n            error_txt = x[1]\n        else:\n            expression = x[0]\n            error_txt = \"The validation rule is not ensured: \" + self.parent.correctness_rule\n            \n        s = expression.replace(\"DEBIT\", str(self.debit)).replace(\"CREDIT\", str(self.credit))\n        if self.period:\n            s = s.replace(\"PERIOD\", self.period)\n        ret = eval(s)\n        if not ret:\n            raise ValueError(error_txt)\n            \n    elif self.parent.type2 == \"V\":\n        if self.credit - self.debit < 0:\n            raise ValueError(\"The balance of the account with the number '%s' cannot be less than zero\" % self.parent.name)\n    elif self.parent.type2 == \"I\":\n        if self.credit - self.debit > 0:\n            raise ValueError(\"The balance of the account with the number '%s' cannot be greater than zero\" % self.parent.name)\n    elif self.parent.type2 == \"D\":\n        if self.credit - self.debit < 0:\n            raise ValueError(\"The balance of the account with the number '%s' cannot be less than zero\" % self.parent.name)\n    if self.debit == self.credit:\n        self.zero_balance = True\n    else:\n        self.zero_balance = False\n\n    # self.aggregate = True\n    # if self.parent.type1 == \"A\" and self.classifier1value != '*' and self.classifier2value != '*' and self.classifier2value != '*' and self.subcode != '*' and  not self.period:\n    #    self.aggregate = False\n\n    super().save(*args, **kwargs)\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "ForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Account",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "target",
                                "description": "Target",
                                "type": "ForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name='state_targets'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "classifier1value",
                                "description": "Classifier 1 value",
                                "type": "ForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name='account_c1_set'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "classifier2value",
                                "description": "Classifier 2 value",
                                "type": "ForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name='account_c2_set'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "classifier3value",
                                "description": "Classifier 3 value",
                                "type": "ForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": "related_name='account_c3_set'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "period",
                                "description": "Period",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=10",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "subcode",
                                "description": "Subcode",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "element",
                                "description": "Element",
                                "type": "ForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "Element",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "debit",
                                "description": "Debit",
                                "type": "DecimalField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_digits=16, decimal_places=2",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "credit",
                                "description": "Credit",
                                "type": "DecimalField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_digits=16, decimal_places=2",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "zero_balance",
                                "description": "Balance is zero",
                                "type": "BooleanField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": "True",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "aggregate",
                                "description": "Aggregate",
                                "type": "NullBooleanField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": "False",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "date_c",
                                "description": "Creation date",
                                "type": "DateTimeField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": "timezone.now",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "AccountOperation",
                        "verbose_name": "Account operation",
                        "verbose_name_plural": "Account operations",
                        "metaclass_code": "permissions = [\n    (\"admin_accountoperation\", \"Can administer account operations\"),\n]\n",
                        "table_code": "def __str__(self):\n    if self.description:\n        return self.description\n    else:\n        return \"Operation id: %d\" % self.id\n\ndef update_accounts_state(self, debit, credit):\n    self.account_state.update_state(debit, credit, self.parent.get_period())\n\ndef confirm(self):\n    ret = False\n    self.refresh_from_db()\n    if not self.enabled:\n        self.enabled = True\n        if self.sign > 0:\n            self.update_accounts_state(0, self.qty)\n        else:\n            self.update_accounts_state(self.qty, 0)\n        self.save()\n        ret = True\n    return ret\n\ndef atomic_confirm(self):\n    ret = False\n    with transaction.atomic():                \n        ret = self.confirm()\n    return ret\n\ndef cancel_confirmation(self):\n    ret = False\n    self.refresh_from_db()\n    if self.enabled:\n        self.enabled = False\n        if self.sign > 0:\n            self.update_accounts_state(0, -1 * self.qty)\n        else:\n            self.update_accounts_state(-1 * self.qty, 0)\n        self.save()\n        ret = True\n    return ret\n\ndef atomic_cancel_confirmation(self):\n    ret = False\n    with transaction.atomic():                \n        ret = self.cancel_confirmation()\n    return ret\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigHiddenForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "DocItem",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "date",
                                "description": "Date",
                                "type": "DateField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": "datetime.date.today",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "date_c",
                                "description": "Creation date",
                                "type": "DateTimeField",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": "timezone.now",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=255",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "payment",
                                "description": "Name of payment",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "account_state",
                                "description": "Account state",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "AccountState",
                                "param": "related_name='accountoper_set', search_fields=['parent__name__icontains',]",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "sign",
                                "description": "Sign - debit or credit",
                                "type": "IntegerField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "qty",
                                "description": "Quantity",
                                "type": "DecimalField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_digits=16, decimal_places=2",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "enabled",
                                "description": "Enabled",
                                "type": "NullBooleanField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": "False",
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "BaseObject",
                        "verbose_name": "Base object",
                        "verbose_name_plural": "Base objects",
                        "metaclass_code": "abstract = True",
                        "table_code": "def save(self, *argi, **argv):\n    if self.template_src:\n        self.template = ihtml_to_html(None, self.template_src)\n    super().save(*argi, **argv)\n    \ndef to_str(self, obj):\n    ret = run_code_from_db_field(\n        f\"baseobject__to_str_fun_{self.pk}.py\",\n        self,\n        \"to_str_fun\",\n        \"to_str\",\n        obj=obj\n    )\n    if ret != None:\n        return ret\n    else:\n        if obj.title:\n            return obj.title + \" [\"+self.name+\"]\"\n        else:\n            return str(obj) + \" [\"+self.name+\"]\"\n\n        \ndef get_action_template(self):\n    if self.action_template:\n        return ihtml_to_html(None, self.action_template)\n    else:\n        return None\n        \ndef get_info_template(self):\n    if self.info_template:\n        return ihtml_to_html(None, self.info_template)\n    else:\n        return None\n\ndef on_delete(self, obj, request, view):\n    run_code_from_db_field(\n        f\"baseobject__on_delete_{self.pk}.py\",\n        self,\n        \"on_delete_fun\",\n        \"on_delete\",\n        obj=obj,\n        request=request,\n        view=view\n    )\n    \n\ndef action(self, obj, action_name, argv):\n    return run_code_from_db_field(\n        f\"baseobject__action_{self.pk}.py\",\n        self,\n        \"action_fun\",\n        \"action\",\n        obj=obj,\n        action_name=action_name,\n        argv=argv\n    )\n\ndef get_declaration_if_empty(self, request, template_name, ext, extra_context, target):\n    return DECLARATION\n\ndef get_to_str_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return TO_STR\n\ndef get_to_html_rec_if_empty(self, request, template_name, ext, extra_context, target):\n    return TO_HTML_REC\n\ndef get_template_src_if_empty(self, request, template_name, ext, extra_context, target):\n    return TEMPLATE_SRC\n    \ndef get_load_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return LOAD_BASE_OBJ\n\ndef get_save_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return SAVE_BASE_OBJ\n\ndef get_action_template_if_empty(self, request, template_name, ext, extra_context, target):\n    return ACTION_TEMPLATE\n\ndef get_on_delete_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return ON_DELETE\n\ndef get_action_fun_if_empty(self, request, template_name, ext, extra_context, target):\n    return ACTION\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": false,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "app",
                                "description": "Application",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "description",
                                "description": "Description",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "declaration",
                                "description": "Declaration",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "template_src",
                                "description": "Template source",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "template",
                                "description": "Template",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "to_html_rec",
                                "description": "Convert fields to html",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "save_fun",
                                "description": "Save function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "load_fun",
                                "description": "Load function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "to_str_fun",
                                "description": "Object to str function",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "action_template",
                                "description": "Action template",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "info_template",
                                "description": "Info template",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "on_delete_fun",
                                "description": "Fnction called when deleting an object",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "action_fun",
                                "description": "Additional actions",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "view_doc_heads",
                        "view_type": "u",
                        "param": "filter, target, vtype",
                        "url": "table/DocHead/(?P<filter>[\\w=_,;-]*)/(?P<target>[\\w_-]*)/[_]?(?P<vtype>)docheadlist/",
                        "view_code": "regs = models.DocReg.objects.filter(name = filter.replace('_','/'))\nif regs.count()>0:\n    new_url = make_href(\"/schelements/table/DocHead/%s/%s/%slist/\" % (filter, target, vtype))\n    view, args, kwargs = resolve(new_url)\n    kwargs['request'] = request\n        \n    #def init(view_obj):\n    #    view_obj.template_name = \"abc\"    \n    #kwargs['init'] = init\n    \n    return view(*args, **kwargs)\nelse:\n    return HttpResponse(\"Error - %s document register doesn't exists\" % filter)\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "view_doc_items",
                        "view_type": "u",
                        "param": "parent_id",
                        "url": "table/DocItem/(?P<parent_id>\\d+)/docitemlist/",
                        "view_code": "items = models.DocItem.objects.filter(parent=parent_id)\nif items.count()>0:\n    new_url = make_href(\"/schelements/table/DocHead/%s/%s/%slist\" % (filter, target, vtype))\n    view, args, kwargs = resolve(new_url)\n    kwargs['request'] = request\n    return view(*args, **kwargs)\nelse:\n    return HttpResponse(\"Error - %s document register doesn't exists\" % filter)\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "edit_head",
                        "view_type": "u",
                        "param": "id",
                        "url": "table/DocHead/(?P<id>\\d+)/edit_head/",
                        "view_code": "return HttpResponse(\"Error\")\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "edit_item",
                        "view_type": "u",
                        "param": "id",
                        "url": "table/DocItem/(?P<id>\\d+)/edit_item/",
                        "view_code": "return HttpResponse(\"Error\")\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "approve",
                        "view_type": "r",
                        "param": "pk",
                        "url": "DocHead",
                        "view_code": "return change_status(request, pk, action='accept')    \n",
                        "url_params": null,
                        "ret_type": "T",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "discard",
                        "view_type": "r",
                        "param": "pk",
                        "url": "DocHead",
                        "view_code": "return change_status(request, pk, action='undo')    \n",
                        "url_params": null,
                        "ret_type": "T",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "view_elements",
                        "view_type": "u",
                        "param": "code,filter,template",
                        "url": "view_elements/<slug:code>/<slug:filter>/<slug:template>/",
                        "view_code": "id = 0\n\nif code:\n    objs = models.Element.objects.filter(code=code)\n    if len(objs)>0:\n        id = objs[0].pk\n\nif not (filter and filter != '-'):\n    filter = str(id)\n\nif template and template != '-':\n    target = 'form__'+template\nelse:\n    target = 'form'\n\n        \nhref2 = make_href('/schelements/table/Element/%d/%s/%s/treelist/?only_content' % (id,filter,target), request.get_full_path())\nreturn HttpResponseRedirect(href2)\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "view_elements_as_tree",
                        "view_type": "u",
                        "param": "code,filter,template",
                        "url": "view_elements_as_tree/<slug:code>/<slug:filter>/<slug:template>/",
                        "view_code": "id = 0\n\nif code and code != '-':\n    if \":\" in code:\n        t, code = code.split(\":\", 1)\n    else:\n        t=None\n    if '-' in code:\n        parent_code, code = code.split('-', 1)\n    else:\n        parent_code = None\n\n    objs = models.Element.objects.filter(code=code)\n    \n    if t != None:\n        objs = objs.filter(type=t)\n    if parent_code != None:\n        objs = objs.filter(parent__code=parent_code)\n \n    if len(objs)>0:\n        id = objs[0].pk\n\nif template and template != '-':\n    target = 'form__'+template\nelse:\n    target = 'form'\n        \nhref2 = make_href('/schelements/table/Element/%d/%s/%s/tree/' % (id,filter,target), request.get_full_path())\nreturn HttpResponseRedirect(href2)\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "view_elements_of_type",
                        "view_type": "u",
                        "param": "type, template",
                        "url": "view_elements_of_type/<slug:type>/<slug:template>/",
                        "view_code": "s = models.Element.get_structure()\nif type in s:\n    x = s[type]\n    href = make_href(\"/%s/table/%s/-/form__%s/list/?view_in=desktop\" % (x['app'], x['table'], template if template != '-' else ''))\n    return HttpResponseRedirect(href)\nelse:\n    href = make_href('/schelements/table/Element/type/form__%s/list/?view_in=desktop' % (template if template != '-' else ''), request.get_full_path())\nreturn HttpResponseRedirect(href)\n\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "refresh_account_states",
                        "view_type": "t",
                        "param": null,
                        "url": "AccountState",
                        "view_code": "models.AccountState.objects.all().update(debit=0, credit=0, zero_balance=True)\nfor operation in models.AccountOperation.objects.filter(enabled=True):\n    operation.enabled=False\n    operation.save()\n    operation.confirm()\nreturn actions.refresh(request)",
                        "url_params": null,
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Element",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/tree.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"name1\": \"image_path1\",\n                    \"name2\": \"image_path2\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% on_dialog_load {:}\n    function show_hide(typ):\n        if (typ=='S'):\n            $('label[for|=\"id_grand_parent\"]').show()\n            $('label[for|=\"id_description\"]').show()\n            $('select[name^=\"grand_parent\"]').show()\n            $('input[name=\"description\"]').show()\n            $('#id_key').show()\n        else:\n            $('label[for|=\"id_grand_parent\"]').hide()\n            $('label[for|=\"id_description\"]').hide()\n            $('select[name^=\"grand_parent\"]').hide()\n            $('input[name=\"description\"]').hide()\n            $('#id_key').hide()\n\n    $('#id_type').change(\n        function():\n            var typ\n            typ = $(this)[0].options[$(this)[0].selectedIndex].value\n            show_hide(typ)\n            return false\n\n    var id_type=$('#id_type')[0].options[$('#id_Typ')[0].selectedIndex].value\n    show_hide(id_type)\n    if(id_type!=\"\"):\n        $('label[for|=\"id_type\"]').hide()\n        $('select[name=\"type\"]').hide()\n\n\n%% all\n    %with table_type='datatable' title=\"Elements\":\n        {{ block.super }}\n\n%% list_content_actions_new_row\n    % if not readonly:\n        % if parent_pk > 0:\n            % with buttons=parent.get_new_buttons:\n                % if buttons:\n                    % for button in buttons:\n                        % new_row \"new \"|append_str:button.title url=base_path|append_str:button.app|append_str:\"/table/\"|append_str:button.table|append_str:'/%d/this/'|format:parent_pk|append_str:button.type|append_str:\"/add/\"\n                % else:\n                    % if parent_pk:\n                        % new_row \"_(New element)\" url=table_path|append_str:'%d/this/-/add/'|format:parent_pk\n        % else\n            % with buttons=model.get_root_new_buttons:\n                % if buttons:\n                    % for button in buttons:\n                        % new_row \"new \"|append_str:button.title url=base_path|append_str:button.app|append_str:\"/table/\"|append_str:button.table|append_str:'/0/this/'|append_str:button.type|append_str:\"/add/\"\n                % else:\n                    % new_row \"_(New element)\" url=table_path|append_str:'0/this/-/add/'\n\n%% list_row_header\n    th..._(Type)\n    th..._(Code)\n    th..._(Name)\n\n%% list_row\n    td\n        img src={{ STATIC_URL }}icons/struct/elm_{{object.type}}.png\n    td...{{object.code}}\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % comment:\n        % if object.call__can_change|call_with:user and perms.can_change|call_with:object\n            % row_actions:\n                .edit\n        % if object.call__can_delete|call_with:user and perms.can_delete|call_with:object\n            % row_actions:\n                .delete\n\n    % if object.call__can_change\n        % row_actions:\n            .edit\n    % if object.call__can_delete\n        % row_actions:\n            .delete\n\n\n\n%% row_edit\n    % if form_add\n        % form:\n            .parent:!, type\n    % else\n        % form:\n            .parent,type:!\n    % form: \n        \"code\", \"name\", \"can_delete_permission\", \"can_add_permission\", \"can_change_permission\", \"can_delete_permission\"   \n    %if not object.type or object.type == 'S'\n        % form:\n            \"grand_parent1\", \"grand_parent2\", \"grand_parent3\", \"grand_parent4\"\n    % form:\n        \"description\"\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "BaseAccount",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=<<dx>> form_height=<<dy>>\n        {{ block.super }}\n\n%% scroll\n\n%% form_header\n    p\n        % new_row \"<<new_row_title>>\"\n        % action_table \"<<action>>\" \"<<action_title>>\"\n\n%% table_header\n  tr\n    td...ID\n    td...<<col_name>>\n    td...Action\n\n%% table_content\n    tr\n        td:::a href={{object.id}}/info?width=<<info_dy>>&height=<<info_dx>>,,,title=<<info_title>>,,,class=thickbox...{{object.id}}\n        td...{{object.<<object_name>>}}\n        td\n            % list_field \"<<child_name>>_set\" \"<<child_id>>\" \"<<child_title>>\"\n\n            % edit_field \"<<field_name>>\" \"<<field_id>>\" \"<<field_title>>\"\n\n            % action_row \"<<name1>>\" \"<<action_title_1>>\"\n            % action_row \"<<name2>>\" \"<<action_title_2>>\"\n\n            % edit_row \"update\"\n            % delete_row \"delete\"\n\n%% table_footer\n  tr\n    td...-\n    td...-\n    td:::\n        % new_row \"<<new_row_title>>\"\n\n%% table_row_edit\n    {{form.as_table}}\n    {{form.fields_as_table.<<field1>>__<<field2>>__<<field3>>}}\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Classifier",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/tree.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n\n%% all\n    %with form_width=800 form_height=600 table_type='datatable' title=_(\"Classifier\"):\n        {{ block.super }}\n\n%% list_row_header\n    th..._(Name)\n    th..._(Description)\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n\n%% row_edit\n    % if form_add:\n        % form:\n            \"name\",\n            \"description\"\n    % else\n        % form:\n            \"parent\",\n            \"name\",\n            \"description\"\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Account",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/tree.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"name1\": \"image_path1\",\n                    \"name2\": \"image_path2\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% on_dialog_load {:}\n    function show_hide(typ):\n        if (typ=='S'):\n            $('label[for|=\"id_grand_parent\"]').show()\n            $('label[for|=\"id_description\"]').show()\n            $('select[name^=\"grand_parent\"]').show()\n            $('input[name=\"description\"]').show()\n            $('#id_key').show()\n        else:\n            $('label[for|=\"id_grand_parent\"]').hide()\n            $('label[for|=\"id_description\"]').hide()\n            $('select[name^=\"grand_parent\"]').hide()\n            $('input[name=\"description\"]').hide()\n            $('#id_key').hide()\n\n    $('#id_type').change(\n        function():\n            var typ\n            typ = $(this)[0].options[$(this)[0].selectedIndex].value\n            show_hide(typ)\n            return false\n\n    var id_type=$('#id_type')[0].options[$('#id_Typ')[0].selectedIndex].value\n    show_hide(id_type)\n    if(id_type!=\"\"):\n        $('label[for|=\"id_type\"]').hide()\n        $('select[name=\"type\"]').hide()\n\n\n%% all\n    % with table_type='datatable' title=\"Accounts\":\n        {{ block.super }}\n\n\n%% id_extra_tree\n    {% view_row object object.name %}\n        \n%% list_row_header\n    th..._(Description)\n    th..._(Type 1)\n    th..._(Type 2)\n    th..._(Classifier 1)\n    th..._(Classifier 2)\n    th..._(Classifier 3)\n\n%% list_row\n    td...{{object.description}}\n    td...{{object.type1}}\n    td...{{object.type2}}\n    td...{{object.root_classifier1|none_to_empty}}\n    td...{{object.root_classifier2|none_to_empty}}\n    td...{{object.root_classifier3|none_to_empty}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n%% row_edit\n    % if form_add\n        % form:\n            .parent:!\n    % else\n        % form:\n            .parent\n    \n    % if object.parent:\n        % form:\n            .type2:!\n    % else:\n        % form:\n            .type2\n                \n    % form: \n        .name,description,correctness_rule,root_classifier1,root_classifier2,root_classifier3\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "AccountDocument",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"<<name1>>\": \"<<image_path1>>\",\n                    \"<<name2>>\": \"<<image_path2>>\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=<<dx>> form_height=<<dy>>\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"<<new_row_title>>\"\n    % action_table \"<<action>>\" \"<<action_title>>\"\n\n%% list_row_header\n    th...<<col_name>>\n\n%% list_row\n    td...{{object.<<object_name>>}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/<<field_name>>,<<name>>,<<field_id>>\n        .field_list/<<child_name>>_set,<<field_title>>,<<field_id>>\n        .<<action_name>>,<<action_title>>\n        .delete\n\n\n%% row_edit\n    % form:\n\n    % form:\n            \"<<field_1>>\", \"<<field_2>>\"\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "AccountStack",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"<<name1>>\": \"<<image_path1>>\",\n                    \"<<name2>>\": \"<<image_path2>>\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=<<dx>> form_height=<<dy>>\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"<<new_row_title>>\"\n    % action_table \"<<action>>\" \"<<action_title>>\"\n\n%% list_row_header\n    th...<<col_name>>\n\n%% list_row\n    td...{{object.<<object_name>>}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/<<field_name>>,<<name>>,<<field_id>>\n        .field_list/<<child_name>>_set,<<field_title>>,<<field_id>>\n        .<<action_name>>,<<action_title>>\n        .delete\n\n\n%% row_edit\n    % form:\n\n    % form:\n            \"<<field_1>>\", \"<<field_2>>\"\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "AccountMoves",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"<<name1>>\": \"<<image_path1>>\",\n                    \"<<name2>>\": \"<<image_path2>>\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=<<dx>> form_height=<<dy>>\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"<<new_row_title>>\"\n    % action_table \"<<action>>\" \"<<action_title>>\"\n\n%% list_row_header\n    th...<<col_name>>\n\n%% list_row\n    td...{{object.<<object_name>>}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/<<field_name>>,<<name>>,<<field_id>>\n        .field_list/<<child_name>>_set,<<field_title>>,<<field_id>>\n        .<<action_name>>,<<action_title>>\n        .delete\n\n\n%% row_edit\n    % form:\n\n    % form:\n            \"<<field_1>>\", \"<<field_2>>\"\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocumentLines",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"<<name1>>\": \"<<image_path1>>\",\n                    \"<<name2>>\": \"<<image_path2>>\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=<<dx>> form_height=<<dy>>\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"<<new_row_title>>\"\n    % action_table \"<<action>>\" \"<<action_title>>\"\n\n%% list_row_header\n    th...<<col_name>>\n\n%% list_row\n    td...{{object.<<object_name>>}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/<<field_name>>,<<name>>,<<field_id>>\n        .field_list/<<child_name>>_set,<<field_title>>,<<field_id>>\n        .<<action_name>>,<<action_title>>\n        .delete\n\n\n%% row_edit\n    % form:\n\n    % form:\n            \"<<field_1>>\", \"<<field_2>>\"\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "AccountOperation",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"_(New account operation)\"\n\n\n%% id_extra\n    {{ block.super }}\n    % if not object.enabled:\n        move-attr target-tag=tr,,,class=table-dark\n\n%% list_row_header\n    th..._(Date)\n    th..._(Description)\n    th..._(Name of payment)\n    th..._(Account state)\n    th..._(Sign)\n    th..._(Quantity)\n\n%% list_row\n    td...{{object.date|isoformat}}\n    td...{{object.description|none_to_empty}}\n    td...{{object.payment|none_to_empty}}\n    td...{{object.account_state}}\n    td...{{object.sign}}\n    td...{{object.qty}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n%% row_edit\n    % form:\n        .parent,description,payment,account_state\n    % comment:\n        div class=ajax-region,,,data-region=get_row\n            div class=row\n                % get_table_row form.account_state search_fields=\"parent__name__icontains\"\n    % form:\n        .sign,qty\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocReg",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='simple':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row _(\"New document register\")\n    ptig-paste href={{table_path_and_filter}}form/table_action/\n\n%% list_row_header\n    th..._(name)\n    th..._(description)\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_list/doctype_set,Types of documents,doctype_set        \n        .field_list/docregstatus_set,Types of document statuses,docregstatus_set        \n        .field_edit/head_form,Head form,head_form\n        .field_edit/head_template,Head template,head_template\n        .field_edit/item_form,Item form,item_form\n        .field_edit/item_template,Item template,item_template\n        .field_edit/save_head_fun,Save head function,save_head_fun\n        .field_edit/save_item_fun,Save item function,save_item_fun\n        .field_edit/access_fun,Acces functions,access_fun\n        .delete\n\n%% row_edit\n    % form:\n        .app,name,group,description\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocHead",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    % if vtype == 'sublist':\n        % with table_type='datatable':\n            {{ block.super }}\n    % else:\n        % with table_type='datatable' table_subtype='table_with_details' table_details_height=\"40vh\":\n            {{ block.super }}\n\n%% list_content_header\n   % if vtype != 'sublist':\n       {{ block.super }}\n \n%% scroll\n\n%% list_content_actions\n    % if vtype != 'sublist':\n        % with object_list.model|args:filter|call:\"get_documents_for_reg\" as doctypes:\n            % for item in doctypes:\n                % new_row \"_(New document:) \"|append_str:item.name action=\"new_row/\"|append_str:item.name url=\"+?after_close=refresh\"\n\n%% list_row_header\n    th..._(Register)\n    th..._(Target)\n    th..._(Name)\n    th..._(Number)\n    th..._(Description)\n    th..._(Date)\n    th..._(Status)\n    \n%% list_row\n    td...{{object.doc_type_parent.name}}\n    td...{{object.org_chart_parent.name}}\n    td...{{object.name}}\n    td...{{object.number}}\n    td...{{object.description}}\n    td...{{object.date|isoformat}}\n    td...{{object.status}}\n\n%% id_extra\n    % row_actions:\n        .field_list/docitem_set,Document items,fa fa-lg fa-plus/fa fa-list-ol        \n    % row_related_list \"schlog/Log\" title=\"Operation log\" filter=\"schelements__DocHead__{{object.id}}__default\" icon_name=\"fa fa-lg fa-street-view\" tag_class=\"+class='btn-info'\" version=\"schelements__\"\n    {{ block.super }}\n\n%% list_row_actions\n    % if object.status == \"\" or object.status == 'draft':\n        % row_actions:\n            .edit-inline\n            .delete\n        \n    % with object|args:request|call:\"get_visible_statuses\" as vs:    \n        % if vs:\n            % for row in vs reversed:\n                % if row.order > object.get_reg_status.order:\n                    % if row.for_accept_template:\n                        % subtemplate row.for_accept_template\n                    % else:\n                        % action \"approve_status\"|append_str:\"/\"|append_str:row.name row.description row.icon|first_elem target=row.get_accept_target url=table_path|append_str:\"{id}/action/approve/\"\n\n    % with object|args:request|call:\"get_visible_statuses\" as vs:    \n        % if vs:\n            % for row in vs reversed:\n                % if row.order < object.get_reg_status.order:\n                    % if row.for_undo_template:\n                        % subtemplate row.for_undo_template\n                    % else:\n                        % action \"decline_status\"|append_str:\"/\"|append_str:row.name \"_(Back to status:)\"|append_str:row.name row.icon|last_elem target=row.get_undo_target tag_class=\"+btn-danger\" url=table_path|append_str:\"{id}/action/discard/\"\n\n    % comment:\n        % if object|args:request|call:\"status_can_be_undo\":\n            % action \"decline_status\"|append_str:\"/\"|append_str:object.status \"_(Discard status:) \"|append_str:object.status \"fa fa-undo\" target=object.get_undo_target tag_class=\"+btn-danger\" url=table_path|append_str:\"{id}/action/discard/\"\n\n\n%% list_page_footer\n    % if vtype != 'sublist':\n        % row_details:\n            *Items:schelements/table/DocHead/[[table_row_pk]]/docitem_set/-/form/sublist/\n            (schelements)Sources:schelements/table/DocHead//_parents_[[table_row_pk]]/form/sublist/\n            (schelements)Dependence:schelements/table/DocHead//_children_[[table_row_pk]]/form/sublist/\n            (schlog)Logs:schlog/table/Log//schelements__DocHead__[[table_row_pk]]__default/form__schelements__/sublist/\n            (schattachements)Attachements:schattachements/table/Attachement//schelements__DocHead__[[table_row_pk]]__default/form__schattachements__/sublist/\n            (schworkflow)Acceptances:schworkflow/table/WorkflowItem//schelements__DocHead__[[table_row_pk]]__default/form__schworkflow__/sublist/\n            (schcomments)Comments:schcomments/table/Comment//schelements__DocHead__[[table_row_pk]]__default/form__schcomments__/sublist/\n\n%% dialog_type\n    .modal-xl\n\n%% row_edit\n    %% dochead_edit\n        %form \"^/6\":\n\n%% row_edit_footer   \n    % if object.id:\n        %% docitem_list\n            hr style=height:10px;background:gray;border:0px;\n            % frame table_path|append_str:object.id|append_str:\"/docitem_set/-/form/sublist/?only_content=1\" \"200px\"\n    % else:\n        <button type=\"button\" class=\"btn btn-warning\" target=\"refresh_frame\" rettype=\"RETURN_HTML\" data-region=\"page-content\" get-param=\"redirect='1'\" style=\"width:100%\"> << Expand >> </button>\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "AccountState",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row _(\"Account state\")\n    % list_action \"refresh_account_states\" _(\"Refresh account states\") target=\"refresh_frame\"\n\n%% list_row_header\n    th..._(Name)\n    th..._(Account name)\n    th..._(Period)\n    th data-align=right..._(debit)\n    th data-align=right..._(credit)\n    th data-align=right..._(balance)\n\n%% list_row\n    td...{{object}}\n    td...{{object.parent}}\n    td...{{object.period|none_to_empty}}\n    td...{{object.debit}}\n    td...{{object.credit}}\n    td\n        strong...{{object.credit|fsubtract:object.debit}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n%% row_edit\n    % form:\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocType",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='simple':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"_(Document type)\"\n\n%% list_row_header\n    th..._(Name)\n    th..._(Description)\n    th..._(Correction)\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n    td...{{object.correction}}\n\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/head_form,Head form,head_form\n        .field_edit/item_form,Item form,item_form\n        .field_edit/save_head_fun,Save head function,save_head_fun\n        .field_edit/save_item_fun,Save item function,save_item_fun        \n        .delete\n\n\n%% row_edit\n    % form:\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocRegStatus",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='scrolled':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"_(New status)\"\n    ptig-paste href={{table_path_and_filter}}form/table_action/\n\n%% list_row_header\n    th..._(Order)\n    th..._(Name)\n    th..._(Description)\n\n%% list_row\n    td...{{object.order}}\n    td...{{object.name}}\n    td...{{object.description}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:...doc_reg_status_up,Move up,fa fa-caret-square-o-down\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...doc_reg_status_down,Move down,fa fa-caret-square-o-down\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/accept_proc,Accept procedure,accept_proc\n        .field_edit/undo_proc,Undo procedure,undo_proc\n        .field_edit/can_set_proc,Check if status can be set\n        .field_edit/can_undo_proc,Check if status can be removed\n        .field_edit/accept_form,Form for acceptance process \n        .field_edit/undo_form,Form for acceptance withdrawal process \n        .field_edit/for_accept_template,Template for acceptance action \n        .field_edit/for_undo_template,Template for undo action \n        .delete\n\n\n%% row_edit\n    % form:\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocHeadStatus",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n\n%% list_row_header\n    th..._(Date)\n    th..._(Name)\n    th..._(Operator)\n    th..._(Data)\n\n%% list_row\n    td...{{object.date}}\n    td...{{object.name}}\n    td...{{object.operator}}\n    td...{{object.data}}\n\n%% list_row_actions\n\n%% row_edit\n    % form:\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Form_FilterFormDocHead",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='<<form_title>>'\n        {{ block.super }}\n\n\n%% user_header\n    th...<<col_name1>>\n    th...<<col_name2>>\n    th...<<col_name3>>\n\n\n%% user_row\n    tr\n        td... {{object.0}}\n        td align=right... {{object.1|floatnullformat}}\n        td align=right... {{object.2|to_int}}\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocItem",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n% load contenttypes\n\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='simple':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_header_first_row\n\n%% list_content_header_second_row\n\n%% list_content_actions\n    % with parent.doc_type_parent.parent.name|lower as reg_name:\n        % with reg_name|append_str:\"docitem\" as doc_name:\n            % if doc_name|table_exists:\n                % with \"new_row/\"|append_str:reg_name as action:\n                    % new_row \"_(New document item)\" action=action \n            % else\n                % new_row \"_(New document item)\" \n    \n%% list_row_header\n    th..._(order)\n    th..._(description)\n    th..._(item)\n    th..._(quantity)\n\n%% list_row\n    td...{{object.order}}\n    td...{{object.description}}\n    td...{{object.item}}\n    td...{{object.qty}}\n\n\n%% id_extra\n    % row_actions:\n        .field_list-parent/accountoperation_set,Account operations,fa fa-lg fa-plus/fa fa-list-ol,url=+?fragment=page\n    {{ block.super }}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n%% row_edit\n    % form:\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "admin_delegation_dochead_list",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"schelements/dochead.html\"\n\n% load exfiltry\n% load exsyntax\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "admin_delegation_dochead_edit",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"schelements/dochead.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% dochead_edit\n    % form:\n        .description\n    % get_table_row \"account_id\" \"schelements\" \"Account\" \"name__icontains\" filter=\"1\"\n    ",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "admin_delegation_docitem_list",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"schelements/docitembase.html\"\n\n% load exfiltry\n% load exsyntax\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocItemBase",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"schelements/docitem.html\"\n\n% load exfiltry\n% load exsyntax\n\n%%list_content_header_first_row\n\n%%list_content_header_second_row\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "v_approve",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends 'forms/form.html'\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_form=True form_edit=True\n        % if errors:\n            meta name=RETURN,,,content=$$RETURN_HTML_ERROR\n        {{ block.super }}\n\n%% form_action\n    {{request.path}}?x1={{ action_name }}\n\n%% row_edit_form    \n    % if errors:\n        % for error in errors:\n            div class=alert alert-secondary,,,role=alert\n                {{ error|safe }}\n    % else:\n        % if description:\n            {{ description|safe }}\n        % else:\n            h3..._(Are you sure you want to accept the document)? <br>\n            h4..._(You accept the status): {{ action_name }}\n    % if form:\n        br    \n        % form:\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "v_discard",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends 'forms/form.html'\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    % with show_form=True form_edit=True\n        % if errors:\n            meta name=RETURN,,,content=$$RETURN_HTML_ERROR\n        {{ block.super }}\n\n%% form_action\n    {{request.path}}?x1={{ action_name }}\n\n%% row_edit_form    \n    % if errors:\n        % for error in errors:\n            div class=alert alert-secondary,,,role=alert\n                {{ error|safe }}\n    % else:\n        % if description:\n            {{ description|safe }}\n        % else:\n            h3..._(Are you sure you want to discard the document)? <br>\n            h4..._(You discard the status): {{ action_name }}\n    % if form:\n        br    \n        % form:\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "BaseObject",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    % with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"<<new_row_title>>\"\n    % list_action \"<<action>>\" \"<<action_description>>\"\n\n%% list_row_header\n    th..._(Application)\n    th..._(Name)\n    th..._(Description)\n    th..._(Declaration)\n    th..._(Template source)\n    th..._(Template)\n    th..._(Convert fields to html)\n    th..._(Save function)\n    th..._(Load function)\n    th..._(Object to str function)\n    th..._(Action template)\n    th..._(Info template)\n    \n\n%% list_row\n    td...{{ object.app }}\n    td...{{ object.name }}\n    td...{{ object.description }}\n    td...{{ object.declaration }}\n    td...{{ object.template_src }}\n    td...{{ object.template }}\n    td...{{ object.to_html_rec }}\n    td...{{ object.save_fun }}\n    td...{{ object.load_fun }}\n    td...{{ object.to_str_fun }}\n    td...{{ object.action_template }}\n    td...{{ object.info_template }}\n    \n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n        .field_edit/declaration,<description>\n        .field_edit/template_src,<description>\n        .field_edit/template,<description>\n        .field_edit/to_html_rec,<description>\n        .field_edit/save_fun,<description>\n        .field_edit/load_fun,<description>\n        .field_edit/to_str_fun,<description>\n        .field_edit/action_template,<description>\n        .field_edit/info_template,<description>\n        .<<action_name>>,<<description>>\n\n%% row_edit\n    % form:\n        .app,name,description,declaration,template_src,template,to_html_rec,save_fun,load_fun,to_str_fun,action_template,info_template\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Elements",
                        "url": "table/Element/0/form/tree/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_element",
                        "icon": "bi-stack",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Documents register",
                        "url": "table/DocReg/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_docreg",
                        "icon": "client://actions/folder-new.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Types of documents",
                        "url": "table/DocType/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_doctype",
                        "icon": null,
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Definition of document status",
                        "url": "table/DocRegStatus/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_docregstatus",
                        "icon": null,
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Accounts",
                        "url": "table/Account/0/form/tree/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_account",
                        "icon": "client://apps/system-file-manager.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "States of accounts",
                        "url": "table/AccountState/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_accountstate",
                        "icon": "client://mimetypes/package-x-generic.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Account operations",
                        "url": "table/AccountOperation/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_accountoperation",
                        "icon": "client://actions/edit-find-replace.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Documents",
                        "url": "table/DocHead/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schelements.admin_accountoperation",
                        "icon": "client://actions/format-justify-fill.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChForm",
                    "attributes": {
                        "name": "_FilterFormDocHead",
                        "module": null,
                        "process_code": "date_from = self.cleaned_data['date_from']\ndate_to = self.cleaned_data['date_to']\ntarget = self.cleaned_data['target']\nnumber = self.cleaned_data['number']\n\nfiltered = False\nif date_from:\n    queryset = queryset.filter(date__gte = date_from)\n    filtered = True\nif date_to:\n    queryset = queryset.filter(date__lt = date_to + datetime.timedelta(days=1))\n    filtered = True\nif target:\n    queryset = queryset.filter(parent_element__name__icontains = target)\n    filtered = True\nif number:\n    queryset = queryset.filter(number__icontains = number)\n    filtered = True\n\nif not filtered: \n    return self.process_empty_or_invalid(request, queryset)\n\nqueryset = queryset.order_by(\"-date\", \"-id\")\n\nreturn queryset\n",
                        "end_class_code": "def process_empty_or_invalid(self, request, queryset):\n    return queryset.filter(date__gte = year_ago()).order_by(\"-date\", \"-id\")\n\n    ",
                        "end_code": "",
                        "asynchronous": false,
                        "doc": ""
                    },
                    "children": [
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "date_from",
                                "type": "DateField",
                                "required": false,
                                "label": "Date from",
                                "initial": "year_ago",
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": null
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "date_to",
                                "type": "DateField",
                                "required": false,
                                "label": "Date to",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": null
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "target",
                                "type": "CharField",
                                "required": false,
                                "label": "Target",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": "max_length=None, min_length=None"
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "number",
                                "type": "CharField",
                                "required": false,
                                "label": "Number",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": "max_length=None, min_length=None"
                            }
                        }
                    ]
                },
                {
                    "model": "SChForm",
                    "attributes": {
                        "name": "_FilterFormAccountState",
                        "module": null,
                        "process_code": "return self.process_empty_or_invalid(request, queryset)\n",
                        "end_class_code": "def process_empty_or_invalid(self, request, queryset):    \n    if not self.is_bound:\n        return queryset\n\n    if self.data['account_target']:\n        queryset = queryset.filter(target__id = int(self.data['account_target'][0]))\n    if self.cleaned_data['account']:\n        #account: 201-1/target:classifier1_name:classifier2_name:classifier3_name [element_name]\n        x = self.cleaned_data['account'].split(\"/\")\n        \n        if x[0].endswith(\"*\"):\n            queryset = queryset.filter(parent__name__startswith=x[0][:-1])\n        elif '-' in x[0]:\n            y = x[0].rsplit('-',1)\n            queryset = queryset.filter(Q(parent__name=x[0]) | (Q(parent__name=y[0]) & Q(subcode=y[1])))\n        else:\n            queryset = queryset.filter(parent__name=x[0])\n        if len(x)>1 and x[1]:\n            if '[' in x[1]:\n                z = x[1].split('[')\n                y = z[0].strip().split(\":\")\n                queryset = queryset.filter(element__code=z[1].split(']')[0])\n            else:\n                y = x[1].split(\":\")\n            if y[0]:\n                queryset = queryset.filter(target__code=y[0])\n            if len(y)>1:\n                if y[1]:\n                    queryset = queryset.filter(classifier1value__code=y[1])\n            if len(y)>2:\n                if y[2]:\n                    queryset = queryset.filter(classifier1value__code=y[2])\n            if len(y)>3:\n                if y[3]:\n                    queryset = queryset.filter(classifier1value__code=y[3])\n\n    if self.cleaned_data['period']:\n        if self.cleaned_data['period'] == '*':\n            pass\n        else:\n            queryset = queryset.filter(period=self.cleaned_data['period'])\n    else:\n        queryset = queryset.filter(Q(period__isnull=True)|Q(period=\"\"))\n\n    if self.cleaned_data['not_null']:\n        queryset = queryset.exclude(debit=F('credit'))\n\n    if self.cleaned_data['not_empty']:\n        queryset = queryset.exclude(debit=0,credit=0)\n\n    if self.cleaned_data['analytical']:\n        queryset = queryset.filter(aggregate=False)\n    else:\n        queryset = queryset.filter(aggregate=True)\n        \n    return queryset\n",
                        "end_code": "",
                        "asynchronous": false,
                        "doc": ""
                    },
                    "children": [
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "account_target",
                                "type": "ModelSelect2Field",
                                "required": false,
                                "label": "Target",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": "queryset=models.Element.objects.filter(type='O-DIV'), search_fields=['name__istartswith'], attrs={'data-minimum-input-length': 0}"
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "account",
                                "type": "CharField",
                                "required": false,
                                "label": "Account",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": "max_length=None, min_length=None"
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "period",
                                "type": "CharField",
                                "required": false,
                                "label": "Period",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": "max_length=None, min_length=None"
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "not_null",
                                "type": "BooleanField",
                                "required": false,
                                "label": "Not null",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": null
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "not_empty",
                                "type": "BooleanField",
                                "required": false,
                                "label": "Not empty",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": null
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "analytical",
                                "type": "BooleanField",
                                "required": false,
                                "label": "Analytical",
                                "initial": "True",
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChFile",
                    "attributes": {
                        "type": "f",
                        "name": "elements",
                        "content": "from django import template\n\nregister = template.Library()\n\n\n@register.filter(name=\"dochead_prefetch\")\ndef dochead_prefetch(object_list):\n    l = object_list\n    for related in ['doc_type_parent', 'doc_type_parent__parent', 'doc_type_parent__parent__docregstatus_set']:\n        l = l.prefetch_related(related)\n    return l\n\n@register.filter(name=\"dochead_report_prefetch\")\ndef dochead_report_prefetch(object_list):\n    l = object_list\n    for related in ['doc_type_parent', 'doc_type_parent__parent', 'doc_type_parent__parent__docregstatus_set', 'report_set']:\n        l = l.prefetch_related(related)\n    return l\n",
                        "doc": null
                    }
                }
            ]
        },
        {
            "model": "SChApp",
            "attributes": {
                "jsondata": null,
                "name": "schprofile",
                "title": "Profiles",
                "module_name": "Config",
                "module_title": "Config",
                "perms": true,
                "index": null,
                "model_code": "from django.contrib.auth import get_user_model\nfrom django.db.models.signals import post_save, pre_delete\nfrom django.dispatch import receiver\nfrom schelements.models import Element \nfrom django.contrib import admin\nfrom django.contrib.auth.admin import UserAdmin as BaseUserAdmin\nfrom django.contrib.auth import get_user_model \nfrom pytigon_lib.schtools.tools import get_request\nfrom pytigon_lib.schdjangoext.tools import from_migrations\n\ndef limit_owner():\n    return {}\n    \ndef limit_config():\n    return {}\n        \nLIMIT_OWNER = OverwritableCallable(limit_owner)\nLIMIT_CONFIG = OverwritableCallable(limit_config)\n\nUser = get_user_model()\n$$$\n\nUSER_PROFILES = False\n\ndef init_user_profiles():\n    global USER_PROFILES\n\n    if not USER_PROFILES and not from_migrations():\n        USER_PROFILES = True\n\n        @receiver(post_save, sender=get_user_model())\n        def create_user_profile(sender, instance, created, **kwargs):\n            if created:\n                Profile.objects.create(user=instance)\n            else:\n                try:\n                    instance.profile.save()\n                except Profile.DoesNotExist:\n                    Profile.objects.create(user=instance)\n\n        class UserWithProfileInline(admin.StackedInline):\n            model = Profile\n            can_delete = False\n            verbose_name_plural = \"Profile\"\n\n        class UserAdmin(BaseUserAdmin):\n            inlines = (UserWithProfileInline,)\n\n            def get_inline_instances(self, request, obj=None):\n                if not obj:\n                    return list()\n                return super(UserAdmin, self).get_inline_instances(request, obj)\n\n        admin.site.unregister(get_user_model())\n        admin.site.register(get_user_model(), UserAdmin)\n",
                "view_code": null,
                "urls_code": null,
                "tasks_code": "",
                "consumer_code": "",
                "doc": null,
                "user_param": "",
                "icon": "png://apps/preferences-desktop-theme.png",
                "icon_size": "1",
                "icon_code": null
            },
            "children": [
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "Profile",
                        "verbose_name": "Profile",
                        "verbose_name_plural": "Profiles",
                        "metaclass_code": "permissions = [\n    (\"admin_profile\", \"Can administer profiles\"),\n]\n",
                        "table_code": "user = models.OneToOneField(get_user_model(), on_delete=models.CASCADE)\n\ndef set_active_variant(self, value):\n    if self.variants:\n        request = get_request()\n        tab = self.variants.split(\"\\n\")\n        for row in tab:\n            if row.startswith(value):\n                request.session[\"active_variant\"] = row.strip()\n                return True\n    return False\n\ndef get_active_variant(self):\n    request = get_request()\n    ret = request.session.get(\"active_variant\", None)\n    if ret != None:\n        v = {}\n        for x in ret.split(\",\", 1):\n            if x and \"=\" in x:\n                xx = x.split(\"=\", 1)\n                v[xx[0].strip()] = xx[1].strip()\n        return v\n    else:\n        if self.variants:\n            x = self.variants.split(\"\\n\")[0].split(\":\", 1)[1]\n            if x:\n                request.session[\"active_variant\"] = x\n                return self.get_active_variant()\n        return None\n\ndef get_active_variant_description(self):\n    request = get_request()\n    ret = request.session.get(\"active_variant\", None)\n    if ret != None:\n        if \":\" in ret:\n            return ret.split(\":\", 1)[0].strip()\n        return None\n    else:\n        if self.variants:\n            x = self.variants.split(\"\\n\")[0]\n            if x:\n                request.session[\"active_variant\"] = x\n                return self.get_active_variant_description()\n        return None\n\ndef get_all_variants(self):\n    if self.variants:\n        return [item.split(\":\")[0] for item in self.variants.split(\"\\n\") if item]\n    else:\n        return None\n\ndef get_variant_count(self):\n    if self.variants:\n        return len([item for item in self.variants.split(\"\\n\") if item])\n    else:\n        return None\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "owner",
                                "description": "Owner",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "schelements.Element",
                                "param": "related_name=\"profile_owners\", limit_choices_to=LIMIT_OWNER",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "config",
                                "description": "Config",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "schelements.Element",
                                "param": "related_name=\"profile_configs\",limit_choices_to=LIMIT_CONFIG",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "user_type",
                                "description": "User type",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=32",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "doc_regs",
                                "description": "Allowed document registers",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "doc_types",
                                "description": "Allowed document types",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "accounts",
                                "description": "Allowed accounts",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "aliases",
                                "description": "Aliases",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "variants",
                                "description": "Variants",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "UserProxy",
                        "verbose_name": "User",
                        "verbose_name_plural": "Users",
                        "metaclass_code": null,
                        "table_code": null,
                        "ordering": "['id']",
                        "doc": null,
                        "generic": false,
                        "url_params": null,
                        "proxy_model": "User"
                    },
                    "children": []
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Profile",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    % with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"<<new_row_title>>\"\n    % list_action \"<<action>>\" \"<<action_description>>\"\n\n%% list_row_header\n    th..._(Owner)\n    th..._(Config)\n    th..._(User type)\n    th..._(Allowed document registers)\n    th..._(Allowed document types)\n    th..._(Allowed accounts)\n    \n\n%% list_row\n    td...{{ object.owner }}\n    td...{{ object.config }}\n    td...{{ object.user_type }}\n    td...{{ object.doc_regs }}\n    td...{{ object.doc_types }}\n    td...{{ object.accounts }}\n    \n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n        .<<action_name>>,<<description>>\n\n%% row_edit\n    % form:\n        .owner,config,user_type,doc_regs,doc_types,accounts\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                }
            ]
        },
        {
            "model": "SChApp",
            "attributes": {
                "jsondata": null,
                "name": "schstruct",
                "title": "Structures",
                "module_name": "Config",
                "module_title": "Config",
                "perms": true,
                "index": null,
                "model_code": "from pytigon_lib.schtools.schjson import json_dumps, json_loads\nfrom django.db.models import Max, Min\n\nfrom schelements.models import *",
                "view_code": "from pytigon_lib.schtools.schjson import json_dumps, json_loads\nfrom pytigon_lib.schdjangoext.django_ihtml import ihtml_to_html\nfrom pytigon_lib.schdjangoext.fastform import form_from_str\nfrom pytigon_lib.schviews import make_path\nfrom schelements.models import DocReg, DocType, DocHead, Element\nfrom django.db.models import F\nfrom schelements.views import year_ago\n\nfrom pytigon_lib.schdjangoext.import_from_db import run_code_from_db_field, ModuleStruct\n\n\ndef edit_group(request, group):\n    group_def = models.CommonGroupDef.objects.get(name=group.group_def_name)\n\n    if group_def.declaration:\n        form_class = form_from_str(group_def.declaration)\n    else:\n        return HttpResponse(\"ERROR\")\n        \n    if request.POST or request.FILES:    \n        if request.method == 'POST':\n            form = form_class(request.POST, request.FILES)\n            if form.is_valid():\n                data = run_code_from_db_field(\n                    f\"groupdef__save_fun_{group_def.pk}.py\",\n                    group_def,\n                    \"save_fun\",\n                    \"save\",\n                    form=form,\n                    obj=group,\n                )\n                if data == None:\n                    data = form.cleaned_data\n                \n                if not data:\n                    data = {}\n                \n                if 'title' in data:\n                    group.title = data['title']\n                    del data['title']\n                group.jsondata = data\n                #group._data = data\n                #group._data['json_update'] = True\n                group.save()\n                url = make_path('ok')\n                return HttpResponseRedirect(url)\n        \n    if not request.POST:\n        data = group.get_json_data()\n\n        data_form = run_code_from_db_field(\n            f\"groupdef__load_fun_{group_def.pk}.py\",\n            group_def,\n            \"load_fun\",\n            \"load\",\n            data=data,\n        )\n        if data != None:\n            data_form = data\n\n        if not data:\n            data = {}\n\n        data_form['title'] = group.title\n        form = form_class(initial=data_form)\n\n    #t = Template(ihtml_to_html(None, group_def.template))\n    t = Template(group_def.template)\n    c = RequestContext(request, { 'form': form, 'group': group, 'group_def': group_def})\n\n    return HttpResponse(t.render(c))\n\n\ndef move_rep(request, id, to_pos = \"+1\"):\n    obj = models.Report.objects.get(pk=id)\n    url = make_path('ok')\n    if not obj.parent:\n        return HttpResponseRedirect(url)\n    \n    if type(to_pos)==str:\n        if to_pos==\"+1\":\n            objects = models.Report.objects.filter(parent = obj.parent).filter(order__gt = obj.order)\n            if len(objects)>0:\n                obj2 = objects[0]\n            else: \n                return HttpResponseRedirect(url)\n        elif to_pos=='-1':    \n            objects = models.Report.objects.filter(parent = obj.parent).filter(order__lt = obj.order)\n            if len(objects)>0:\n                obj2 = list(objects)[-1]\n            else: \n                return HttpResponseRedirect(url)\n                \n        tmp_order = obj.order\n        obj.order = obj2.order\n        obj2.order = tmp_order\n        obj.save()\n        obj2.save()\n        \n    elif type(to_pos)==int:\n        obj2 = models.Report.objects.get(pk=to_pos)\n        order = obj2.order\n        if obj.order < order:\n            objects = models.Report.objects.filter(parent = obj.parent).filter(order__gt = obj2.order).update(order=F('order')+2)\n            obj.order = order+1\n        else:\n            objects = models.Report.objects.filter(parent = obj.parent).filter(order__gte = obj2.order).update(order=F('order')+2)\n            obj.order = order\n        obj.save()\n\n    return actions.refresh(request)\n",
                "urls_code": null,
                "tasks_code": "",
                "consumer_code": "",
                "doc": null,
                "user_param": "",
                "icon": "None",
                "icon_size": "1",
                "icon_code": null
            },
            "children": [
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "schelements.BaseObject",
                        "name": "CommonGroupDef",
                        "verbose_name": "Common group definition",
                        "verbose_name_plural": "Common groups definition",
                        "metaclass_code": "permissions = [\n    (\"admin_commongroupdef\", \"Can administer common group definitions\"),\n]\n",
                        "table_code": "def __str__(self):\n    return self.name",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "on_new_elem_event",
                                "description": "On new elemetn event",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "allowed_new_fields",
                                "description": "Allowed new fields",
                                "type": "TextField",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "main_group",
                                "description": "Main group",
                                "type": "NullBooleanField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "JSONModel",
                        "name": "CommonGroup",
                        "verbose_name": "Common group",
                        "verbose_name_plural": "Common groups",
                        "metaclass_code": "permissions = [\n    (\"admin_commongroup\", \"Can administer common groups\"),\n]\n",
                        "table_code": "def code(self):\n    return self.title\n\ndef get_def(self):\n    x = CommonGroupDef.objects.filter(name=self.group_def_name)\n    if len(x)>0:\n        return x[0]\n    else:\n        return None\n\ndef to_str(self):\n    def_obj = self.get_def()\n    if def_obj:\n        return def_obj.to_str(self)\n    else:\n        return None\n\ndef __str__(self): \n    return f\"{self.title} [{self.group_def_name}]\"\n\n@staticmethod    \ndef get_group_types(parent_pk):\n    if not parent_pk:\n        groupdef_list = CommonGroupDef.objects.filter(main_group=True)\n        return [pos for pos in groupdef_list]\n    else:\n        group = CommonGroup.objects.get(id=int(parent_pk))        \n        groupdef = CommonGroupDef.objects.filter(name=group.group_def_name)\n        ret = []\n        if len(groupdef)>0:\n            allowed_new_fields = groupdef[0].allowed_new_fields\n            if allowed_new_fields:                    \n                for pos in allowed_new_fields.replace(',',';').split(';'):\n                    if pos:\n                        objs = CommonGroupDef.objects.filter(name=pos)\n                        if len(objs)>0:\n                            ret.append(objs[0])\n        return ret\n\n@classmethod\ndef filter(cls, value, view=None, request=None):\n    if value:\n        if '__' in value:\n            id, grp = value.split(\"__\")\n            if grp == \"pk\" or not id:\n                return cls.objects.filter(pk=id)\n        else:\n            return cls.objects.filter(group_def_name=value)\n        \n    return cls.objects.all()\n\ndef on_delete(self, request, view):\n    gdef = self.get_def()\n    if gdef:\n        return gdef.on_delete(self, request, view)\n    \ndef action(self, action_name, argv):\n    gdef = self.get_def()\n    if gdef:\n        return gdef.action(self, action_name, argv)\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigTreeForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "gparent",
                                "description": "Grand parent",
                                "type": "ForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": "related_name='gparentrel'",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "title",
                                "description": "Title",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "group_def_name",
                                "description": "Group definition name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "gp_group_def_name",
                                "description": "Grand parent group definition name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "tag_name",
                                "description": "Tag name",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "key1",
                                "description": "Key 1",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "key2",
                                "description": "Key 2",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "key3",
                                "description": "Key 3",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "new_group",
                        "view_type": "u",
                        "param": "group_type, parent_id",
                        "url": "new_group/(?P<group_type>\\w+)/(?P<parent_id>\\d+)/$",
                        "view_code": "#new_group/(?P<group_type>\\w+)/(?P<parent_id\\d+)/$\nif parent_id and int(parent_id)>0:\n    parent = models.CommonGroup.objects.get(id=int(parent_id))\nelse:\n    parent = None\ngroup = models.CommonGroup()\nif parent:\n    group.parent = parent\n    gparent  = parent\n    while gparent.parent:\n        gparent = gparent.parent\n    group.gparent =gparent\n    group.gp_group_def_name = gparent.group_def_name    \nelse:\n    group.gp_group_def_name = group_type\n    \ngroup.group_def_name = group_type\n#group.save()\n\nif not group.gparent:\n    group.gparent = group\n    #group.save()\n \nreturn edit_group(request, group)\n    \n# url = make_href(\"/schstruct/table/CommonGroup/%d/edit__group/?after_close=refresh\" % group.id)\n# return HttpResponseRedirect(url)\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "edit__group",
                        "view_type": "u",
                        "param": "group_id",
                        "url": "table/CommonGroup/(?P<group_id>\\d+)/edit__group/$",
                        "view_code": "group = models.CommonGroup.objects.get(pk=group_id)\nreturn edit_group(request, group)\n\ngroup_def = models.CommonGroupDef.objects.get(name=group.group_def_name)\n\nif group_def.declaration:\n    form_class = form_from_str(group_def.declaration)\nelse:\n    return HttpResponse(\"ERROR\")\n    \nif request.POST or request.FILES:    \n    if request.method == 'POST':\n        form = form_class(request.POST, request.FILES)\n        if form.is_valid():\n            data = run_code_from_db_field(\n                f\"groupdef__save_fun_{group_def.pk}.py\",\n                group_def,\n                \"save_fun\",\n                \"save\",\n                form=form,\n                obj=group,\n            )\n            if data == None:\n                data = form.cleaned_data\n            \n            if not data:\n                data = {}\n            \n            if 'title' in data:\n                group.title = data['title']\n                del data['title']\n            group.jsondata = data\n            #group._data = data\n            #group._data['json_update'] = True\n            group.save()\n            url = make_path('ok')\n            return HttpResponseRedirect(url)\n    \nif not request.POST:\n    data = group.get_json_data()\n\n    data_form = run_code_from_db_field(\n        f\"groupdef__load_fun_{group_def.pk}.py\",\n        group_def,\n        \"load_fun\",\n        \"load\",\n        data=data,\n    )\n    if data != None:\n        data_form = data\n\n    if not data:\n        data = {}\n\n    data_form['title'] = group.title\n    form = form_class(initial=data_form)\n\n#t = Template(ihtml_to_html(None, group_def.template))\nt = Template(group_def.template)\nc = RequestContext(request, { 'form': form, 'group': group, 'group_def': group_def})\n\nreturn HttpResponse(t.render(c))\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "list_group_by_tag",
                        "view_type": "u",
                        "param": "group_tag, template",
                        "url": "list_group_by_tag/<slug:group_tag>/<slug:template>/",
                        "view_code": "if template:\n    target_template = \"__\"+template\nelse:\n    target_template = \"\"\n    \ngroups = models.CommonGroup.objects.filter(tag_name=group_tag)\nif len(groups)>0:\n    group = groups[0]\n    url = make_href(\"/schstruct/table/CommonGroup/%d/%d/form%s/tree/?only_content=1\" % (group.id, group.id, target_template))\nelse:\n    url = make_href(\"/schstruct/table/CommonGroup/0/form%s/tree/?only_content=1\" % target_template)\nreturn HttpResponseRedirect(url)    \n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "CommonGroup",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/tree.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=800 form_height=600 table_type='scrolled' title=_(\"Common Groups\"):\n        {{ block.super }}\n\n%% list_content_actions_new_row\n    div class=tr d-inline\n        % with object_list.model|args:parent_pk|call:\"get_group_types\" as tab:\n            % if tab:\n                ._(New): \n                % for pos in tab:\n                    % new_row_inline pos.description \"\" \"\" \"\" \"\" table_path|append_str:\"../../new_group/\"|append_str:pos.name|append_str:\"/\"|append_str:parent_pk|append_str:\"/?after_close=refresh\"\n\n%% list_row_header\n    th...Title\n\n%% list_row\n    td...{{object.to_str|safe }}\n        \n%% list_row_actions\n    % if object.get_def.action_template:\n        {% subtemplate object.get_def.get_action_template %}\n    % else:\n        % row_actions:\n            .edit-inline,_(Update),,,,,{{base_path}}schstruct/table/CommonGroup/{id}/edit__group/\n            .pdf\n            .odf        \n            .field_edit/data,Data,data        \n            .delete\n\n%% id_extra\n    {{ block.super }}\n    % if object.get_def.info_template:\n        {% subtemplate object.get_def.get_info_template %}\n    \n%% row_edit\n    % form:\n        \n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "CommonGroupDef",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New group definition\"\n\n%% list_row_header\n    th...Name\n    th...Description\n    th...Main group\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n    td...{{object.main_group}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/declaration,Declaration,declaration\n        .field_edit/template_src,Template src,template_src\n        .field_edit/template,Template,template\n        .field_edit/to_html_rec,To html row,to_html_rec\n        .field_edit/save_fun,Save function,save_fun\n        .field_edit/load_fun,Load function,load_fun\n        .field_edit/on_new_elem_event,On new element,on_new_elem_event\n        .field_edit/on_delete_fun,On delete element,on_delete_fun\n        .field_edit/allowed_new_fields,Allowed new fields,allowed_new_fields\n        .field_edit/to_str_fun,Convert to string function,to_str_fun\n        .field_edit/action_template,Action template,action_template\n        .field_edit/action_fun,Action function,action_fun\n        .field_edit/info_template,Info template,info_template\n        .delete\n\n%% row_edit\n    % form:\n        .app,name,description,main_group\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Common group definitons",
                        "url": "table/CommonGroupDef/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schreports.admin_commongroupdef",
                        "icon": "png://apps/system-file-manager.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Common groups",
                        "url": "table/CommonGroup/0/form/tree/",
                        "url_type": "desktop",
                        "perms": "schreports.admin_commongroup",
                        "icon": "png://apps/system-file-manager.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                }
            ]
        },
        {
            "model": "SChApp",
            "attributes": {
                "jsondata": null,
                "name": "schdoc",
                "title": "Nested documents",
                "module_name": "Config",
                "module_title": "Config",
                "perms": true,
                "index": null,
                "model_code": "from pytigon_lib.schtools.schjson import json_dumps, json_loads\nfrom django.db.models import Max, Min\nfrom schelements.models import *\n\n\n",
                "view_code": "from pytigon_lib.schtools.schjson import json_dumps, json_loads\nfrom pytigon_lib.schdjangoext.django_ihtml import ihtml_to_html\nfrom pytigon_lib.schdjangoext.fastform import form_from_str\nfrom pytigon_lib.schviews import make_path\nfrom schelements.models import DocReg, DocType, DocHead, Element\nfrom django.db.models import F\nfrom schelements.views import year_ago\nfrom pytigon_lib.schdjangoext.import_from_db import run_code_from_db_field, ModuleStruct\n\n\ndef move_doc(request, id, to_pos = \"+1\"):\n    obj = models.Doc.objects.get(pk=id)\n    url = make_path('ok')\n    if not obj.parent:\n        return HttpResponseRedirect(url)\n    \n    if type(to_pos)==str:\n        if to_pos==\"+1\":\n            objects = models.Doc.objects.filter(parent = obj.parent).filter(order__gt = obj.order)\n            if len(objects)>0:\n                obj2 = objects[0]\n            else: \n                return HttpResponseRedirect(url)\n        elif to_pos=='-1':    \n            objects = models.Doc.objects.filter(parent = obj.parent).filter(order__lt = obj.order)\n            if len(objects)>0:\n                obj2 = list(objects)[-1]\n            else: \n                return HttpResponseRedirect(url)\n                \n        tmp_order = obj.order\n        obj.order = obj2.order\n        obj2.order = tmp_order\n        obj.save()\n        obj2.save()\n        \n    elif type(to_pos)==int:\n        obj2 = models.Doc.objects.get(pk=to_pos)\n        order = obj2.order\n        if obj.order < order:\n            objects = models.Doc.objects.filter(parent = obj.parent).filter(order__gt = obj2.order).update(order=F('order')+2)\n            obj.order = order+1\n        else:\n            objects = models.Doc.objects.filter(parent = obj.parent).filter(order__gte = obj2.order).update(order=F('order')+2)\n            obj.order = order\n        obj.save()\n\n    return actions.refresh(request)\n",
                "urls_code": null,
                "tasks_code": "",
                "consumer_code": "",
                "doc": null,
                "user_param": "",
                "icon": "None",
                "icon_size": "1",
                "icon_code": null
            },
            "children": [
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "schelements.BaseObject",
                        "name": "DocDef",
                        "verbose_name": "Document definition",
                        "verbose_name_plural": "Documents definitions",
                        "metaclass_code": "permissions = [\n    (\"admin_repdef\", \"Can administer report definitions\"),\n]\n",
                        "table_code": "def __str__(self):\n    return self.name\n\ndef getsubdoc(self, name):\n    return DocDef.objects.get(name = self.name + \"/\" + name)\n    \n@staticmethod    \ndef get_doc_defs():\n    docdef_list = DocDef.objects.exclude(name__contains='/')\n    return docdef_list\n\ndef can_user_add(self, user):\n    if self.doc_type:\n        return DocHead.can_add(self.doc_type, user)\n    else:\n        return True\n\ndef copy_to_clipboard(self):\n    return { \n        'action': 'paste_from_clipboard',\n        'table': 'DocDef',\n        'objects': [\n            {   'app': self.app,\n                'name': self.name,\n                'description': self.description,\n                'declaration': self.declaration,\n                'template_src': self.template_src,\n                'template': self.template,\n                'to_html_rec': self.to_html_rec,\n                'save_fun': self.save_fun,\n                'load_fun': self.load_fun,\n                'to_str_fun': self.to_str_fun,\n                'action_template': self.action_template,\n                'info_template': self.info_template,\n                'doc_type': self.doc_type,\n            },\n        ]\n    }\n\n@classmethod\ndef table_action(cls, list_view, request, data):\n    if 'action' in data and data[\"action\"] == \"paste_from_clipboard\" and 'table' in data and data['table'] == 'DocDef':\n        object_list = data['objects']\n        for obj_param in object_list:\n            obj = DocDef()\n            obj.app = obj_param['app']\n            obj.name = \"COPY: \" + obj_param['name']\n            obj.description = obj_param['description']\n            obj.declaration = obj_param['declaration']\n            obj.template_src = obj_param['template_src']\n            obj.template = obj_param['template']\n            obj.to_html_rec = obj_param['to_html_rec']\n            obj.save_fun = obj_param['save_fun']\n            obj.load_fun = obj_param['load_fun']\n            obj.to_str_fun = obj_param['to_str_fun']\n            obj.action_template = obj_param['action_template']\n            obj.unfo_template = obj_param['info_template']\n            obj.doc_type = obj_param['doc_type']\n            obj.save()\n        print(\"PASTE: \", data)\n        return True\n    return standard_table_action(cls, list_view, request, data, [\"copy\", \"paste\"])\n",
                        "ordering": "['id']",
                        "doc": "Declaration:\n    return Form()\n\nTemplate: django template\n\nchild(name):\n    child_header(name)\n    child_table(name)\n    \n    <html></html>\n\n\n\nto_html:\n    convert form data to html\n    \n",
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "doc_type",
                                "description": "Associated document type",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=16",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "JSONModel",
                        "name": "Doc",
                        "verbose_name": "Document",
                        "verbose_name_plural": "Documents",
                        "metaclass_code": "ordering = ['parent_id', 'order', 'id']\n\npermissions = [\n    (\"admin_report\", \"Can administer reports\"),\n]\n",
                        "table_code": "def __str__(self):\n    return self.doc_def_name\n\ndef template_for_object(self, view, context, doc_type):\n    if doc_type=='pdf':\n        x = DocDef.objects.filter(name=self.doc_def_name)\n        if x.count()>0:\n            return \"%s/document_%s_pdf.html\" % (x[0].app, self.doc_def_name)\n    return None\n\n@staticmethod    \ndef get_doc_types():\n    docdef_list = DocDef.objects.exclude(name__contains='/')\n    return [pos.name for pos in docdef_list]\n\n\n@staticmethod    \ndef get_doc_by_nagid(nagid):\n    r = Doc.objects.filter(parent_doc__id=nagid)\n    if r.count()>0:\n        return r[0]\n    else:\n        return None\n\n\n@classmethod\ndef filter(cls, value, view=None, request=None):\n    if value == 'main_documents':\n        return Doc.objects.filter(parent=None)\n    else:\n        return Doc.objects.all()\n\ndef getsubdocs(self, name):\n    return Doc.objects.filter(parent=self).filter(doc_def_name__endswith=name)\n        \ndef to_html(self):\n    doc_def = DocDef.objects.get(name = self.doc_def_name)\n    return doc_def.to_html(self)\n\n#def  __getattr__(self, name):    \n#    if name.startswith('json_'):\n#        if not hasattr(self, '_data'):\n#            self._data = json_loads(self.data)\n#        if name[5:] in self._data:\n#            return self._data[name[5:]]\n#        else:\n#            return None\n#    else:\n#        return super().__getattr__(name)\n\ndef save(self, *args, **kwargs):\n    if self.pk is None:\n        if self.parent:\n            m = Doc.objects.filter(parent=self.parent).aggregate(Max('order'))['order__max']\n            if m:\n                self.order = m + 1\n            else:\n                self.order = 1        \n    super().save(*args, **kwargs)\n\n\n\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "'self'",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent_doc",
                                "description": "Parent document",
                                "type": "PtigForeignKey",
                                "null": true,
                                "blank": true,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "schelements.DocHead",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "order",
                                "description": "Order number",
                                "type": "IntegerField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "doc_def_name",
                                "description": "Document definition name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=64",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "date",
                                "description": "Date",
                                "type": "DateTimeField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "new_doc",
                        "view_type": "u",
                        "param": "doc_type,  doc_type_name",
                        "url": "new_doc/(?P<doc_type>\\w+)/(?P<doc_type_name>\\w+)/$",
                        "view_code": "#new_doc/(?P<doc_type>\\w+)/(?P<doc_type_name>\\w+)/$\ndochead_type = DocType.objects.filter(name=doc_type_name)\nif len(dochead_type)==1:\n    doc = DocHead()\n    doc.doc_type_parent = dochead_type[0]\n    doc.date = timezone.now()\n    doc.status = 'edit'\n    doc.operator = request.user.username\n    doc.save()\n    \n    doc2 = models.Doc()\n    doc2.parent = None\n    doc2.order = 0\n    doc2.parent_doc = doc\n    doc2.doc_def_name = doc_type\n    doc2.date = timezone.now()\n    doc2.save()\n    url = make_href(\"/schdoc/table/Doc/%d/edit__doc/\" % doc2.id)\n    return HttpResponseRedirect(url)\nelse:\n    return HttpResponse(\"Error - document type: %s doesn't exists\" % doc_type_name)\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "edit__doc",
                        "view_type": "u",
                        "param": "doc_id, doc=None",
                        "url": "table/Doc/(?P<doc_id>\\d+)/edit__doc/$",
                        "view_code": "if doc==None:\n    doc = models.Doc.objects.get(pk=doc_id)\ndoc_def = models.DocDef.objects.get(name=doc.doc_def_name)\n\nif doc_def.declaration:\n    form_class = form_from_str(doc_def.declaration)\nelse:\n    return \"ERROR\"\n\nif request.POST or request.FILES:\n    if request.method == \"POST\":\n        form = form_class(request.POST, request.FILES)\n        if form.is_valid():\n            data = run_code_from_db_field(\n                f\"docdef__save_fun_{doc_def.pk}.py\",\n                doc_def,\n                \"save_fun\",\n                \"save\",\n                form=form,\n                obj=doc,\n            )\n            if data == None:\n                data=form.cleaned_data\n            \n            if data != None:\n                doc.jsondata = data\n                doc.save()\n                url = make_path(\"ok\")\n                return HttpResponseRedirect(url)\n\nif not request.POST:\n    data = doc.get_json_data()\n\n    data_form = run_code_from_db_field(\n        f\"docdef__load_fun_{doc_def.pk}.py\",\n        doc_def,\n        \"load_fun\",\n        \"load\",\n        data=data\n    )\n    \n    if data_form == None:\n        data_form = data\n        \n    form = form_class(initial=data_form)\n\n#t = Template(ihtml_to_html(None, doc_def.template))\nt = Template(doc_def.template)\nc = RequestContext(request, {\"form\": form, \"doc\": doc, \"doc_def\": doc_def})\n\nreturn HttpResponse(t.render(c))\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "new_subdoc",
                        "view_type": "u",
                        "param": "parent_doc_id, doc_type",
                        "url": "new_subdoc/(?P<parent_doc_id>\\d+)/(?P<doc_type>\\w+)/$",
                        "view_code": "doc_parent = models.Doc.objects.get(pk=parent_doc_id)\ndoc = models.Doc()\ndoc.parent = doc_parent\ndoc.order = 0\ndoc.doc_def_name = doc_parent.doc_def_name + \"/\" + doc_type\ndoc.date = timezone.now()\nreturn edit__doc(request, 0, doc)\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "edit_subdoc",
                        "view_type": "u",
                        "param": "parent_doc_id, doc_type,view_type",
                        "url": "edit_subdoc/(?P<parent_doc_id>\\d+)/(?P<doc_type>\\w+)/(?P<view_type>\\w+)/$",
                        "view_code": "parent_doc = models.Doc.objects.get(pk=parent_doc_id)\nparent_doc_def = models.DocDef.objects.get(name=parent_doc.doc_def_name)\ndoc_def = parent_doc_def.getsubdoc(doc_type)\nsubdocs = parent_doc.getsubdocs(doc_type)\n\ncdict = {}    \ncdict['parent_doc'] = parent_doc\ncdict['parent_doc_def'] = parent_doc_def\ncdict['doc_type'] = doc_type\ncdict['view_type'] = view_type\ncdict['documents']= parent_doc.getsubdocs(doc_type)\ncdict['doc_def'] = doc_def\n\ntxt = ihtml_to_html(None, doc_def.to_html_rec)\nt = Template(txt)\nc = RequestContext(request,cdict)\n\nreturn HttpResponse(t.render(c))\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "move_up",
                        "view_type": "r",
                        "param": "pk",
                        "url": "Doc",
                        "view_code": "return move_doc(request, pk, \"-1\")\n",
                        "url_params": null,
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "move_down",
                        "view_type": "r",
                        "param": "pk",
                        "url": "Doc",
                        "view_code": "return move_doc(request, pk, \"+1\")",
                        "url_params": null,
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "edit__doc2",
                        "view_type": "u",
                        "param": "dochead_id",
                        "url": "table/Doc/(?P<dochead_id>\\d+)/edit__doc2/$",
                        "view_code": "docs = models.Doc.objects.filter(parent_doc__id=dochead_id)\nif docs.count()>0:\n    new_url = make_href(\"/schdoc/table/Doc/%d/edit__doc/\" % docs[0].id)\n    return HttpResponseRedirect(new_url)\nelse:\n    return HttpResponse(\"Error - document doesn't exist\")\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "repaction",
                        "view_type": "u",
                        "param": "dochead_id, doc_action",
                        "url": "table/Doc/(?P<dochead_id>\\d+)/repaction/(?P<doc_action>\\w+)/$",
                        "view_code": "doc = DocHead.objects.get(pk=dochead_id)\ndocs = models.Doc.objects.filter(parent_doc=doc)\nif docs.count()>0:\n    url = make_href(\"/schdoc/table/Doc/%d/%s/\" % (docs[0].id, doc_action.replace('__','/')))\n    return HttpResponseRedirect(url)\nelse:\n    return HttpResponse(\"Error - document: %d doesn't exists\" % dochead_id)\n    \n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChView",
                    "attributes": {
                        "name": "move_to",
                        "view_type": "u",
                        "param": "doc_id, to_pos",
                        "url": "table/Doc/(?P<doc_id>\\d+)/(?P<to_pos>\\d+)/action/move_to/$",
                        "view_code": "return move_doc(request, doc_id, int(to_pos))\n\n",
                        "url_params": "{}",
                        "ret_type": "U",
                        "asynchronous": false,
                        "extra_code": null,
                        "doc": null
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "DocDef",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    % with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New document definition\"\n    ptig-paste href=../table_action/\n    \n%% list_row_header\n    th..._(name)\n    th..._(description)\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/declaration,Declaration,declaration\n        .field_edit/template_src,Template src,template_src \n        .field_edit/template,Template,template\n        .field_edit/to_html_rec,To html row,to_html_rec\n        .field_edit/save_fun,Save function,save_fun\n        .field_edit/load_fun,Load function,load_fun\n        .delete\n\n%% row_edit\n    % form:\n        .app,name,description,doc_type\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Doc",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    % with table_type='simple':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions    \n    div class=tr d-inline\n        _(New): \n        % for pos in object_list.model.get_doc_types:        \n            % new_row_inline pos \"\" \"\" \"\" \"\" \"{{base_path}}schdoc/new_doc/\"|append_str:pos|append_str:\"/0/?after_close=refresh\" \n\n%% list_row_header\n    th..._(Report type)\n    th..._(Date)\n\n%% list_row\n    td...{{object.doc_def_name}}\n    td...{{object.date|isoformat}}\n\n%% list_row_actions\n    % row_actions:\n        .edit-inline,_(Update),,,,,{{base_path}}schdoc/table/Doc/{id}/edit__doc/        \n        .pdf\n        .odf        \n        .field_edit/data,Data,data        \n        .delete\n        \n%% row_edit\n    % form:\n        \"parent\", \"parent_field_name\", \"order\", \"doc_def_name\", \"date\"\n\n%% dialog_type\n    .modal-max\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "subdoc",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% load exfiltry\n% load exsyntax\n    \n% subform href\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "v_edit_subdoc",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% load exfiltry\n% load exsyntax\n\ndiv class=form-group\n    %% header_new_button\n        div class=row\n            div class=tr d-inline\n                % new_row \"+ \"|append_str:doc_def.description \"\" \"\" \"\" \"-\" \"{{base_path}}schdoc/new_subdoc/\"|append_str:parent_doc.id|append_str:\"/\"|append_str:doc_type|append_str:\"/\"            \n    \n    div class=row\n        %% header\n        \n        % for object in documents:\n            div class={% block subdoc_item_width %}col-1{% endblock %},,,style=position:relative;display:inline-block;\n                %% doc_line\n                div class=fab,,,style=transform:scale(0.5); -webkit-transform:scale(0.5); -moz-transform:scale(0.5); -o-transform:scale(0.5); margin-left: -40px;\n                    nav class=menu\n                        input type=checkbox,,,href=#,,,class=menu-open,,,name=menu-open,,,id=menu-open-subdoc-{{forloop.counter0}}\n                        label class=menu-open-button,,,for=menu-open-subdoc-{{forloop.counter0}},,,draggable=true,,,ondrop=subdoc_drop(event,'{{base_path}}');,,,ondragstart=subdoc_dragstart(event);,,,ondragenter=subdoc_ondragenter(event);,,,ondragleave=subdoc_ondragleave(event);,,,ondragover=subdoc_ondragover(event);,,,name={{object.id}}\n                            h4...{{forloop.counter}}\n                            span class=fa fa-bars fa-3x\n                            \n                        a class=menu-item,,,data-inline=,,,true,,,href={{base_path}}schdoc/table/Doc/{{object.id}}/action/move_up/,,,name=move_up,,,title=Move up,,,target=refresh_frame\n                            i class=fa fa-hand-o-left fa-2x\n\n                        a class=menu-item bg-primary popup,,,href={{base_path}}schdoc/table/Doc/{{object.id}}/edit__doc/,,,name=update/inline,,,title=update,,,target=popup_edit\n                            i class=fa fa-pencil-square-o fa-2x\n                            \n                        a class=menu-item bg-danger popup,,,href={{base_path}}schdoc/table/Doc/{{object.id}}/delete/,,,name=delete,,,title=delete,,,target=popup_delete\n                            i class=fa fa-trash-o fa-2x\n                                                                                            \n                        a class=menu-item,,,data-inline=true,,,href={{base_path}}schdoc/table/Doc/{{object.id}}/action/move_down/,,,name=move_down,,,title=Move down,,,target=refresh_frame\n                            i class=fa fa-hand-o-right fa-2x\n        %% footer\n        \n    %% footer_new_button\n        div class=row\n            div class=tr d-inline new-subdoc\n                % new_row \"+ \"|append_str:doc_def.description \"\" \"\" \"\" \"-\" \"{{base_path}}schdoc/new_subdoc/\"|append_str:parent_doc.id|append_str:\"/\"|append_str:doc_type|append_str:\"/\"            \n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Form_FilterFormDoc",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='<<form_title>>'\n        {{ block.super }}\n\n\n%% user_header\n    th...<<col_name1>>\n    th...<<col_name2>>\n    th...<<col_name3>>\n\n\n%% user_row\n    tr\n        td... {{object.0}}\n        td align=right... {{object.1|floatnullformat}}\n        td align=right... {{object.2|to_int}}\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "check",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% if is_checked:\n    img class=checkbox,,,src=/static/fonts/fork-awesome/fonts/32x32/check.png\n% else:\n    img class=checkbox,,,src=/static/fonts/fork-awesome/fonts/32x32/square-o.png\n&nbsp;&nbsp;{{title|safe}}\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Document definition",
                        "url": "table/DocDef/-/form/list/",
                        "url_type": "desktop",
                        "perms": "schdoc.admin_docdef",
                        "icon": "client://actions/document-properties.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Documents",
                        "url": "table/Doc/main_docs/form/list/",
                        "url_type": "desktop",
                        "perms": "schdoc.admin_doc",
                        "icon": "client://actions/format-justify-fill.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChForm",
                    "attributes": {
                        "name": "_FilterFormDoc",
                        "module": null,
                        "process_code": "return queryset",
                        "end_class_code": "",
                        "end_code": "",
                        "asynchronous": false,
                        "doc": ""
                    },
                    "children": [
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "date_from",
                                "type": "DateField",
                                "required": false,
                                "label": "Date from",
                                "initial": "year_ago",
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": null
                            }
                        },
                        {
                            "model": "SChFormField",
                            "attributes": {
                                "name": "date_to",
                                "type": "DateField",
                                "required": false,
                                "label": "Date to",
                                "initial": null,
                                "widget": null,
                                "help_text": null,
                                "error_messages": null,
                                "param": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChFile",
                    "attributes": {
                        "type": "t",
                        "name": "subdoc",
                        "content": "from base64 import b64encode\nimport io\nimport re\nimport itertools\nimport html\n\nfrom django import template\nfrom django.utils.translation import gettext_lazy as _\nfrom django.template.loader import get_template\nfrom django.template import Context, Template, RequestContext\nfrom django.conf import settings\nfrom django.utils.safestring import mark_safe\nfrom django.forms.widgets import CheckboxSelectMultiple\nfrom django.template.base import token_kwargs, TemplateSyntaxError\nfrom django.template.base import Node\n\nfrom pytigon_lib.schhtml.parser import Parser\nfrom pytigon_lib.schtools.wiki import wiki_from_str\nfrom pytigon_lib.schdjangoext.tools import make_href\n\nregister = template.Library()\n\ndef inclusion_tag(file_name):\n    def dec(func):\n        def func2(context, *argi, **argv):\n            ret = func(context, *argi, **argv)\n            t = get_template(file_name)\n            return t.render(ret, context.request)\n        return register.simple_tag(takes_context=True, name=getattr(func, '_decorated_function', func).__name__)(func2)\n    return dec\n\n@inclusion_tag('schdoc/subdoc.html')\ndef subdoc(context, name, type):\n    doc = context['doc']\n    doc_def = context['doc_def']\n    url = make_href(\"/schdoc/edit_subdoc/%d/%s/%s/\" % (doc.id, name, type))\n    return { 'href':  url }\n\n@inclusion_tag('schdoc/check.html')\ndef check(context, is_checked, title=\"\"):\n    return { 'is_checked':  is_checked, 'title': title }\n",
                        "doc": null
                    }
                },
                {
                    "model": "SChFile",
                    "attributes": {
                        "type": "P",
                        "name": "subdoc",
                        "content": "def subdoc_dragstart(ev):\n    ev.dataTransfer.setData(\"text\", ev.target.getAttribute(\"name\"))                        \n\nwindow.subdoc_dragstart = subdoc_dragstart\n\ndef subdoc_drop(ev, base_path):\n    ev.preventDefault()\n    if ev.target.tagName == 'LABEL':\n        target=ev.target\n    else:\n        target=ev.target.parentElement\n    \n    data = ev.dataTransfer.getData(\"text\")\n    data2 = target.getAttribute(\"name\")\n    if data2 != data:\n        href = base_path + 'schdoc/table/Doc/'+data+'/'+data2+'/action/move_to/'\n        def _callback(data):\n            window.refresh_ajax_frame(target)\n        window.ajax_get(href,_callback)\n        #ajax_get(href,standard_on_data(jQuery(target), href))\n\nwindow.subdoc_drop = subdoc_drop\n\ndef subdoc_ondragenter(ev):\n    if ev.target.tagName == 'LABEL':\n        jQuery(ev.target).addClass('bg-success')\n\nwindow.subdoc_ondragenter = subdoc_ondragenter\n\ndef subdoc_ondragleave(ev):\n    if ev.target.tagName == 'LABEL':\n        jQuery(ev.target).removeClass('bg-success')\n\nwindow.subdoc_ondragleave = subdoc_ondragleave\n\ndef subdoc_ondragover(ev):\n    if ev.target.tagName == 'LABEL':\n        ev.preventDefault()\n    \nwindow.subdoc_ondragover = subdoc_ondragover\n",
                        "doc": null
                    }
                }
            ]
        },
        {
            "model": "SChApp",
            "attributes": {
                "jsondata": null,
                "name": "schlabels",
                "title": "Labels",
                "module_name": "config",
                "module_title": "Config",
                "perms": true,
                "index": null,
                "model_code": null,
                "view_code": null,
                "urls_code": null,
                "tasks_code": "",
                "consumer_code": "",
                "doc": null,
                "user_param": "",
                "icon": "None",
                "icon_size": "1",
                "icon_code": null
            },
            "children": [
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "LabelType",
                        "verbose_name": "Label type",
                        "verbose_name_plural": "Label types",
                        "metaclass_code": null,
                        "table_code": null,
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "name",
                                "description": "Name",
                                "type": "CharField",
                                "null": false,
                                "blank": false,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "title",
                                "description": "Title",
                                "type": "CharField",
                                "null": true,
                                "blank": true,
                                "editable": true,
                                "unique": false,
                                "db_index": false,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": null,
                                "param": "max_length=256",
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "ElementLabel",
                        "verbose_name": "Element label",
                        "verbose_name_plural": "Element labels",
                        "metaclass_code": null,
                        "table_code": "@staticmethod\ndef set_label(element, label_type_name):\n    label_type = LabelType.objects.filter(name=label_type_name).first()\n    if label_type:\n        if not ElementLabel.objects.filter(parent=element, type=label_type).exists():\n            obj = ElementLabel()\n            obj.parent = element\n            obj.type = label_type\n            obj.save()\n\n\n@staticmethod\ndef remove_label(element, label_type_name):\n    ElementLabel.objects.filter(parent=element, type__name=label_type_name).delete()\n\n@staticmethod\ndef has_label(element, label_type_name):\n    return element.elementlabel_set.filter(type__name=label_type_name).exists()\n\n@staticmethod\ndef objects_with_label(label_type_name):\n    return schelements.models.Element.objects.filter(\n        elementlabel_set__type__name=label_type_name\n    )\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Parent",
                                "type": "PtigForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "schelements.Element",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "type",
                                "description": "Type",
                                "type": "PtigForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "LabelType",
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": null,
                        "name": "CommonGroupLabel",
                        "verbose_name": "Common group label",
                        "verbose_name_plural": "Common groups labels",
                        "metaclass_code": null,
                        "table_code": "@staticmethod\ndef set_label(group, label_type_name):\n    label_type = LabelType.objects.filter(name=label_type_name).first()\n    if not CommonGroupLabel.objects.filter(parent=group, type=label_type).exists():\n        obj = CommonGroupLabel()\n        obj.parent = group\n        obj.type = label_type\n        obj.save()\n\n\n@staticmethod\ndef remove_label(group, label_type_name):\n    CommonGroupLabel.objects.filter(parent=group, type__name=label_type_name).delete()\n\n@staticmethod\ndef has_label(group, label_type_name):\n    return group.commongrouplabel_set.filter(type__name=label_type_name).exists()\n\n@staticmethod\ndef objects_with_label(label_type_name):\n    return schstruct.models.CommonGroup.objects.filter(\n        commongrouplabel_set__type__name=label_type_name\n    )\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "parent",
                                "description": "Group",
                                "type": "PtigForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "schstruct.CommonGroup",
                                "param": null,
                                "url_params": null
                            }
                        },
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "type",
                                "description": "Type",
                                "type": "PtigForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "LabelType",
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTable",
                    "attributes": {
                        "base_table": "AssociatedModel",
                        "name": "Label",
                        "verbose_name": "Label",
                        "verbose_name_plural": "Labels",
                        "metaclass_code": null,
                        "table_code": "@staticmethod\ndef set_label(application, table, group, id, label_type_name):\n    label_type = LabelType.objects.filter(name=label_type_name).first()\n    if label_type:\n        if not Label.objects.filter(application=application, table=table, group=group, parent_id=id, type=label_type).exists():\n            obj = Label()\n            obj.application = application\n            obj.table = table\n            obj.group = group\n            obj.parent_id = id\n            obj.type = label_type\n            obj.save()\n\n@staticmethod\ndef remove_label(application, table, group, id, label_type_name):\n    Label.objects.filter(application=application, table=table, group=group, parent_id=id, type__name=label_type_name).delete()\n\n@staticmethod\ndef has_label(application, table, group, id, label_type_name):\n    return Label.objects.filter(application=application, table=table, group=group, parent_id=id, type__name=label_type_name).exists()\n\n@staticmethod\ndef objects_with_label(application, table, group, label_type_name):\n    object_list = Label.objects.filter(application=application, table=table, group=group, type__name=label_type_name)\n    return (obj.parent_id for obj in object_list)\n",
                        "ordering": "['id']",
                        "doc": null,
                        "generic": true,
                        "url_params": null,
                        "proxy_model": null
                    },
                    "children": [
                        {
                            "model": "SChField",
                            "attributes": {
                                "name": "type",
                                "description": "Type",
                                "type": "PtigForeignKey",
                                "null": false,
                                "blank": false,
                                "editable": false,
                                "unique": false,
                                "db_index": true,
                                "default": null,
                                "help_text": null,
                                "choices": null,
                                "rel_to": "LabelType",
                                "param": null,
                                "url_params": null
                            }
                        }
                    ]
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "LabelType",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    % with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"_(New label type)\"\n\n%% list_row_header\n    th..._(Name)\n    th..._(Title)\n    \n\n%% list_row\n    td...{{ object.name }}\n    td...{{ object.title }}\n    \n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n%% row_edit\n    % form:\n        .name,title\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "Label",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    % with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n\n%% list_row_header\n    th..._(Item)\n    th..._(Type)\n    \n\n%% list_row\n    td...{{ object.parent }}\n    td...{{ object.type.name }}\n    \n\n%% list_row_actions\n    % row_actions:\n        .delete\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "ElementLabel",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    % with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n\n%% list_row_header\n    th..._(Element)\n    th..._(Type)\n    \n\n%% list_row\n    td...{{ object.parent.name }}\n    td...{{ object.type.name }}\n    \n\n%% list_row_actions\n    % row_actions:\n        .delete\n\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChTemplate",
                    "attributes": {
                        "name": "CommonGroupLabel",
                        "direct_to_template": null,
                        "url": null,
                        "url_parm": null,
                        "template_code": "% extends \"forms/form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    % with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n\n%% list_row_header\n    th..._(Group)\n    th..._(Type)\n    \n\n%% list_row\n    td...{{ object.parent.name }}\n    td...{{ object.type.name }}\n    \n\n%% list_row_actions\n    % row_actions:\n        .delete\n",
                        "tags_mount": null,
                        "asynchronous": false
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Label types",
                        "url": "table/LabelType/-/form/list/",
                        "url_type": "-",
                        "perms": null,
                        "icon": "png://actions/tab-new.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Labels",
                        "url": "table/Label/-/form/list/",
                        "url_type": "-",
                        "perms": null,
                        "icon": "png://actions/tab-new.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Element labels",
                        "url": "table/ElementLabel/-/form/list/",
                        "url_type": "-",
                        "perms": null,
                        "icon": "png://actions/tab-new.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                },
                {
                    "model": "SChAppMenu",
                    "attributes": {
                        "name": "Groups labels",
                        "url": "table/CommonGroupLabel/-/form/list/",
                        "url_type": "-",
                        "perms": null,
                        "icon": "png://actions/tab-new.png",
                        "icon_size": "1",
                        "icon_code": null
                    }
                }
            ]
        },
        {
            "model": "SChLocale",
            "attributes": {
                "name": "pl"
            },
            "children": [
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Config",
                        "translation": "Ustawienia",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Nested documents",
                        "translation": "Dokumenty zagnie\u017cd\u017cone",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document definition",
                        "translation": "Definicja dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Documents",
                        "translation": "Dokumenty",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Documents definitions",
                        "translation": "Definicje dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document",
                        "translation": "Dokument",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Elements",
                        "translation": "Elementy",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Documents register",
                        "translation": "Rejestr dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Types of documents",
                        "translation": "Typy dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Definition of document status",
                        "translation": "Definicja status\u00f3w dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Accounts",
                        "translation": "Konta",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "States of accounts",
                        "translation": "Stany kont",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Account operations",
                        "translation": "Operacje na kontach",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Element",
                        "translation": "Element",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document register",
                        "translation": "Rejestr dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document registers",
                        "translation": "Rejestry dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Type of document",
                        "translation": "Typ dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document header",
                        "translation": "Nag\u0142\u00f3wek dokuementu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document headers",
                        "translation": "Nag\u0142\u00f3wki dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document item",
                        "translation": "Pozycja dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document items",
                        "translation": "Pozycje dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document status",
                        "translation": "Status dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document head status",
                        "translation": "Status nag\u0142\u00f3wka dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Documents head status",
                        "translation": "Statusy nag\u0142\u00f3wk\u00f3w dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Account",
                        "translation": "Konto",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "State of account",
                        "translation": "Stan konta",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "States of account",
                        "translation": "Stany kont",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Account operation",
                        "translation": "Operacja na koncie",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Base object",
                        "translation": "Obiekt bazowy",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Base objects",
                        "translation": "Obiekty bazowe",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Date from",
                        "translation": "Data od",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Data to",
                        "translation": "Data do",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Target",
                        "translation": "Cel",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Number",
                        "translation": "Numer",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Period",
                        "translation": "Okres",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Not null",
                        "translation": "Nie null",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Not empty",
                        "translation": "Nie pusty",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Analytical",
                        "translation": "Analityczne",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Profiles",
                        "translation": "Profile",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Profile",
                        "translation": "Profil",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "User",
                        "translation": "U\u017cytkownik",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Users",
                        "translation": "U\u017cytkownicy",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Structures",
                        "translation": "Struktury",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common group definitons",
                        "translation": "Definicje grup uniwersalnych",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common groups",
                        "translation": "Grupy uniwersalne",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common group definition",
                        "translation": "Definicja grupy uniwersalnej",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common groups definition",
                        "translation": "Definicje grup uniwersalnych",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common group",
                        "translation": "Grupa uniwersalna",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common Groups",
                        "translation": "Grupy uniwersalne",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New",
                        "translation": "Nowy",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Update",
                        "translation": "Popraw",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "name",
                        "translation": "nazwa",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "description",
                        "translation": "opis",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Report type",
                        "translation": "Typ raportu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Date",
                        "translation": "Data",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "group",
                        "translation": "grupa",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "permission",
                        "translation": "uprawnienie",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Owner",
                        "translation": "W\u0142a\u015bciciel",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "User type",
                        "translation": "Typ u\u017cytkownika",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Allowed document registers",
                        "translation": "Dost\u0119pne rejestry dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Allowed document types",
                        "translation": "Dost\u0119pne typy dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Allowed accounts",
                        "translation": "Dost\u0119pne konta",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New account operation",
                        "translation": "Nowa operacja na koncie",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Description",
                        "translation": "Opis",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Payment",
                        "translation": "P\u0142atno\u015b\u0107",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Account state",
                        "translation": "Stan konta",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Sign",
                        "translation": "Znak",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Amount",
                        "translation": "Kwota",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Subcode",
                        "translation": "Subkod",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Account name",
                        "translation": "Nazwa konta",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "debit",
                        "translation": "Debet",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "credit",
                        "translation": "Kredyt",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "element",
                        "translation": "element",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "classifier1value",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "classifier2value",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "classifier3value",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Name",
                        "translation": "Nazwa",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Operator",
                        "translation": "Operator",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Type 1",
                        "translation": "Typ 1",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Type 2",
                        "translation": "Typ 2",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Classifier 1",
                        "translation": "Klasyfikator 1",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Classifier 2",
                        "translation": "Klasyfikator 2",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Classifier 3",
                        "translation": "Klasyfikator 3",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Classifier",
                        "translation": "Klasyfikator",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Are you sure you want to accept the document",
                        "translation": "Czy jeste\u015b pewien, \u017ce chcesz zaakceptowa\u0107 dokument",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "You accept the status",
                        "translation": "Akceptujesz status",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Document type",
                        "translation": "Typ dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Correction",
                        "translation": "Korekta",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Are you sure you want to discard the document",
                        "translation": "Czy jeste\u015b pewien, \u017ce chcesz odrzuci\u0107 dokument",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "You discard the status",
                        "translation": "Odrzucasz status",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New document register",
                        "translation": "Nowy rejestr dokument\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New document:",
                        "translation": "Nowy dokument",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Register",
                        "translation": "Rejestr",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Status",
                        "translation": "Status",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Back to status:",
                        "translation": "Przywr\u00f3\u0107 status",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Discard status:",
                        "translation": "Odrzu\u0107 status",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New element",
                        "translation": "Nowy element",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Type",
                        "translation": "Typ",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Code",
                        "translation": "Kod",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New status",
                        "translation": "Nowy status",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Order",
                        "translation": "Kolejno\u015b\u0107",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New document item",
                        "translation": "Nowa pozycja dokumentu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "order",
                        "translation": "kolejno\u015b\u0107",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "amount",
                        "translation": "kwota",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "level",
                        "translation": "poziom",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Application",
                        "translation": "Aplikacja",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Declaration",
                        "translation": "Deklaracja",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Template source",
                        "translation": "\u0179r\u00f3d\u0142o szablonu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Template",
                        "translation": "Szablon",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Convert fields to html",
                        "translation": "Konwertuj pola do html",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Save function",
                        "translation": "Funkcja zapisu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Load function",
                        "translation": "Funkcja wczytania",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Object to str function",
                        "translation": "Funkcja konwersji obj do str",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Action template",
                        "translation": "Szablon akcji",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Info template",
                        "translation": "Szablon informacji",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Name of payment",
                        "translation": "Nazwa p\u0142atno\u015bci",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Quantity",
                        "translation": "Ilo\u015b\u0107",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Refresh account states",
                        "translation": "Od\u015bwie\u017c stany kont",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "balance",
                        "translation": "bilans",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "item",
                        "translation": "pozycja",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "quantity",
                        "translation": "ilo\u015b\u0107",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Labels",
                        "translation": "Etykiety",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Label types",
                        "translation": "Typy etykiet",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Element labels",
                        "translation": "Etykiety element\u00f3w",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Groups labels",
                        "translation": "Etykiety grup",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Label type",
                        "translation": "Typ etykiety",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Element label",
                        "translation": "Etykieta elementu",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common group label",
                        "translation": "Etykieta grupy",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Common groups labels",
                        "translation": "Etykiety grup",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Label",
                        "translation": "Etykieta",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "New label type",
                        "translation": "Nowy typ etykiety",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Title",
                        "translation": "Tytu\u0142",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Group",
                        "translation": "Grupa",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Item",
                        "translation": "Pozycja",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Date to",
                        "translation": "Data do",
                        "status": "OK"
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Data",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Data od",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Data do",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Data structures",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Reports",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Report definition",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Plots",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Reports definitions",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Report",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Plot",
                        "translation": "",
                        "status": ""
                    }
                },
                {
                    "model": "SChTranslate",
                    "attributes": {
                        "description": "Polts",
                        "translation": "",
                        "status": ""
                    }
                }
            ]
        }
    ]
}