[
    {
        "app_main": "test,test,test",
        "autor_email": "slawomir.cholaj@gmail.com",
        "autor_name": "S\u0142awomir Cho\u0142aj",
        "autor_www": "https://pytigon.cloud/",
        "custom_tags": "schcomponents/components/ptig-d3.js\nschcomponents/components/ptig-leaflet.js\nschcomponents/components/ptig-video.js\nschcomponents/components/ptig-spreadsheet.js\nschcomponents/components/ptig-pivottable.js\nschcomponents/components/ptig-plotly.js\nschcomponents/components/ptig-codeeditor.js",
        "desktop_gui_type": "tablet_modern",
        "doc": "Locale\n    Locales:\n        New locale\n            add 2 letters locale code\n            ",
        "encoded_zip": "",
        "ext_apps": "_schtools.schauth,schcomponents.standard_components,_schtools.schcommander,_schtools.schtools,_schtools.schtasks,_schtools.schsimplescripts",
        "git_repository": "https://git.pytigon.cloud/pytigon/schdevtools.git",
        "gui_elements": "toolbar(file(open,exit),clipboard)",
        "gui_type": "modern",
        "icon": "None",
        "icon_code": null,
        "icon_size": "1",
        "install_file": "PIP=\nGUI_COMMAND=\"--embededtaskqueue\"\nANDROID_WEB=1\nANDROID_WEB_PORT=8000\nANDROID_WEB_HOST=\"0.0.0.0\"\nANDROID_WEB_HREF=\"127.0.0.1:8000\"\nANDROID_KIVY=1\nSHORTCUT_DESKTOP=1\nSHORTCUT_MENU=1\nSHORTCUT_ANDROID=1\nSHORTCUT_TITLE=\"DevTools\"\nICON=\"media/app.png\"\n",
        "jsondata": null,
        "license_file": "GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n",
        "login_required": true,
        "main": false,
        "main_view": true,
        "name": "schdevtools",
        "plugins": "standard/keymap;standard/tablefilter;standard/image_viewer;standard/hexview;standard/shell",
        "public": true,
        "readme_file": "PYTIGON\n=======\n\nWhat is it\n----------\n\nPytigon is a combination of several technologies: python, django, \nwxWidgets to create one coherent development environment.\n\nKey capabilities of Pytigon:\n\n- Create an application using popular technologies:\n\n   - Python language\n\n   - django web framework\n\n   - wxWidgets client for desktop program\n\n   - bootstrap based web client\n\n- Run application everywhere:\n\n   - desktop application for: Linux, Windows, OSX,\n\n   - web based client for mobile and desktop devices.\n\n- The strong integration of all components\n   \n   - Python philosophy everywhere: modified django templates based on \n     indentations, embeded python to javascript compiler (Transcrypt)\n   \n   - wxPython widgets integrated with django model fields\n   \n   - django server integrated with wxPython client program\n\n- All in one Pytigon IDE - ide allows you to create program and\n  make instalation program.\n\n\nInstalation\n-----------\n\n1. Windows\n\n   - Download and run instalation program. Instalation program contain\n     python enviroment with all needed libraries.\n   \n2. Linux\n\n   - In the selected folder run command: \n     \n     `git clone https://github.com/Splawik/pytigon.git \n     cd pytigon\n     bash install.sh`\n     \n   - Install wxPython-Phoenix \n     ( `https://wiki.wxpython.org/How to install wxPython`_ )\n     \n\nRun     \n---\n\nrun command in pytigon folder: \n\nWindows:\n   \n   python\\python pytigon.py app_name\n   \nLinux: \n   \n   python/bin/python pytigon.py app_name\n   \nFirst application which you can test is schdevtools - Pytigon ide.\nRun: ...python pytigon.py schdevtools\n     \n",
        "smartfon_gui_type": "smartfon_standard",
        "start_page": null,
        "tablet_gui_type": "tablet_standard",
        "title": "Developer tools",
        "user_app_template": "###> templates_src/template/base.ihtml\n\n%% js_app_init\n    .let db_struct = [ [\"devparam\", {\"keyPath\": \"key\"}] ];\n    .init_db(db_struct);\n    .const devtools_sync = function(run_after) {\n    .    console.log(\"SYNC!\");\n    .    run_after(\"OK\");\n    .}\n    .let sync_struct = [ ['devparam', \"{{base_path}}schdevtools/devparam/\", devtools_sync], ];\n    .init_sync(sync_struct);\n\n    //.function bootstrap_init(elem) {\n    //.    elem.bootstrapMaterialDesign();\n    //.};\n\n    //.register_fragment_init_fun(bootstrap_init);\n\n    {{ block.super }}\n    \n\n%% logo\n    span class=logo-lg\n        img src={{base_path}}static/favicon.ico,,,style=height:100%;\n        span class=txt3d text-white,,,style=font-size:1rem;\n            .Pytigon - dev tools\n\n###> templates_src/template/schweb.ihtml\n\n%% toolbars_start\n    tr\n        td\n        td\n        td...Python shell\n        td...1\n        td...client://apps/utilities-terminal.png\n        td...html\n        td...Terminal,^standard/shell/shell.html?schtml=panel\n\n\n###> settings_app.py\n\nPWA_APP_NAME = 'SCDevTools'\nPWA_APP_DESCRIPTION = \"Pytigon developer tools\"\nPWA_APP_THEME_COLOR = '#0A0302'\nPWA_APP_BACKGROUND_COLOR = '#ffffff'\nPWA_APP_DISPLAY = 'standalone'\nPWA_APP_SCOPE = \"/\"+URL_ROOT_PREFIX\nPWA_APP_ORIENTATION = 'any'\nPWA_APP_START_URL = \"/\"+URL_ROOT_PREFIX\nPWA_APP_STATUS_BAR_COLOR = 'default'\nPWA_APP_DIR = 'ltr'\nPWA_APP_LANG = 'pl-PL'\nPWA_APP_ROOT_URL = \"/\"+URL_ROOT_PREFIX\n\nPWA_APP_ICONS = [\n    {\n        'src': PWA_APP_ROOT_URL+'static/images/pytigon.png',\n        'sizes': '160x160'\n    }\n]\nPWA_APP_ICONS_APPLE = [\n    {\n        'src': PWA_APP_ROOT_URL+'static/images/pytigon.png',\n        'sizes': '160x160'\n    }\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        'src': PWA_APP_ROOT_URL+'static/images/pytigon.png',\n        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'\n    }\n]\n\nPWA_SERVICE_WORKER_PATH = os.path.join(_lp, \"static\", PRJ_NAME, \"sw.js\")\n\nWEBPUSH_SETTINGS = {\n    \"VAPID_PUBLIC_KEY\": \"BC50NYho7GMYXtR2tmVyMZyWWRsQRkyX0cuNU-eLcJ8Bmkijj4rbSbw8Q-oH0-fxuggofrcdxTyehu08IX4x8CM\",\n    \"VAPID_PRIVATE_KEY\": \"ZapnVc3zzzhrM3TPFa_RKFrJ_YymFybgS8F_ZlxAf2I\",\n    \"VAPID_ADMIN_EMAIL\": \"auto@pytigon.cloud\"\n}\n\n\n### env\nPWA=True\n\n\n### templates_src/template/tablet.ihtml\n%extends 'template/tablet_base.html'\n\n%load webpush_notifications\n\n%% extrahead\n    %if standard_web_browser and env.PWA:\n        % include \"schsys/webpush_notifications.html\"\n        % include \"schsys/pwa.html\"\n    {{ block.super }}\n\n%% system_menu\n    % if env.PWA:\n        li class=nav-item\n            a class=nav-link,,,target=null,,,data-toggle=modal,,,data-target=#exampleModal,,,title=_(Notifications)..._(Notifications)\n\n%% drop_down_blocks\n    div class=modal fade,,,id=exampleModal,,,tabindex=-1\n        div class=modal-dialog\n            div class=modal-content\n                div class=modal-header\n                    h5 class=modal-title id=exampleModalLabel...Messaging\n                    button type=button,,,class=close,,,data-dismiss=modal\n                        span...&times;\n                div class=modal-body\n                    % webpush_button with_class=\"btn btn-outline-info\"\n                div class=modal-footer\n                    button type=button,,,class=btn btn-secondary,,,data-dismiss=modal...Close\n\n### templates_src/template/smartfon.ihtml\n%extends 'template/smartfon_base.html'\n\n%load webpush_notifications\n\n%% extrahead\n    %if standard_web_browser and env.PWA:\n        % include \"schsys/webpush_notifications.html\"\n        % include \"schsys/pwa.html\"\n    {{ block.super }}\n\n%% system_menu\n    % if env.PWA:\n        a class=dropdown-item system_menu,,,target=null,,,data-toggle=modal,,,data-target=#exampleModal,,,title=_(Notifications)..._(Notifications)\n\n%% drop_down_blocks\n    div class=modal fade,,,id=exampleModal,,,tabindex=-1\n        div class=modal-dialog\n            div class=modal-content\n                div class=modal-header\n                    h5 class=modal-title id=exampleModalLabel...Messaging\n                    button type=button,,,class=close,,,data-dismiss=modal\n                        span...&times;\n                div class=modal-body\n                    % webpush_button with_class=\"btn btn-outline-info\"\n                div class=modal-footer\n                    button type=button,,,class=btn btn-secondary,,,data-dismiss=modal...Close\n\n### templates_src/template/desktop.ihtml\n%extends 'template/desktop_base.html'\n\n%load webpush_notifications\n\n%% extrahead\n    %if standard_web_browser and env.PWA:\n        % include \"schsys/webpush_notifications.html\"\n        % include \"schsys/pwa.html\"\n    {{ block.super }}\n\n%% system_menu\n    % if env.PWA:\n        li class=nav-item\n            a class=nav-link,,,target=null,,,data-toggle=modal,,,data-target=#exampleModal,,,title=_(Notifications)..._(Notifications)\n\n%% drop_down_blocks\n    div class=modal fade,,,id=exampleModal,,,tabindex=-1\n        div class=modal-dialog\n            div class=modal-content\n                div class=modal-header\n                    h5 class=modal-title id=exampleModalLabel...Messaging\n                    button type=button,,,class=close,,,data-dismiss=modal\n                        span...&times;\n                div class=modal-body\n                    % webpush_button with_class=\"btn btn-outline-info\"\n                div class=modal-footer\n                    button type=button,,,class=btn btn-secondary,,,data-dismiss=modal...Close\n",
        "user_param": "GUI_COMMAND_LINE=\"--no_splash --websocket_id=/schbuilder/clock/channel/\"\nNUMBER_OF_WORKERS=1\nNO_ASGI=True",
        "version": "latest"
    },
    [
        [
            {
                "consumer_code": "import asyncio\nimport psutil",
                "doc": "",
                "icon": "fa://building.png",
                "icon_code": null,
                "icon_size": "1",
                "index": null,
                "jsondata": null,
                "model_code": "import os.path\nfrom pytigon_lib.schhtml.htmltools import superstrip\nimport inspect\nfrom pytigon_lib.schfs.vfstools import norm_path\nfrom django.template import engines\nimport pytigon\nfrom django.conf import settings\nimport django.db.models.fields as fields\nimport django.db.models.fields.related as related\nfrom django.forms import fields as form_fields\nfrom django.forms import models as form_model_fields\nfrom pytigon_lib.schdjangoext import formfields as ext_form_fields\n\nfield_default = {'null':False,'blank':False,'editable':True,}\nfield_defaults = {\n    'AutoField': { },\n    'BooleanField': { \"default\": False },\n    'CharField': {\"param\":\"max_length=64\", \"unique\": False,},\n    'CommaSeparatedIntegerField': {},\n    'DateField': {},\n    'DateTimeField': {},\n    'DecimalField': {},\n    'EmailField': {},\n    'FileField': { \"param\": \"upload_to='upload/'\", },\n    'FilePathField': {},\n    'FloatField': {},\n    'ImageField': {},\n    'IntegerField': {},\n    'GenericIPAddressField': {},\n    'NullBooleanField': {},\n    'PositiveIntegerField': {},\n    'PositiveSmallIntegerField': {},\n    'SlugField': {},\n    'SmallIntegerField': {},\n    'TextField': { 'editable': False, },\n    'TimeField': {},\n    'URLField': {},\n    'XMLField': {},\n    'ForeignKey': { 'name': 'parent', 'description': 'Parent'},\n    'OneToOneField': { 'name': 'parent', 'description': 'Parent'},\n    'ManyToManyField': { },\n    'HiddenForeignKey': { 'name': 'parent', 'description': 'Parent' },\n    'GForeignKey': { 'name': 'parent', 'description': 'Parent' },\n    'GManyToManyField': {},\n    'GHiddenForeignKey': { 'name': 'parent', 'description': 'Parent', },\n}\n\nformfield_default = {'required':True, }\n\nformfield_defaults = {\n    'CharField': { 'param': \"max_length=None, min_length=None\", },\n    'ChoiceField': { 'param': \"choices=models.[[choice_name]]\", },\n    'TypedChoiceField': { 'param': \"coerce=,empty_value=''\", },\n    'DecimalField': { 'param': \"max_value=None, min_value=None, max_digits=None, decimal_places=None\", },\n    'FilePathField': { 'param': \"path=[[path]], match=None, recursive=False, allow_files=True, allow_folders=False\", },\n    'FloatField': { 'param': \"max_value=None, min_value=None\", },\n    'IntegerField': { 'param': \"max_value=None, min_value=None\", },\n    'GenericIPAddressField': { 'param': \"protocol='both', unpack_ipv4=False\", },\n    'MultipleChoiceField': { 'param': \"choices=models.[[choice_name]]\", },\n    'TypedMultipleChoiceField': { 'param': \"coerce=,empty_value=''\", },\n    'RegexField': {'param': \"regex='[[regex]]', max_length=None, min_length=None\", },\n    'URLField': { 'param': \"max_length=None, min_length=None\", },\n    'ComboField': { 'param': \"fields=[[fields]]\", },    \n}\n\n\nwidgets = [\n    \"ok_cancel\",\n    \"button '[[url]]' '[[description]]' '[[name]]' '[[target]]'\"\n    \"action_table '[[action]]' '[[description]]' '[[name]]' '[[target]]'\",\n    \"print_table '[[description]]' '[[target]]'\",\n    \"new_row '[[description]]' '[[target]]'\",\n    \"edit_row '[[description]]' '[[target]]'\",\n    \"view_row '[[description]]' '[[dx]]' '[[dy]]' , '[[target]]'\",\n    \"print_row '[[description]]' '[[target]]'\",\n    \"action_row '[[action]]' '[[description]]' '[[name]]' '[[target]]'\",\n    \"delete_row '[[description]]' '[[target]]'\",\n    \"list_field '[[field]]' '[[name]]' '[[description]]' '[[target]]'\"\n    \"edit_field '[[field]]' '[[name]]' '[[description]]' '[[target]]'\"\n    \"action_field '[[field]]' '[[action]]' '[[description]]' '[[name]]' '[[target]]'\",\n    \"jscript_link '[[href]]'\",\n    \"css_link '[[href]]'\",\n    ]\n    \n\nFormField_CHOICES = list([ (f,f) for f in dir(form_fields) if f.endswith('Field') and f not in ['BaseTemporalField', 'Field', 'BoundField' ] ])\nfor f in dir(form_model_fields) + dir(ext_form_fields):\n    if f.endswith('Field') and f != 'Field':\n        if not (f,f) in FormField_CHOICES:\n            FormField_CHOICES.append((f,f))\nFormField_CHOICES.append((\"UserField\",\"UserField\"))\n\ndef apppack():\n    ret = []\n    for ff in os.listdir(settings.PRJ_PATH):\n        if os.path.isdir(os.path.join(settings.PRJ_PATH, ff)):\n            if not ff.startswith('_'):\n                ret.append([ff, ff])\n    return ret\n\n$$$\n\ntmp = [ pos for pos in dir(models) if (pos.endswith('Field') and pos != 'Field') or pos.endswith('Key') ]\nfor pos in tmp:\n    Field_CHOICES.append((pos, pos))\n\n",
                "module_title": "main tools",
                "name": "schbuilder",
                "perms": true,
                "tasks_code": "",
                "title": "Pytigon builder",
                "urls_code": "gen.for_field('SChAppSet', 'schapp_set', 'Applications', prefix=\"up\", template_name=\"schbuilder/schapp2.html\")\ngen.for_field('SChApp', 'schappmenu_set', 'Menu', prefix=\"wiki\", template_name=\"schbuilder/schappmenu2.html\")\n#gen.standard('SChAppMenu', u'SChAppMenu', prefix=\"wiki\")",
                "user_param": "icon:fa_building",
                "view_code": "import shutil\nimport json\nimport zipfile\nimport base64\nimport platform\nimport polib\nimport locale\nimport codecs\nimport signal\nimport os\nimport io\nimport time\nimport configparser\nimport hashlib\n\nfrom django.db import transaction\nfrom django.urls import reverse\n\nfrom pytigon_lib.schviews.viewtools import change_pos, duplicate_row\n#from pytigon_lib.schtasks.base_task import get_process_manager\nimport pytigon_lib.schindent.indent_style\nfrom pytigon_lib.schindent.indent_tools import convert_js\nfrom pytigon_lib.schdjangoext.django_ihtml import ihtml_to_html\n\nfrom pytigon_lib.schfs.vfstools import ZipWriter, open_and_create_dir\nfrom pytigon_lib.schtools.install import Ptig\nfrom pytigon_lib.schtools.process import py_run\nfrom pytigon_lib.schtools.platform_info import platform_name\n\nfrom pytigon_lib.schtools.cc import import_plugin, make\nfrom pytigon_lib.schdjangoext.python_style_template_loader import compile_template\n\nfrom pytigon.ext_lib.pygettext import main as gtext\n\nfrom pytigon.schserw.schsys.context_processors import sch_standard\n\nfrom dulwich import porcelain\nfrom dulwich.repo import Repo\nfrom dulwich import index\n\ntry:\n    import sass\nexcept:\n    sass =  None\n\nimport pytigon.schserw.settings\n\nfrom django_q.tasks import async_task, result\nfrom pytigon_lib.schtasks.publish import publish\n\ntry:\n    import black\nexcept:\n    black = None\n \n_template=\"\"\"\n        [ gui_style | {{prj.gui_type}}({{prj.gui_elements}}) ]\n        [ title  | {{prj.title}} ]\n        [ start_page | {{start_page}} ]\n        [ plugins | {{prj.plugins}} ]\n\"\"\"\n\nprj_attr=sorted([field.name for field in models.SChAppSet._meta.fields if field.name not in ('parent','id')])\napp_attr=sorted([field.name for field in models.SChApp._meta.fields if field.name not in ('parent','id')])\nchoice_attr=sorted([field.name for field in models.SChChoice._meta.fields if field.name not in ('parent','id')])\nchoice_item_attr=sorted([field.name for field in models.SChChoiceItem._meta.fields if field.name not in ('parent','id')])\ntable_attr=sorted([field.name for field in models.SChTable._meta.fields if field.name not in ('parent','id')])\nfield_attr=sorted([field.name for field in models.SChField._meta.fields if field.name not in ('parent','id')])\nview_attr=sorted([field.name for field in models.SChView._meta.fields if field.name not in ('parent','id')])\nstatic_attr=sorted([field.name for field in models.SChStatic._meta.fields if field.name not in ('parent','id')])\ntemplate_attr=sorted([field.name for field in models.SChTemplate._meta.fields if field.name not in ('parent','id')])\nappmenu_attr=sorted([field.name for field in models.SChAppMenu._meta.fields if field.name not in ('parent','id')])\nform_attr=sorted([field.name for field in models.SChForm._meta.fields if field.name not in ('parent','id')])\nformfield_attr=sorted([field.name for field in models.SChFormField._meta.fields if field.name not in ('parent','id')])\ntask_attr=sorted([field.name for field in models.SChTask._meta.fields if field.name not in ('parent','id')])\nfiles_attr=sorted([field.name for field in models.SChFiles._meta.fields if field.name not in ('parent','id')])\nconsumer_attr=sorted([field.name for field in models.SChChannelConsumer._meta.fields if field.name not in ('parent','id')])\n\ndef callback_fun_tab(obj1, obj2):\n    fields_tmp = []\n    for field in obj1.schfield_set.all():\n        field.parent = obj2\n        fields_tmp.append(field)\n    for field in obj2.schfield_set.all():\n        field.parent = obj1\n        field.save()\n    for field in fields_tmp:\n        field.save()\n\ndef change_tab_pos(\n    request,\n    app,\n    tab,\n    pk,\n    forward=True,\n    field=None,\n    callback_fun=None\n    ):\n    return change_pos(request, app, tab, pk, forward, field, callback_fun_tab)\n\ndef change_menu_pos(\n    request,\n    app,\n    tab,\n    pk,\n    forward=True,\n    field=None,\n    callback_fun=None\n    ):\n    return change_pos(request, app, tab, pk, forward, field)\n\ndef change_pos_form_field(\n    request,\n    app,\n    tab,\n    pk,\n    forward=True,\n    field=None,\n    callback_fun=None\n    ):\n    return change_pos(request, app, tab, pk, forward, field)\n\n\ndef template_to_file(base_path, template, file_name, context):\n    txt = render_to_string('schbuilder/wzr/%s.html' % template, context)\n    if black and file_name.endswith('.py'):\n        try:\n            txt2 = black.format_file_contents(txt, fast=True, mode=black.mode.Mode())\n            if txt2:\n                txt = txt2\n        except:\n            pass\n    f = codecs.open(base_path+\"/\"+file_name, 'w', encoding='utf-8')\n    f.write(txt)\n    f.close()\n\n\ndef template_to_i_file(base_path, template, file_name, context):\n    f=open(template,\"rt\")\n    txt_in = f.read()\n    f.close()\n    t = Template(_template)\n    try:\n        txt = t.render(Context(context))\n    except:\n        import traceback\n        import sys\n        print(sys.exc_info()[0])\n        print(traceback.print_exc())\n    try:\n        if type(txt_in)==str:\n            txt2 = txt_in.replace('$$'+'$', txt)\n        else:\n            txt2 = txt_in.decode('utf-8').replace('$$'+'$', txt)\n    except:\n        import traceback\n        import sys\n        print(sys.exc_info()[0])\n        print(traceback.print_exc())\n\n    f = open(base_path+\"/\"+file_name,\"wb\")\n    if type(txt_in)==str:\n        f.write(txt2.encode('utf-8'))\n    else:\n        f.write(txt2.encode('utf-8'))\n    f.close()\n\ndef str_to_file(base_path, buf, file_name):\n    f = open(base_path+\"/\"+file_name,\"wb\")\n    if buf:\n        if type(buf)==str:\n            f.write(buf.encode('utf-8'))\n        else:\n            f.write(buf)\n    f.close()\n\n\ndef obj_to_dict(obj, attrs):\n    ret = {}\n    for attr in attrs:\n        ret[attr.strip()] = getattr(obj, attr.strip())\n    return ret\n\ndef array_dict(array, attrs):\n    return array\n\ndef copy_files_and_dirs(src, dst):\n    names = os.listdir(src)\n    if not os.path.exists(dst):\n        os.makedirs(dst)\n    errors = []\n    for name in names:\n        srcname = os.path.join(src, name)\n        dstname = os.path.join(dst, name)\n        try:\n            if os.path.isdir(srcname):\n                copy_files_and_dirs(srcname, dstname)\n            else:\n                shutil.copy2(srcname, dstname)\n        except (IOError, os.error) as why:\n            errors.append((srcname, dstname, str(why)))\n        except shutil.Error as err:\n            errors.extend(err.args[0])\n    if errors:\n        raise shutil.Error(errors)\n\ndef run_python_shell_task2(request):\n    from pytigon_lib.schtasks.base_task import get_process_manager\n    id = get_process_manager().put(request, \"python-shell\", \"python3\", '-i')\n    new_url = make_href(\"../../schsys/thread/%d/edit/\" % id)\n    return HttpResponseRedirect(new_url)\n\ndef run_python_shell_task_base(request, base_path, prj_name):\n    from pytigon_lib.schtasks.base_task import get_process_manager\n    command = \"from app_sets.%s.manage import *\" % prj_name\n    pconsole = settings.PYTHON_CONSOLE.split(' ')\n    pconsole[0]=\">>>\" + pconsole[0]\n    pconsole.append('-i')\n    pconsole.append('-c')\n    pconsole.append(command)\n    param = [\"python-shell\",] + pconsole\n    id = get_process_manager().put(request, *param)\n    return id\n\ndef run_python_shell_task(request, base_path, prj_name):\n    id = run_python_shell_task_base(request, base_path, prj_name)\n    new_url = make_href(\"../../schsys/thread/%d/edit/\" % id)\n    return HttpResponseRedirect(new_url)\n\n\ndef make_messages(src_path, path, name, outpath=None, ext_locales=[]):\n    backup_argv = sys.argv\n    \n    sys.argv = [None, '-a', '-d', name, '-p', path]\n\n    for root, dirs, files in os.walk(src_path):\n        for f in files:\n            if f.endswith('.py'):\n                p = os.path.join(root, f)\n                sys.argv.append(p)\n    gtext()\n\n    wzr_filename = os.path.join(path, name+'.pot')\n    for pos in os.scandir(path):\n        if pos.is_dir():            \n            lang = pos.name\n            ftmp = os.path.join(path, lang)\n            if outpath:\n                ftmp = os.path.join(ftmp, outpath)\n            filename = os.path.join(ftmp, name + '.po')\n            old_filename = filename.replace('.po', '.bak')\n            mo_filename = filename.replace('.po', '.mo')\n            try:\n                os.remove(old_filename)\n            except:\n                pass\n            try:\n                os.rename(filename, old_filename)\n            except:\n                pass\n\n            wzr = polib.pofile(wzr_filename)\n            if os.path.exists(old_filename):\n                po = polib.pofile(old_filename)\n            else:\n                po = polib.POFile()\n            po.merge(wzr)\n            \n            #for pos2 in ext_locales:\n            #    ftmp = os.path.join(pos2[1],lang)\n            #    if outpath:\n            #        ftmp = os.path.join(ftmp, outpath)\n            #    ext_filename = os.path.join(ftmp, name+'.po')\n            #    if os.path.exists(ext_filename):\n            #        ext_po = polib.pofile(ext_filename)\n            #        po.merge(ext_po)\n                \n            po.save(filename)\n            po.save_as_mofile(mo_filename)\n\n    sys.argv = backup_argv\n\n\ndef locale_gen_internal(pk):\n    prj = models.SChAppSet.objects.get(id=pk)\n\n    base_path = settings.PRJ_PATH\n    app_path = os.path.join(base_path, prj.name)\n    locale_path = os.path.join(app_path, 'locale')\n\n    ext_apps = []\n    ext_locales = []\n    if prj.ext_apps:\n        for pos in prj.ext_apps.split(','):\n            pos2 = pos.split('.')[0]\n            if pos2 and not pos2 in ext_apps:\n                ext_apps.append(pos2)\n                app_path2 = os.path.join(base_path, pos2)\n                locale_path2 = os.path.join(app_path2, 'locale')                \n                ext_locales.append([app_path2, locale_path2])\n    make_messages(app_path, locale_path, 'django', 'LC_MESSAGES', ext_locales)\n\n    template_path = os.path.join(app_path, \"templates\")\n\n    to_remove = []\n    for root, dirs, files in os.walk(template_path):\n        for f in files:\n            if f.endswith('.html'):\n                p = os.path.join(root, f)\n                to_remove.append(p)\n\n    for pos in to_remove:\n        os.unlink(pos)\n\n    return { 'object_list': [[ 'OK' ],] }\n        \n\n\ndef prj_import_from_str(s, backup_old=False, backup_this=False):\n    object_list = []\n    prj = json.loads(s)\n    with transaction.atomic():\n        prj_instence = models.SChAppSet(**prj[0])\n        prj_instence.main_view = True\n        prj_instence.save()\n\n        apps_array = prj[1]\n        for app_pos in apps_array:\n            app = models.SChApp(**app_pos[0])\n            app.parent = prj_instence\n            app.save()\n\n            tables_array = app_pos[1]\n            for table_pos in tables_array:\n                table = models.SChTable(**table_pos[0])\n                table.parent = app\n                table.save()\n\n                fields_array = table_pos[1]\n                for field_pos in fields_array:\n                    field = models.SChField(**field_pos)\n                    field.parent = table\n                    field.save()\n\n            choices_array = app_pos[2]\n            for choice_pos in choices_array:\n                choice = models.SChChoice(**choice_pos[0])\n                choice.parent = app\n                choice.save()\n\n                choice_item_array = choice_pos[1]\n                for item_pos in choice_item_array:\n                    choice_item = models.SChChoiceItem(**item_pos)\n                    choice_item.parent = choice\n                    choice_item.save()\n\n            views_array = app_pos[3]\n            for view_pos in views_array:\n                view = models.SChView(**view_pos)\n                view.parent = app\n                view.save()\n\n            templates_array = app_pos[4]\n            for template_pos in templates_array:\n                template = models.SChTemplate(**template_pos)\n                template.parent = app\n                template.save()\n\n            appmenus = app.schappmenu_set.all()\n            appmenus_array = app_pos[5]\n            for appmenu_pos in appmenus_array:\n                appmenu = models.SChAppMenu(**appmenu_pos)\n                appmenu.parent = app\n                appmenu.save()\n\n            forms_array = app_pos[6]\n            for form_pos in forms_array:\n                form = models.SChForm(**form_pos[0])\n                form.parent = app\n                form.save()\n\n                formfields_array = form_pos[1]\n                for field_pos in formfields_array:\n                    field = models.SChFormField(**field_pos)\n                    field.parent = form\n                    field.save()\n\n            tasks_array = app_pos[7]\n            for task_pos in tasks_array:\n                task = models.SChTask(**task_pos)\n                task.parent = app\n                task.save()\n\n            consumers_array = app_pos[8]\n            for consumer_pos in consumers_array:\n                consumer = models.SChChannelConsumer(**consumer_pos)\n                consumer.parent = app\n                consumer.save()\n\n            files_array = app_pos[9]\n            for file_pos in files_array:\n                f = models.SChFiles(**file_pos)\n                f.parent = app\n                f.save()\n\n        statics_array = prj[2]\n        for static in statics_array:\n            s = models.SChStatic(**static)\n            s.parent = prj_instence\n            s.save()\n\n    if backup_old:\n        projects = models.SChAppSet.objects.filter(\n            name=prj_instence.name, main_view=True\n        )\n        if len(projects) > 0:\n            for prj in projects:\n                if prj.id != prj_instence.id:\n                    if prj.version == \"latest\":\n                        prj.version = version = (\n                                \"v\" + datetime.date.today().isoformat()\n                        )\n                    prj.main_view = False\n                    prj.save()\n                    object_list.append(\n                        (\n                            datetime.datetime.now(),\n                            \"prj has been archived:\",\n                            prj.name + \":\" + prj.version,\n                        )\n                    )\n    elif backup_this:\n        prj_instence.main_view = False\n        if prj_instence.version == \"latest\":\n            prj_instence.version = \"v\" + datetime.date.today().isoformat()\n        prj_instence.save()\n                \n    object_list.append(\n        (\n            datetime.datetime.now(),\n            \"prj imported from file\",\n            prj_instence.name + \":\" + prj_instence.version,\n        )\n    )\n    return {\"object_list\": object_list, \"prj_instance\": prj_instence}\n\ndef prj_export_to_str(pk):\n    prj_tab = []\n    prj = models.SChAppSet.objects.get(id=pk)\n    prj_tab.append(obj_to_dict(prj,prj_attr))\n    apps = prj.schapp_set.all()\n    apps_array=[]\n    for app in apps:\n        tables = app.schtable_set.all()\n        tables_array=[]\n        for table in tables:\n            tmp=obj_to_dict(table, table_attr)\n            fields = table.schfield_set.all()\n            fields_array=[]\n            for field in fields:\n                fields_array.append(obj_to_dict(field, field_attr))\n            tables_array.append([tmp,fields_array])\n\n        choices = app.schchoice_set.all()\n        choices_array=[]\n        for choice in choices:\n            tmp=obj_to_dict(choice, choice_attr)\n            choice_items = choice.schchoiceitem_set.all()\n            choice_items_array=[]\n            for item in choice_items:\n                choice_items_array.append(obj_to_dict(item, choice_item_attr))\n            choices_array.append([tmp,choice_items_array])\n\n        views = app.schview_set.all()\n        views_array=[]\n        for view in views:\n            views_array.append(obj_to_dict(view,view_attr))\n\n        templates = app.schtemplate_set.all()\n        templates_array=[]\n        for template in templates:\n            templates_array.append(obj_to_dict(template,template_attr))\n            \n        appmenus = app.schappmenu_set.all()\n        appmenus_array=[]\n        for appmenu in appmenus:\n            appmenus_array.append(obj_to_dict(appmenu,appmenu_attr))\n\n        forms = app.schform_set.all()\n        forms_array=[]\n        for form in forms:\n            tmp=obj_to_dict(form, form_attr)\n            fields = form.schformfield_set.all()\n            fields_array=[]\n            for field in fields:\n                fields_array.append(obj_to_dict(field, formfield_attr))\n            forms_array.append([tmp,fields_array])\n\n        tasks = app.schtask_set.all()\n        tasks_array=[]\n        for task in tasks:\n            tasks_array.append(obj_to_dict(task,task_attr))\n\n        consumers = app.schchannelconsumer_set.all()\n        consumers_array=[]\n        for consumer in consumers:\n            consumers_array.append(obj_to_dict(consumer,consumer_attr))\n\n        files = app.schfiles_set.all()\n        files_array=[]\n        for file in files:\n            files_array.append(obj_to_dict(file,files_attr))\n\n        tmp = obj_to_dict(app, app_attr)\n        apps_array.append([tmp, tables_array, choices_array, views_array, templates_array, appmenus_array, forms_array, tasks_array, consumers_array, files_array])\n    prj_tab.append(apps_array)\n\n    statics = prj.schstatic_set.all()\n    statics_array=[]\n    for static in statics:\n        statics_array.append(obj_to_dict(static,static_attr))\n\n    prj_tab.append(statics_array)\n\n    return json.dumps(prj_tab, indent=4)\n\ndef build_prj(pk):\n    prj = models.SChAppSet.objects.get(id=pk)\n    root_path = settings.ROOT_PATH\n\n    if hasattr(pytigon.schserw.settings,\"_PRJ_PATH_ALT\"):\n        base_path = os.path.join(pytigon.schserw.settings._PRJ_PATH_ALT, prj.name)\n    else:\n        base_path = os.path.join(settings.PRJ_PATH_ALT, prj.name)\n    src_path = os.path.join(settings.PRJ_PATH, \"schdevtools\")\n    object_list = []\n    gmt = time.gmtime()\n    gmt_str = \"%04d.%02d.%02d %02d:%02d:%02d\" % (gmt[0], gmt[1], gmt[2], gmt[3], gmt[4], gmt[5])\n\n    #os.makedirs(base_path, exist_ok=True)\n    #os.makedirs(base_path+\"/templates\", exist_ok=True)\n    os.makedirs(base_path+\"/templates/template\", exist_ok=True)\n    #os.makedirs(base_path+\"/templates_src\", exist_ok=True)\n    os.makedirs(base_path+\"/templates_src/template\", exist_ok=True)\n    #os.makedirs(base_path+\"/apache\", exist_ok=True)\n\n    apps = prj.schapp_set.all()\n\n    #template_to_file(base_path, \"license\", \"LICENSE.txt\", {'prj': prj})\n    #template_to_file(base_path, \"readme\", \"README.txt\",  {'prj': prj})\n    with open(os.path.join(base_path, \"README.md\"), \"wt\") as f:\n        if prj.readme_file:\n            f.write(prj.readme_file)\n    with open(os.path.join(base_path, \"LICENSE\"), \"wt\") as f:\n        if prj.license_file:\n            f.write(prj.license_file)\n    with open(os.path.join(base_path, \"install.ini\"), \"wt\") as f:\n        f.write(\"[DEFAULT]\\nPRJ_NAME=%s\\n\" % prj.name)\n        f.write(\"PRJ_TITLE=%s\\n\" % prj.title)\n        f.write(\"GEN_TIME='%s'\\n\" % gmt_str)\n        if prj.install_file:\n            f.write(prj.install_file)\n    #if prj.app_main:\n    #    with open(os.path.join(base_path, \"prj_main.py\"), \"wt\") as f:\n    #        f.write(prj.app_main)\n\n    template_to_file(base_path, \"manage\", \"manage.py\",  {'prj': prj})\n    template_to_file(base_path, \"init\", \"__init__.py\",  {'prj': prj})\n    template_to_file(base_path, \"wsgi\", \"wsgi.py\",  {'prj': prj, 'base_path': base_path.replace('\\\\','/')})\n    template_to_file(base_path, \"asgi\", \"asgi.py\",  {'prj': prj, 'base_path': base_path.replace('\\\\','/')})\n\n    app_names = []\n    for app in apps:\n        object_list.append((datetime.datetime.now(), 'create app:', app.name))\n        os.makedirs(base_path+\"/\"+app.name, exist_ok=True)\n        os.makedirs(base_path+\"/templates_src/\"+app.name, exist_ok=True)\n        os.makedirs(base_path+\"/templates/\"+app.name, exist_ok=True)\n\n        app_names.append(app.name)\n\n        tables = app.schtable_set.all()\n        choices = app.schchoice_set.all()\n        templates = app.schtemplate_set.all()\n\n        is_tree_table = False\n        gfields = []\n        for table in tables:\n            object_list.append((datetime.datetime.now(), 'create tab:', table.name))\n            table.tree_table = 0\n            for field in table.schfield_set.filter(type__in=['PtigForeignKey','PtigManyToManyField', 'PtigHiddenForeignKey', 'PtigTreeForeignKey', 'PtigHiddenTreeForeignKey']):\n                if field.type in ('PtigTreeForeignKey', 'PtigHiddenTreeForeignKey'):       \n                    is_tree_table = True\n                    if table.base_table in (None, \"\", \"models.Model\") and not table.proxy_model:\n                        table.base_table = 'TreeModel'\n                        table.tree_tab = 1\n                    else: \n                        table.tree_tab = 2\n                gfields.append(field)\n\n        template_to_file(base_path, \"models\", app.name+\"/models.py\",  {'tables': tables, 'app': app, 'prj': prj, 'choices': choices, 'is_tree_table': is_tree_table })\n\n        views = app.schview_set.all()\n        forms = app.schform_set.all()\n        tasks = app.schtask_set.all()\n        consumers = app.schchannelconsumer_set.all()\n        template_to_file(base_path, \"views\", app.name+\"/views.py\",  {'views': views, 'forms': forms, 'app': app})\n        template_to_file(base_path, \"urls\",  app.name+\"/urls.py\",  {'views': views, 'templates': templates, 'tables': tables, 'forms': forms, 'app': app, 'gfields': gfields})\n        template_to_file(base_path, \"tasks\", app.name+\"/tasks.py\",  {'tasks': tasks, 'app': app})\n        template_to_file(base_path, \"consumers\", app.name+\"/consumers.py\",  {'consumers': consumers, 'app': app})\n\n        for template in templates:\n            if '.' in template.name and not '.ihtml' in template.name:\n                str_to_file(base_path, template.template_code, \"templates/\"+app.name+\"/\"+template.name)\n            else:\n                str_to_file(base_path, template.template_code, \"templates_src/\"+app.name+\"/\"+template.name.lower().replace(' ','_')+\".ihtml\")\n\n        appmenus = list(app.schappmenu_set.all())\n        \n        if app.user_param:\n            user_param = str(dict([ pos.split('=') for pos in app.user_param.split('\\n') if pos and '=' in pos ]))\n        else:\n            user_param = '{}'\n        \n        template_to_file(base_path, \"app_init\", app.name+\"/__init__.py\",  {'appmenus': appmenus, 'app': app, 'user_param': user_param})\n        template_to_file(base_path, \"schema\", app.name+\"/schema.py\",  {'appmenus': appmenus, 'app': app, 'user_param': user_param})\n\n        for file_obj in app.schfiles_set.all():\n            if file_obj.file_type=='f':\n                file_name = base_path + \"/\" + app.name+\"/templatetags/\"+ file_obj.name + \".py\"\n            elif file_obj.file_type=='t':\n                file_name = base_path + \"/\" + app.name+\"/templatetags/\"+ file_obj.name + \".py\"\n            elif file_obj.file_type=='c':\n                file_name = base_path + \"/\" + app.name+\"/\"+ file_obj.name\n            elif file_obj.file_type=='m':\n                f = open_and_create_dir(base_path + \"/\" + app.name+\"/management/__init__.py\", \"wb\")\n                f.close()\n                f = open_and_create_dir(base_path + \"/\" + app.name+\"/management/commands/__init__.py\",\"wb\")\n                f.close()\n                file_name = base_path + \"/\" + app.name+\"/management/commands/\"+ file_obj.name\n            elif file_obj.file_type=='p':\n                if '/' in file_obj.name:\n                    x = file_obj.name.split('/')\n                    plugin_name = x[0]\n                    file_name = x[1]\n                else:\n                    plugin_name = file_obj.name\n                    file_name = '__init__'\n                file_name = base_path + \"/plugins/\" + app.name + \"/\" + plugin_name + \"/\" + file_name + \".py\"\n            elif file_obj.file_type=='i':\n                if '/' in file_obj.name:\n                    x = file_obj.name.split('/')\n                    plugin_name = x[0]\n                    file_name = x[1]\n                else:\n                    plugin_name = file_obj.name\n                    file_name = 'index'\n                file_name = base_path + \"/plugins/\" + app.name + \"/\" + plugin_name + \"/\" + file_name + \".html\"\n                content =  ihtml_to_html(None, file_obj.content)\n                f = open_and_create_dir(file_name,\"wb\")\n                f.write(content.encode('utf-8'))\n                f.close()\n                file_name = None\n            elif file_obj.file_type in ('l', 'x', 'C'):\n                f = open_and_create_dir(os.path.join(base_path, app.name, \"applib\", \"__init__.py\"), \"wb\")\n                f.close()\n                file_name = os.path.join(base_path, app.name, \"applib\", file_obj.name) \n                if file_obj.file_type == 'l':\n                    file_name += \".py\"\n                elif file_obj.file_type == 'x':\n                    file_name += \".pyx\"\n                else:\n                    file_name += '.c'\n            elif file_obj.file_type == 's':\n                file_name = base_path + \"/\" + app.name+\"/schema.py\"\n            else: \n                file_name = None\n                \n            if file_name:\n                f = open_and_create_dir(file_name,\"wb\")\n                if type(file_obj.content)==str:\n                    f.write(file_obj.content.encode('utf-8'))\n                else:\n                    f.write(file_obj.content)\n                f.close()\n            \n\n    template_to_file(base_path, \"apps\", \"apps.py\",  {'prj': prj, 'app_names': app_names })\n\n    static_files = prj.schstatic_set.all()\n\n    #if settings.STATIC_APP_ROOT:\n    #    static_root = os.path.join(settings.STATIC_APP_ROOT, prj.name)\n    #else:\n    #    if settings.STATIC_ROOT:\n    #        static_root = os.path.join(os.path.join(settings.STATIC_ROOT, 'app'),prj.name)\n    #    else:\n    #        static_root = os.path.join(os.path.join(settings.STATICFILES_DIRS[0], 'app'),prj.name)\n\n    static_root = os.path.join(base_path, \"static\", prj.name)\n\n    static_scripts = os.path.join(static_root,'js')\n    static_style = os.path.join(static_root,'css')\n    static_components = os.path.join(static_root,'components')\n\n    offline_support = False\n    initial_state = \"\"\n\n    for static_file in static_files:\n        txt = static_file.code\n        typ = static_file.type\n        dest_path = None\n        if static_file.name=='sw.js':\n            offline_support = True\n            \n        if static_file.type=='U':\n            dest_path = os.path.join(static_root,static_file.name)\n            if '.pyj' in static_file.name:\n                dest_path = os.path.join(static_root,static_file.name.replace('.pyj', '.js'))\n                typ = 'P'\n            elif '.sass' in static_file.name:\n                dest_path = os.path.join(static_root,static_file.name.replace('.sass', '.css'))\n                typ = 'I'\n            elif '.webc' in static_file.name:\n                dest_path = os.path.join(static_root,static_file.name.replace('.webc', '.js'))\n                typ = 'R'\n                        \n        if typ=='C':\n            t = Template(txt)\n            txt2 = t.render(Context({'prj': prj} ))\n            f = open_and_create_dir(os.path.join(static_style, static_file.name+\".css\"),\"wb\")\n            f.write(txt2.encode('utf-8'))\n            f.close()        \n        if typ=='J':\n            t = Template(txt)\n            txt2 = t.render(Context({'prj': prj} ))\n            f = open_and_create_dir(os.path.join(static_scripts,static_file.name+\".js\"),\"wb\")\n            f.write(txt2.encode('utf-8'))\n            f.close()        \n        if typ=='P':\n            t = Template(txt)\n            txt2 = t.render(Context({'prj': prj} ))\n            try:\n                codejs = pytigon_lib.schindent.indent_style.py_to_js(txt2, None)\n                codejs = codejs.replace('./org.transcrypt.__runtime__.js','../../pytigon_js/org.transcrypt.__runtime__.js').replace('__globals__,', '')\n                #codejs = codejs.split(\"__pragma__ ('<all>')\",1)[0]\n            except:\n                codejs = \"\"\n            print(dest_path if dest_path else os.path.join(static_scripts,static_file.name+\".js\"))\n            f = open_and_create_dir(dest_path if dest_path else os.path.join(static_scripts,static_file.name+\".js\"),\"wb\")\n            f.write(codejs.encode('utf-8'))\n            f.close()        \n        if typ=='R':\n            try:\n                codejs = pytigon_lib.schindent.indent_style.py_to_js(txt, None)\n                #codejs = codejs.split(\"__pragma__ ('<all>')\",1)[0]\n                codejs = codejs.replace('./org.transcrypt.__runtime__.js','../../pytigon_js/org.transcrypt.__runtime__.js').replace('__globals__,', '')\n            except:\n                codejs = \"\"\n            print(dest_path if dest_path else os.path.join(static_components, static_file.name+'.js'))    \n            f = open_and_create_dir(dest_path if dest_path else os.path.join(static_components, static_file.name+'.js'),\"wb\")\n            f.write(codejs.encode('utf-8'))\n            f.close()        \n        if typ=='I':\n            if sass:\n                buf = sass.compile(string=txt, indented=True,)\n                t = Template(buf)\n                txt2 = t.render(Context({'prj': prj} ))\n                f = open_and_create_dir(dest_path if dest_path else os.path.join(static_style,static_file.name+\".css\"),\"wb\")\n                f.write(txt2.encode('utf-8'))\n                f.close()        \n        if typ=='U':\n            t = Template(txt)\n            txt2 = t.render(Context({'prj': prj} ))\n            f = open_and_create_dir(dest_path,\"wb\")\n            f.write(txt2.encode('utf-8'))\n            f.close()        \n        if static_file.type=='G':\n            initial_state += txt\n    component_elements = []\n\n    if prj.custom_tags:\n        #component_elements += [ pos.split('/')[0] + '/components/' + pos.split('/')[1] for pos in prj.custom_tags.replace('\\n',';').replace('\\r','').split(';') if pos and '/' in pos ]    \n        component_elements += [ pos for pos in prj.custom_tags.replace('\\n',';').replace('\\r','').split(';') if pos and '.' in pos ]    \n    component_elements += [ prj.name + \"/components/\" + pos.name + \".js\" for pos in static_files if pos.type in ('R',) ]\n\n    js_static_files = [ pos for pos in static_files if pos.type in ('J', 'P') ]\n    css_static_files = [ pos for pos in static_files if pos.type in ('C', 'I') ]\n\n\n    static_for_ext_apps = []\n\n    if prj.ext_apps:\n        prj_tab = []\n        tab = prj.get_ext_pytigon_apps()\n        for pos in tab:\n            if pos:\n                x = pos.split('.')[0]\n                if not x in prj_tab:\n                    prj_tab.append(x)\n        \n        #for pos in prj.ext_apps.split(','):\n        #    if pos:\n        #        x = pos.split('.')[0]\n        #        if not x in prj_tab:\n        #            prj_tab.append(x)\n        for pos in prj_tab:\n            try:\n                prj2 = models.SChAppSet.objects.get(name=pos)\n            except:\n                prj2 = None\n            if prj2:\n                static_files2 = prj2.schstatic_set.all()\n                js_static_files2 = [ pos2 for pos2 in static_files2 if pos2.type in ('J', 'P') ]\n                css_static_files2 = [ pos2 for pos2 in static_files2 if pos2.type in ('C', 'I') ]\n                static_for_ext_apps.append((pos, js_static_files2, css_static_files2))\n\n                if prj2.custom_tags:\n                    component_elements += [ pos for pos in prj2.custom_tags.replace('\\n',';').replace('\\r','').split(';') if pos and '.' in pos ]    \n                component_elements += [ prj2.name + \"/components/\" + pos.name + \".js\" for pos in static_files2 if pos.type in ('R',) ]\n\n    template_to_file(base_path, \"base\", \"templates_src/template/base.ihtml\",  {'prj': prj, 'js_static_files': set(js_static_files), 'css_static_files': set(css_static_files), 'static_for_ext_apps': static_for_ext_apps, 'component_elements': set(component_elements), 'initial_state': initial_state })\n\n\n    #print(component_elements)\n    #template_to_i_file(base_path, src_path+\"templates_src/schbuilder/wzr/schweb.ihtml\",\"templates_src/template/schweb.ihtml\",  {'prj': prj, 'component_elements': component_elements })\n\n    template_to_file(base_path, \"schweb\", \"templates_src/template/schweb.ihtml\",  {'prj': prj, 'component_elements': component_elements })\n\n    consumers_tab = []\n    for _app in apps:\n        consumers = _app.schchannelconsumer_set.all()\n        for consumer in consumers:\n            consumers_tab.append((_app.name+\"/\"+consumer.url+\"/channel/\", _app.name+\".consumers.\"+consumer.name))\n\n    for pos in prj.get_ext_pytigon_apps():\n        if pos:\n            x = pos.split('.')\n            tab1 = models.SChAppSet.objects.filter(name=x[0])\n            for _prj in tab1:\n                tab2 = _prj.schapp_set.filter(name=x[1])\n                for _app in tab2:\n                    consumers = _app.schchannelconsumer_set.all()\n                    for consumer in consumers:\n                        consumers_tab.append((_app.name+\"/\"+consumer.url+\"/channel/\", _app.name+\".consumers.\"+consumer.name))\n                \n    template_to_file(base_path, \"settings_app\", \"settings_app.py\",  {'prj': prj, 'gmtime': gmt_str, 'offline_support': offline_support, 'consumers': consumers_tab })\n\n    base_path_src = base_path + \"/src\"\n\n    if os.path.exists(base_path_src):\n        copy_files_and_dirs(base_path_src, base_path)\n\n    file_name = None\n    file_content = []\n    file_append = -1\n\n    def output(file_name, file_append, file_content):\n        os.makedirs(os.path.dirname(os.path.join(base_path, file_name)), exist_ok=True)\n        if file_append == -1:\n            f = open(os.path.join(base_path, file_name), \"wb\")\n            f.write((\"\\n\".join(file_content)).encode(\"utf-8\"))\n            f.close()\n        elif file_append == -2:\n            f = open(os.path.join(base_path, file_name), \"ab\")\n            f.write((\"\\n\".join(file_content)).encode(\"utf-8\"))\n            f.close()\n        else:\n            f = open(os.path.join(base_path, file_name), \"rb\")\n            txt = f.read().decode(\"utf-8\").split(\"\\n\")\n            f.close()\n            try:\n                file_append_pos = int(file_append)\n            except:\n                if file_append.startswith('|'):\n                    f = file_append[1:]\n                    delta = 0\n                elif file_append.endswith('|'):\n                    f = file_append[:-1]\n                    delta = 1\n                else:\n                    f = file_append\n                    delta = 1\n\n                file_append_pos = delta\n                for buf in txt:\n                    if f in buf:\n                        break\n                    file_append_pos += 1\n\n            if file_append_pos < len(txt):\n                txt = txt[:file_append_pos] + file_content + txt[file_append_pos:]\n            else:\n                txt = txt + file_content\n            f = open(os.path.join(base_path, file_name), \"wb\")\n            f.write((\"\\n\".join(txt)).encode(\"utf-8\"))\n            f.close()\n\n    if prj.user_app_template and len(prj.user_app_template)>0:\n        txt = prj.user_app_template\n        tab = txt.split('\\n')\n        for row in tab:\n            if row.startswith('###'):\n                if file_name and len(file_content)>0:\n                    output(file_name, file_append, file_content)\n                file_content = []\n                file_name = row[3:]\n                if file_name.startswith('>'):\n                    file_name = file_name[1:].strip()\n                    file_append = -2\n                elif file_name.startswith('<') and '>' in file_name:\n                    f = file_name[1:].split('>')\n                    file_name = f[1].strip()\n                    file_append = f[0]                \n                else:\n                    file_name = file_name.strip()\n                    file_append = -1\n            else:\n                file_content.append(row)\n                    \n        if file_name and len(file_content)>0:\n            output(file_name, file_append, file_content)\n\n    if prj.encoded_zip:\n        bcontent = base64.decodebytes(prj.encoded_zip.encode('utf-8'))\n        bstream = io.BytesIO(bcontent)\n        with zipfile.ZipFile(bstream, \"r\") as izip:\n            izip.extractall(base_path)\n\n    success = True\n\n    if platform_name()!='Android' and prj.install_file:\n        init_str = \"[DEFAULT]\\n\"+prj.install_file\n        config = configparser.ConfigParser(allow_no_value=True)\n        config.read_string(init_str)\n        pip_str = config['DEFAULT']['pip']\n        if pip_str:\n            prjlib_path  = os.path.join(base_path, \"prjlib\")\n            if not os.path.exists(prjlib_path):\n                os.mkdir(prjlib_path)\n            packages = [ x.strip() for x in pip_str.split(' ') if x ]\n            exit_code, output_tab, err_tab = py_run(['-m', 'pip', \"--disable-pip-version-check\", 'install', f'--target={prjlib_path}', '--upgrade', ] + packages)\n            if output_tab:\n                for pos in output_tab:\n                    if pos:\n                        object_list.append((datetime.datetime.now(), \"pip info\", pos))\n            if err_tab:\n                for pos in err_tab:\n                    if pos:\n                        object_list.append((datetime.datetime.now(), \"pip error\", pos))\n                        success = False\n    if success:    \n        object_list.append((datetime.datetime.now(), 'SUCCESS:', \"\"))    \n    else:\n        object_list.append((datetime.datetime.now(), 'ERRORS:', \"\"))    \n\n    (exit_code, output_tab, err_tab) = make(settings.DATA_PATH, base_path)\n    if output_tab:\n        for pos in output_tab:\n            if pos:\n                object_list.append((datetime.datetime.now(), \"compile info\", pos))\n    if err_tab:\n        for pos in err_tab:\n            if pos:\n                object_list.append((datetime.datetime.now(), \"compile error\", pos))\n                success = False\n        \n    return object_list\n\n"
            },
            [
                [
                    {
                        "base_table": "JSONModel",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChAppSet",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "filter_fields = {\n    'name': ['exact', 'icontains', 'istartswith'],\n}\n\ndef get_ext_pytigon_apps(self, tab=None):\n    if tab:\n        ret = tab\n    else:\n        ret = []\n    if self.ext_apps:\n        #if self.ext_apps == '*':\n        #    appset_list = SChAppSet.objects.all()\n        #    for pos in appset_list:\n        #        if pos.name == self.name or not pos.public:\n        #            continue\n        #        app_list = pos.schapp_set.all()\n        #        for pos2 in app_list:\n        #            name = pos.name+\".\"+pos2.name\n        #            if not name in ret:\n        #                ret.append(name)\n        #    return ret\n        #else:\n        l=self.ext_apps.split(',')\n    else:\n        return ret\n    for a in l:\n        if a !='' and not a.startswith('@'):\n            if not a in ret:\n                ret.append(a)\n    return ret\n\ndef get_ext_apps(self, tab=None):\n    if tab:\n        ret = tab\n    else:\n        ret = []\n    if self.ext_apps:\n        l=self.ext_apps.split(',')\n    else:\n        return ret\n    for a in l:\n        if a.startswith('@'):\n            a = a[1:]\n            if a !='':\n                if not a in ret:\n                    ret.append(a)\n    return ret\n\ndef get_ext_apps_without_pack(self):\n    ret = []\n    if self.ext_apps:\n        l=self.ext_apps.split(',')\n        for a in l:\n            if a !='' and not a.startswith('@'):\n                if '.' in a:\n                    ret.append(a.split('.')[1])\n                else:\n                    ret.append(a)\n    return ret\n\ndef get_ext_modules(self):\n    ret = []\n    if self.ext_apps:\n        l=self.ext_apps.split(',')\n        for a in l:\n            if not a.startswith('@'):\n                elms=a.split('.')\n                if len(elms)>1:\n                    module=elms[-2]\n                    ret.append(module)\n    return ret\n\ndef icon_exists(self):\n    return self.icon or self.icon_code\n\ndef get_icon(self):\n    if self.icon_code:\n        return \"data:image/svg+xml;utf8,\" + self.icon_code\n    else:\n        return self.icon\n\ndef __str__(self):\n    return self.name\n\n@classmethod\ndef table_action(cls, list_view, request, data):\n    return standard_table_action(cls, list_view, request, data, ['copy', 'paste'])\n\n@staticmethod\ndef filter(f):\n    if f == 'main_view':\n        return SChAppSet.objects.filter(main_view=True)\n    elif f == 'not_main_view':\n        return SChAppSet.objects.filter(main_view=False)\n    else:\n        return SChAppSet.objects.all()\n",
                        "url_params": null,
                        "verbose_name": "Application package",
                        "verbose_name_plural": "Application packages"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Title",
                            "editable": true,
                            "help_text": "",
                            "name": "title",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "'latest'",
                            "description": "Version",
                            "editable": true,
                            "help_text": null,
                            "name": "version",
                            "null": true,
                            "param": "max_length=16",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "True",
                            "description": "Show in main view",
                            "editable": true,
                            "help_text": null,
                            "name": "main_view",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Extern applications",
                            "editable": true,
                            "help_text": "",
                            "name": "ext_apps",
                            "null": true,
                            "param": "max_length=4096",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Plugins",
                            "editable": true,
                            "help_text": "",
                            "name": "plugins",
                            "null": true,
                            "param": "max_length=4096",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "Gui_CHOICES",
                            "db_index": false,
                            "default": "",
                            "description": "Gui type",
                            "editable": true,
                            "help_text": "",
                            "name": "gui_type",
                            "null": false,
                            "param": "max_length=32",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Gui elements",
                            "editable": true,
                            "help_text": "",
                            "name": "gui_elements",
                            "null": true,
                            "param": "max_length=1024",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Login required",
                            "editable": true,
                            "help_text": null,
                            "name": "login_required",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Public",
                            "editable": true,
                            "help_text": null,
                            "name": "public",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Main project",
                            "editable": true,
                            "help_text": null,
                            "name": "main",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Start page",
                            "editable": true,
                            "help_text": "",
                            "name": "start_page",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "User application template",
                            "editable": false,
                            "help_text": "",
                            "name": "user_app_template",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Main application entrypoint",
                            "editable": false,
                            "help_text": null,
                            "name": "app_main",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Doc",
                            "editable": false,
                            "help_text": "",
                            "name": "doc",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "HtmlGui_CHOICES",
                            "db_index": false,
                            "default": "'auto'",
                            "description": "Gui type for pc web browser",
                            "editable": true,
                            "help_text": "",
                            "name": "desktop_gui_type",
                            "null": false,
                            "param": "max_length=32",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "HtmlGui_CHOICES",
                            "db_index": false,
                            "default": "'auto'",
                            "description": "Gui type for smartfon",
                            "editable": true,
                            "help_text": "",
                            "name": "smartfon_gui_type",
                            "null": false,
                            "param": "max_length=32",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "HtmlGui_CHOICES",
                            "db_index": false,
                            "default": "'auto'",
                            "description": "Gui type for tablet",
                            "editable": true,
                            "help_text": "",
                            "name": "tablet_gui_type",
                            "null": false,
                            "param": "max_length=32",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "User parameter",
                            "editable": true,
                            "help_text": "",
                            "name": "user_param",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Custom tags",
                            "editable": true,
                            "help_text": "",
                            "name": "custom_tags",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "README.md",
                            "editable": false,
                            "help_text": null,
                            "name": "readme_file",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "LICENSE",
                            "editable": false,
                            "help_text": null,
                            "name": "license_file",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "install.ini",
                            "editable": false,
                            "help_text": "",
                            "name": "install_file",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Encoded zip file",
                            "editable": false,
                            "help_text": "",
                            "name": "encoded_zip",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Icon",
                            "editable": true,
                            "help_text": null,
                            "name": "icon",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": "IconSize_CHOICES",
                            "db_index": false,
                            "default": "'1'",
                            "description": "Icon size",
                            "editable": true,
                            "help_text": null,
                            "name": "icon_size",
                            "null": false,
                            "param": "max_length=1",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Icon code (svg)",
                            "editable": false,
                            "help_text": null,
                            "name": "icon_code",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Git repository",
                            "editable": true,
                            "help_text": null,
                            "name": "git_repository",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Autor name",
                            "editable": true,
                            "help_text": null,
                            "name": "autor_name",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Autor email",
                            "editable": true,
                            "help_text": null,
                            "name": "autor_email",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Autor www page",
                            "editable": true,
                            "help_text": null,
                            "name": "autor_www",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "JSONModel",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChApp",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "filter_fields = {\n    'name': ['exact', 'icontains', 'istartswith'],\n}\n\ndef get_models(self):\n    ret = [\"'self'\", ]\n    for app in self.parent.schapp_set.all():\n        for tab in app.schtable_set.all():\n            if app.name == self.name:\n                ret.append(tab.name)\n            else:\n                ret.append(app.name+\".\"+tab.name)\n    if self.parent.ext_apps:\n        ext_apps = self.parent.ext_apps.split(',')\n    else:\n        ext_apps = []\n    if len(ext_apps)>0:\n        for ext_app in ext_apps:\n            if 'schserw.' in ext_app:\n                try:\n                    module = __import__(ext_app+'.models')\n                    app = getattr(module,ext_app.split('.')[1])\n                    models = getattr(app,'models')\n                    for name in dir(models):\n                        obj = getattr(models, name)\n                        if inspect.isclass(obj):\n                            ret.append(ext_app+\".\"+name)\n                except:\n                    pass\n        for ext_app in ext_apps:\n            if not 'schserw.' in ext_app:\n                try:\n                    appset = ext_app.split('.')[0]\n                    appname = ext_app.split('.')[1]\n                    appsetpath = norm_path(os.path.dirname(__file__)+\"/../../\"+appset)\n                    if not appsetpath in sys.path:\n                        sys.path.append(appsetpath)\n                    module = __import__(appname+'.models')\n                    models = getattr(module,'models')\n                    for name in dir(models):\n                        obj = getattr(models, name)\n                        if inspect.isclass(obj):\n                            ret.append(appname+\".\"+name)\n                except:\n                    pass\n    return ret\n\ndef get_urls(self, main=False):\n    ret = []\n    for table in self.schtable_set.all():\n        if table.generic:\n            ret.append('table/' + table.name +\"/-/form/list/\")\n        for field in table.schfield_set.all():\n            if field.is_rel():\n                if field.type[0]=='G':\n                    if field.name == 'parent' and field.rel_to == \"'self'\":\n                        ret.append('table/'+table.name+\"/0/form/tree/\")\n    for view in self.schview_set.all():\n        if view.url and view.url != \"\":\n            if not main:\n                if view.view_type=='r':\n                    url = 'table/' +  view.url + \"/<<pk>>/action/\"+view.name+\"/\"\n                    ret.append(url)\n            if view.view_type=='t':\n                url = 'table/' +  view.url + \"/action/\"+view.name+\"/\"\n                ret.append(url)\n            if view.view_type=='u':\n                if not (main and '?P' in view.url):\n                    ret.append(view.url)\n    for template in self.schtemplate_set.all():\n        if template.direct_to_template:\n            ret.append(template.get_url_name())\n    #for wiki in Page.objects.all(): \n     #   url = 'schwiki/{{%s}}/{{%s}}/view/' % (wiki.subject, wiki.name)\n     #   ret.append(url)             \n    for form in self.schform_set.all():\n        if not form.name.startswith('_'):\n            ret.append('form/' + form.name +\"/\")\n    return ret\n\ndef model_code_start(self):\n    if self.model_code:\n        return self.model_code.split('[[[GEN]]]')[0]\n    else:\n        return \"\"\n    \ndef model_code_end(self):\n    if self.model_code:\n        x = self.model_code.split('[[[GEN]]]')\n        if len(x)>1:\n            return x[1]\n    return \"\"\n\ndef icon_exists(self):\n    return self.icon or self.icon_code\n\ndef get_icon(self):\n    if self.icon_code:\n        return \"data:image/svg+xml;utf8,\" + self.icon_code\n    else:\n        return self.icon\n\ndef __str__(self):\n    return self.name\n",
                        "url_params": null,
                        "verbose_name": "SChApp",
                        "verbose_name_plural": "SChApp"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChAppSet",
                            "type": "PtigForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Module title",
                            "editable": true,
                            "help_text": "",
                            "name": "module_title",
                            "null": true,
                            "param": "max_length=32",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Title",
                            "editable": true,
                            "help_text": "",
                            "name": "title",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "False",
                            "description": "Perms",
                            "editable": true,
                            "help_text": "",
                            "name": "perms",
                            "null": false,
                            "param": "",
                            "rel_to": "",
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Index",
                            "editable": true,
                            "help_text": "",
                            "name": "index",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Model code",
                            "editable": false,
                            "help_text": "",
                            "name": "model_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "View code",
                            "editable": false,
                            "help_text": "",
                            "name": "view_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Urls code",
                            "editable": false,
                            "help_text": "",
                            "name": "urls_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Tasks code",
                            "editable": true,
                            "help_text": "",
                            "name": "tasks_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Consumer code",
                            "editable": true,
                            "help_text": null,
                            "name": "consumer_code",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Doc",
                            "editable": false,
                            "help_text": "",
                            "name": "doc",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Urser parameter",
                            "editable": true,
                            "help_text": "",
                            "name": "user_param",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Icon",
                            "editable": true,
                            "help_text": null,
                            "name": "icon",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": "IconSize_CHOICES",
                            "db_index": false,
                            "default": "'1'",
                            "description": "Icon size",
                            "editable": true,
                            "help_text": null,
                            "name": "icon_size",
                            "null": false,
                            "param": "max_length=1",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Icon code",
                            "editable": false,
                            "help_text": null,
                            "name": "icon_code",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChChoice",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def __str__(self):\n    return self.name",
                        "url_params": "",
                        "verbose_name": "SChChoice",
                        "verbose_name_plural": "SChChoice"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Verbose name",
                            "editable": true,
                            "help_text": "",
                            "name": "verbose_name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChChoiceItem",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def __str__(self):\n    return self.name",
                        "url_params": "",
                        "verbose_name": "SChChoiceItem",
                        "verbose_name_plural": "SChChoiceItem"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChChoice",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Value",
                            "editable": true,
                            "help_text": "",
                            "name": "value",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChTable",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def get_models(self):\n    return self.parent.get_models()\n\ndef get_base_table(self):\n    l = self.base_table.split('.')\n    if len(l)>1 and l[-2]!='models':\n        return l[-1]\n    else:\n        return self.base_table\n\ndef fields_have_parent(self):\n    return self.schfield_set.filter(name='parent').count()>0\n\ndef __str__(self):\n    return self.name",
                        "url_params": "",
                        "verbose_name": "SChTable",
                        "verbose_name_plural": "SChTable"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Base table",
                            "editable": true,
                            "help_text": "",
                            "name": "base_table",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Verbose name",
                            "editable": true,
                            "help_text": "",
                            "name": "verbose_name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Verbose name plural",
                            "editable": true,
                            "help_text": "",
                            "name": "verbose_name_plural",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Metaclass code",
                            "editable": false,
                            "help_text": "",
                            "name": "metaclass_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Table code",
                            "editable": false,
                            "help_text": "",
                            "name": "table_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "\"['id']\"",
                            "description": "Ordering",
                            "editable": true,
                            "help_text": "",
                            "name": "ordering",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Doc",
                            "editable": false,
                            "help_text": "",
                            "name": "doc",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "False",
                            "description": "Generic",
                            "editable": true,
                            "help_text": "",
                            "name": "generic",
                            "null": false,
                            "param": "",
                            "rel_to": "",
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Url params",
                            "editable": true,
                            "help_text": "",
                            "name": "url_params",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Proxy model",
                            "editable": true,
                            "help_text": "",
                            "name": "proxy_model",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChField",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def init_new(self, request, view, param=None):\n    if param:\n        self.type=param\n\n        defaults=self.get_field_defaults()\n        defaults['type'] = param\n\n        for key in defaults:\n            value = getattr(self, key)\n            if not value:\n                setattr(self, key, defaults[key])\n        return defaults\n    else:\n        return None\n\ndef save(self, force_insert=False, force_update=False):\n    super(SChField, self).save(force_insert, force_update)\n\ndef __str__(self):\n    return self.name\n\ndef is_rel(self):\n    if 'Key' in self.type or 'Many' in self.type or 'OneToOne' in self.type:\n        return True\n    else:\n        return False\n\ndef is_generic_rel(self):\n    if self.is_rel() and self.type[0]=='G':\n        return True\n    else:\n        return False\n \ndef has_choices(self):\n    if self.type in ('CharField',):\n        return True\n    else:\n        return False\n\ndef get_models(self):\n    return self.parent.get_models()\n\ndef as_declaration(self):\n    #if 'TreeForeignKey' in self.type:\n    #    if not self.parent.base_table in (\"\", \"models.Model\"):\n    #        return \"\"\n    \n    if self.type == 'NullBooleanField':\n        self.type = 'BooleanField'\n        self.null = True\n    \n    if self.type == 'UserField':\n        return self.param\n    type_desc = dict(Field_CHOICES)[self.type]\n    if type_desc.endswith('!'):\n        module = \"ext_models.\"\n    else:\n        module = 'models.'\n    if self.is_rel():\n        rel_model =self.rel_to.split('.')[-1]\n        #if self.type.startswith('Ptig'):\n        #    if 'ForeignKey' in self.type:\n        #        ret = \"%s = %s%s(%s, on_delete=models.CASCADE, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n        #            (self.name, module, self.type[1:], rel_model, self.null, self.blank, self.editable, self.description)\n        #    else:\n        #        ret = \"%s = %s%s(%s, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n        #            (self.name, module, self.type[1:], rel_model, self.null, self.blank, self.editable, self.description)\n        #else:\n        if 'ForeignKey' in self.type or 'OneToOne' in self.type:\n            ret = \"%s = %s%s(%s, on_delete=models.CASCADE, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n                (self.name, module, self.type, rel_model, self.null, self.blank, self.editable, self.description)\n        else:\n            ret = \"%s = %s%s(%s, null=%s, blank=%s, editable=%s, verbose_name='%s', \" % \\\n                (self.name, module, self.type, rel_model, self.null, self.blank, self.editable, self.description)\n    else:\n        ret = \"%s = %s%s('%s', null=%s, blank=%s, editable=%s, \" % \\\n            (self.name, module, self.type, self.description, self.null, self.blank, self.editable)\n    if self.unique:\n        ret+= \"unique=%s,\" % self.unique\n    if self.default and len(self.default)>0:\n        ret+= \"default=%s,\" % self.default\n    if self.help_text and len(self.help_text)>0:\n        ret+= \"help_text=%s,\" % self.help_text\n    if self.choices:\n        ret+=\"choices=%s,\" % self.choices\n    if self.param and len(self.param)>0:\n        ret+= self.param\n        #.replace(':','=')\n    ret += \")\"\n    return ret\n\ndef get_field_defaults(self):\n    ret = field_default.copy()\n    if self.type in field_defaults:\n        for key, value in field_defaults[self.type].items():\n            ret[key]=value\n    return ret\n\ndef get_rel_to(self):\n    if self.rel_to == \"'self'\":\n        return self.parent.name\n    else:\n        return self.rel_to\n        \ndef get_relate_set_name(self):\n    if self.param and 'related_name' in self.param:\n        for pos in self.param.split(','):\n            rec=pos.split('=')\n            if rec[0].strip()=='related_name':\n                return rec[1].replace(\"'\",\"\").replace(\"\\\"\",\"\").strip()\n    return self.parent.name.lower()+'_set'\n    \n@classmethod\ndef table_action(cls, list_view, request, data):\n    return standard_table_action(cls, list_view, request, data, ['copy', 'paste'])\n",
                        "url_params": "",
                        "verbose_name": "SChField",
                        "verbose_name_plural": "SChField"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChTable",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Description",
                            "editable": true,
                            "help_text": "",
                            "name": "description",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "Field_CHOICES",
                            "db_index": false,
                            "default": "",
                            "description": "Type",
                            "editable": true,
                            "help_text": "",
                            "name": "type",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "False",
                            "description": "Null",
                            "editable": true,
                            "help_text": "",
                            "name": "null",
                            "null": false,
                            "param": "",
                            "rel_to": "",
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "False",
                            "description": "Blank",
                            "editable": true,
                            "help_text": "",
                            "name": "blank",
                            "null": false,
                            "param": "",
                            "rel_to": "",
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "False",
                            "description": "Editable",
                            "editable": true,
                            "help_text": "",
                            "name": "editable",
                            "null": false,
                            "param": "",
                            "rel_to": "",
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "False",
                            "description": "Unique",
                            "editable": true,
                            "help_text": "",
                            "name": "unique",
                            "null": false,
                            "param": "",
                            "rel_to": "",
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "False",
                            "description": "DB index",
                            "editable": true,
                            "help_text": "",
                            "name": "db_index",
                            "null": false,
                            "param": "",
                            "rel_to": "",
                            "type": "BooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Default",
                            "editable": true,
                            "help_text": "",
                            "name": "default",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Help text",
                            "editable": true,
                            "help_text": "",
                            "name": "help_text",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Choices",
                            "editable": true,
                            "help_text": "",
                            "name": "choices",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Relation to",
                            "editable": true,
                            "help_text": "",
                            "name": "rel_to",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Param",
                            "editable": true,
                            "help_text": "",
                            "name": "param",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Url params",
                            "editable": true,
                            "help_text": "",
                            "name": "url_params",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChView",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def init_new(self, request, view, param=None):\n    if param:\n        self.view_type=param\n        defaults={}\n        defaults['view_type'] = param\n        if param=='r':\n            self.param = 'pk'\n            defaults['param'] = self.param\n        if param=='t':\n            pass\n        if param=='u':\n            defaults['param'] = '**argv'\n            defaults['url_params'] = '{}'\n            defaults['url'] = 'fun/(?P<parm>\\d+)/$'\n        return defaults\n    else:\n        return None\n\ndef get_name(self):\n    if '/' in self.name:\n        return self.name.split('/')[-1]\n    elif '#' in self.name:\n        return self.name.split('#')[0]\n    else:\n        return self.name\n\ndef get_url(self):\n    name = self.get_name()\n    if self.view_type == 'u':\n        if '(?P' in self.url:\n            if self.url_params and self.url_params!=\"\":\n                return \"re_path('%s', views.%s, %s, name='%s')\" % (self.url, name, self.url_params, self.parent.name+\"_\"+name)\n            else:\n                return \"re_path('%s', views.%s, name='%s')\" % (self.url, name, self.parent.name+\"_\"+name)\n        else:\n            if self.url_params and self.url_params!=\"\":\n                return \"path('%s', views.%s, %s, name='%s')\" % (self.url, name, self.url_params, self.parent.name+\"_\"+name)\n            else:\n                return \"path('%s', views.%s, name='%s')\" % (self.url, name, self.parent.name+\"_\"+name)            \n    else:\n        if self.view_type == 'r':\n            bname='gen_row_action'\n        else:\n            bname='gen_tab_action'\n    \n        if self.url_params and self.url_params!=\"\":\n            if '#' in self.name:\n                x = self.name.split('#')\n                return \"%s('%s', '%s', views.%s, %s)\" % (bname, self.url, x[0], x[1], self.url_params)\n            else:\n                return \"%s('%s', '%s', views.%s, %s)\" % (bname, self.url, self.name, name,self.url_params)\n        else:\n            if '#' in self.name:\n                x = self.name.split('#')\n                return \"%s('%s', '%s', views.%s)\" % (bname, self.url, x[0], x[1])\n            else:\n                return \"%s('%s', '%s', views.%s)\" % (bname, self.url, self.name, name)\n\ndef __str__(self):\n    return self.name\n\ndef transform_template_name(self, request, template_name):\n    if '/view_code/py/editor' in request.path:\n        if template_name == 'schsys/db_field_edt.html':\n            return 'schbuilder/db_field_edt_mod.html'\n    return template_name\n\ndef get_models(self):\n    return self.parent.get_models()\n\ndef clean_url(self):\n    return self.url.replace('$', '')\n    \ndef view_code_start(self):\n    if self.extra_code:\n        return self.extra_code.split('[[[GEN]]]')[0]\n    else:\n        return \"\"\n    \ndef view_code_end(self):\n    if self.extra_code:\n        x = self.extra_code.split('[[[GEN]]]')\n        if len(x)>1:\n            return x[1]\n    return \"\"\n",
                        "url_params": "",
                        "verbose_name": "SChView",
                        "verbose_name_plural": "SChView"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "View_CHOICES",
                            "db_index": false,
                            "default": "",
                            "description": "View type",
                            "editable": true,
                            "help_text": "",
                            "name": "view_type",
                            "null": false,
                            "param": "max_length=1",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Param",
                            "editable": true,
                            "help_text": "",
                            "name": "param",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Url",
                            "editable": true,
                            "help_text": "",
                            "name": "url",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "View code",
                            "editable": false,
                            "help_text": "",
                            "name": "view_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Url params",
                            "editable": true,
                            "help_text": "",
                            "name": "url_params",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "ViewRetType_CHOICES",
                            "db_index": false,
                            "default": "'U'",
                            "description": "Return value type",
                            "editable": true,
                            "help_text": "",
                            "name": "ret_type",
                            "null": false,
                            "param": "max_length=1",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Async",
                            "editable": true,
                            "help_text": null,
                            "name": "asynchronous",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Extra code",
                            "editable": false,
                            "help_text": null,
                            "name": "extra_code",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Doc",
                            "editable": false,
                            "help_text": "",
                            "name": "doc",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChStatic",
                        "ordering": "['id']",
                        "proxy_model": "",
                        "table_code": "def __str__(self):\n    return self.get_type_display() + \"/\" + self.name\n",
                        "url_params": "",
                        "verbose_name": "Static file",
                        "verbose_name_plural": "Static files"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChAppSet",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "Static_CHOICES",
                            "db_index": false,
                            "default": "",
                            "description": "Type",
                            "editable": true,
                            "help_text": "",
                            "name": "type",
                            "null": false,
                            "param": "max_length=1",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Code",
                            "editable": false,
                            "help_text": "",
                            "name": "code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Doc",
                            "editable": false,
                            "help_text": "",
                            "name": "doc",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChTemplate",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "TAG_LIBS = [ \n    \"cache\",\n    \"i18n\",\n    \"l10n\",\n    \"static\",\n    \"tz\",\n    \"log\",\n    \"catch\",\n    \"collapse\",\n    \"defexfiltry\",\n    \"exfiltry\",\n    \"expr\",\n    \"exsyntax\",\n    \"htmlwidget\",\n    \"mptt_tags\",\n    \"compress\",\n]\n\ndef get_url_name(self):\n    if self.url and self.url!=\"\":\n        return self.url\n    else:\n        return self.name\n\ndef get_url(self):\n    if self.direct_to_template:\n        url_name = self.get_url_name()\n        app_name = self.parent.name\n        template_name = self.name.lower().replace(' ','_')+\".html\"\n        if self.url_parm:\n            param = self.url_parm\n        else:\n            param = \"\"\n        if '(?P' in self.url:\n            return \"re_path(r'^%s', TemplateView.as_view(template_name='%s/%s'), {%s})\" % (url_name, app_name, template_name, param )\n        else:\n            return \"path('%s', TemplateView.as_view(template_name='%s/%s'), {%s})\" % (url_name, app_name, template_name, param )\n    else:\n        return None\n            \ndef _get_table_fields(self, table):\n    ret=[]\n    if table:\n        for pos in table.schfield_set.all():\n            ret.append(pos)\n        if table.base_table and table.base_table != None:\n            tables = SChTable.objects.filter(name=table.base_table)\n            if len(tables)>0:\n                ret2 = self._get_table_fields(SChTable.objects.filter(name=tables[0].base_table))\n                for pos in ret2:\n                    ret.append(pos)\n    return ret\n\ndef get_table_fields(self):\n    return self._get_table_fields(self.get_rel_table())\n\ndef get_all_table_fields(self):\n    return [pos.name for pos in self._get_table_fields(self.get_rel_table())]\n\ndef get_rel_table_fields(self):\n    return [pos.name for pos in self._get_table_fields(self.get_rel_table())]\n\ndef get_edit_table_fields(self):\n    return list([pos.name for pos in self._get_table_fields(self.get_rel_table()) if pos.type == \"TextField\" ])\n\ndef get_rel_table(self):\n    tables = self.parent.schtable_set.filter(parent=self.parent).filter(name=self.name)\n    if len(tables)>0:\n        return tables[0]\n    else:\n        return None\n\ndef get_table_methods(self):\n    ret=[]\n    table = self.get_rel_table()\n    if table:\n        if table.table_code:\n            for line in table.table_code.split('\\n'):\n                if line.startswith('def'):\n                    buf = line[4:].replace(' ', '')\n                    if '(self)' in buf and not buf.startswith('_'):\n                        ret.append(buf.split('(')[0])\n    return ret\n\ndef get_tables_for_template(self):\n    app = self.parent\n    app_set = app.parent\n    buf = []\n    object_list = app_set.schapp_set.all()\n    for pos in object_list:\n        buf.append(pos)\n    ext_apps = app_set.ext_apps\n    if ext_apps:\n        app_list = ext_apps.replace(\";\", \",\").split(\",\")\n        for pos in app_list:\n            if \".\" in pos:\n                app_set_str, app_str = pos.split(\".\")\n                object_list = SChApp.objects.filter(\n                    parent__name=app_set_str, name=app_str\n                )\n                if len(object_list) > 0:\n                    buf.append(object_list[0])\n    ret = []\n    for pos in buf:\n        for table in pos.schtable_set.all():\n            ret.append(table)\n    return ret\n\ndef get_table_rel_fields(self):\n    table = self.get_rel_table()\n    ret = []\n    if table:\n        tables = self.get_tables_for_template()\n        for table2 in tables:\n            field_list = table2.schfield_set.all()\n            for field in field_list:\n                if field.rel_to == table.name:\n                    if field.param and 'related_name' in field.param:\n                        x = field.param.replace(' ','').split('related_name=')[1].replace('\"', \"'\").split(\"'\")[1]\n                        ret.append(x)\n                    else:\n                        ret.append(table2.name.lower()+\"_set\")\n    return ret\n\ndef get_django_filters(self):\n    ret = []\n    django_engine = engines['django'].engine\n    for pos in django_engine.template_builtins:\n        for f in pos.filters:\n            ret.append(f)\n    return ret\n\ndef get_django_tags(self):\n    ret = []\n    django_engine = engines['django'].engine\n    for pos in django_engine.template_builtins:\n        for f in pos.tags:\n            ret.append(f)\n    return ret\n\ndef get_pytigon_filters(self):\n    ret = []\n    for name, lib in engines['django'].engine.template_libraries.items():\n        if name in self.TAG_LIBS:\n            for name in lib.filters:\n                ret.append(name)\n    return ret\n\ndef get_pytigon_tags(self):\n    ret = []\n    for name, lib in engines['django'].engine.template_libraries.items():\n        if name in self.TAG_LIBS:\n            for name in lib.tags:\n                ret.append(name)\n    return ret\n\ndef get_blocks(self):\n    ret=[]\n    form_path = os.path.join(os.path.dirname(pytigon.__file__),\"templates\", \"base0.html\")\n    f = open(form_path, \"rt\")\n    buf = f.read()\n    f.close()\n    for line in buf.split('\\n'):\n        line2 = line.strip()\n        if line2.startswith('{% block'):\n            ret.append(line2.split(' ',3)[2])\n    return ret\n\ndef get_template_widgets(self):\n    return widgets\n\ndef transform_template_name(self, request, template_name):\n    if 'template_code/py/editor' in request.path:\n        if template_name == 'schsys/db_field_edt.html':\n            return 'schbuilder/db_field_edt_template.html'\n    return template_name\n\ndef __str__(self):\n    return self.name\n    ",
                        "url_params": "",
                        "verbose_name": "SChTemplate",
                        "verbose_name_plural": "SChTemplate"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Direct to template",
                            "editable": true,
                            "help_text": "",
                            "name": "direct_to_template",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Url",
                            "editable": true,
                            "help_text": "",
                            "name": "url",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parameters passed to the template",
                            "editable": true,
                            "help_text": "",
                            "name": "url_parm",
                            "null": true,
                            "param": "max_length=128",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Template code",
                            "editable": false,
                            "help_text": "",
                            "name": "template_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Static files",
                            "editable": true,
                            "help_text": "",
                            "name": "static_files",
                            "null": true,
                            "param": "",
                            "rel_to": "SChStatic",
                            "type": "ManyToManyField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Mount component tags",
                            "editable": true,
                            "help_text": "",
                            "name": "tags_mount",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Async",
                            "editable": true,
                            "help_text": null,
                            "name": "asynchronous",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": "",
                        "generic": true,
                        "metaclass_code": "",
                        "name": "SChAppMenu",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def not_standard_icon_size(self):\n    if self.icon_size=='1':\n        return False\n    else:\n        return True\n\ndef icon_exists(self):\n    return self.icon or self.icon_code\n\ndef get_icon(self):\n    if self.icon_code:\n        return \"data:image/svg+xml;utf8,\" + self.icon_code\n    else:\n        return self.icon\n\ndef get_perms(self):\n    if self.perms and self.perms!=\" \":\n        return \"'%s'\" % self.perms\n    else:\n        return \"None\"\n\ndef get_main_urls(self):\n    return self.parent.get_urls(main=True)\n\ndef get_urls(self):\n    return self.parent.get_urls(main=False)\n\ndef get_url_type_ext(self):\n    if self.url_type in [None, '-']:\n        return \"?schtml=desktop\"\n    elif self.url_type == 'browser':\n        return ''\n    else:\n        return '?schtml='+self.url_type\n\ndef clean_url(self):\n    return self.url.replace('$', '')\n\ndef __str__(self):\n    return self.name",
                        "url_params": "",
                        "verbose_name": "SChAppMenu",
                        "verbose_name_plural": "SChAppMenu"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Url",
                            "editable": true,
                            "help_text": "",
                            "name": "url",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "Url_CHOICES",
                            "db_index": false,
                            "default": "'-'",
                            "description": "Url type",
                            "editable": true,
                            "help_text": "",
                            "name": "url_type",
                            "null": true,
                            "param": "max_length=16",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Perms",
                            "editable": true,
                            "help_text": "",
                            "name": "perms",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Icon",
                            "editable": true,
                            "help_text": null,
                            "name": "icon",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": false,
                            "choices": "IconSize_CHOICES",
                            "db_index": false,
                            "default": "'1'",
                            "description": "Icon size",
                            "editable": true,
                            "help_text": "",
                            "name": "icon_size",
                            "null": false,
                            "param": "max_length=1",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Icon code (svg)",
                            "editable": false,
                            "help_text": null,
                            "name": "icon_code",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChForm",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": null,
                        "url_params": "",
                        "verbose_name": "Form",
                        "verbose_name_plural": "Form"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Module",
                            "editable": true,
                            "help_text": "",
                            "name": "module",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Process code",
                            "editable": true,
                            "help_text": "",
                            "name": "process_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "End class code",
                            "editable": true,
                            "help_text": "",
                            "name": "end_class_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "End code",
                            "editable": true,
                            "help_text": "",
                            "name": "end_code",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": "False",
                            "description": "Async",
                            "editable": true,
                            "help_text": null,
                            "name": "asynchronous",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Doc",
                            "editable": true,
                            "help_text": "",
                            "name": "doc",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChFormField",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def init_new(self, request, view, param=None):\n    if param:\n        self.type=param\n\n        defaults=self.get_field_defaults()\n        defaults['type'] = param\n\n        for key in defaults:\n            setattr(self, key, defaults[key])\n        return defaults\n    else:\n        return None\n\ndef as_declaration(self):    \n    if self.type == 'UserField':\n        return self.param\n    if hasattr(ext_form_fields, self.type):\n        ret = \"%s = ext_form_fields.%s(label=_('%s'), required=%s, \" % \\\n                (self.name, self.type, self.label, self.required)        \n    else:\n        ret = \"%s = forms.%s(label=_('%s'), required=%s, \" % \\\n                (self.name, self.type, self.label, self.required)\n    if self.initial:\n        ret+= \"initial=%s,\" % self.initial\n    if self.widget and len(self.widget)>0:\n        ret+= \"widget=%s,\" % self.widget\n    if self.help_text and len(self.help_text)>0:\n        ret+= \"help_text=%s,\" % self.help_text\n    if self.error_messages:\n        ret+=\"error_messages=%s,\" % self.error_messages\n    if self.param and len(self.param)>0:\n        ret+= self.param\n    ret += \")\"\n    return ret\n\ndef get_field_defaults(self):\n    ret = formfield_default.copy()\n    if self.type in formfield_defaults:\n        for key, value in formfield_defaults[self.type].items():\n            ret[key]=value\n    return ret",
                        "url_params": "",
                        "verbose_name": "Form field",
                        "verbose_name_plural": "Form field"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChForm",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "FormField_CHOICES",
                            "db_index": false,
                            "default": "",
                            "description": "Type",
                            "editable": true,
                            "help_text": "",
                            "name": "type",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Required",
                            "editable": true,
                            "help_text": "",
                            "name": "required",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Label",
                            "editable": true,
                            "help_text": "",
                            "name": "label",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Initial",
                            "editable": true,
                            "help_text": "",
                            "name": "initial",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Widget",
                            "editable": true,
                            "help_text": null,
                            "name": "widget",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Help text",
                            "editable": true,
                            "help_text": "",
                            "name": "help_text",
                            "null": true,
                            "param": "max_length=256",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Error messages",
                            "editable": true,
                            "help_text": "",
                            "name": "error_messages",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Param",
                            "editable": true,
                            "help_text": null,
                            "name": "param",
                            "null": true,
                            "param": "max_length=1024",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChTask",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def transform_template_name(self, request, template_name):\n    if '/code/py/editor' in request.path:\n        if template_name == 'schsys/db_field_edt.html':\n            return 'schbuilder/db_field_edt_task.html'\n    return template_name\n",
                        "url_params": "",
                        "verbose_name": "SChTask",
                        "verbose_name_plural": "SChTask"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Code",
                            "editable": false,
                            "help_text": null,
                            "name": "code",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Doc",
                            "editable": false,
                            "help_text": null,
                            "name": "doc",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Perms",
                            "editable": true,
                            "help_text": null,
                            "name": "perms",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Publish",
                            "editable": true,
                            "help_text": null,
                            "name": "publish",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "NullBooleanField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Publish group",
                            "editable": true,
                            "help_text": null,
                            "name": "publish_group",
                            "null": true,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChFiles",
                        "ordering": "['id']",
                        "proxy_model": "",
                        "table_code": null,
                        "url_params": "",
                        "verbose_name": "SChFiles",
                        "verbose_name_plural": "SChFiles"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "FileType_CHOICES",
                            "db_index": false,
                            "default": "",
                            "description": "File  type",
                            "editable": true,
                            "help_text": "",
                            "name": "file_type",
                            "null": false,
                            "param": "max_length=3",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=256",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Content",
                            "editable": false,
                            "help_text": "",
                            "name": "content",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChLocale",
                        "ordering": "['id']",
                        "proxy_model": "",
                        "table_code": null,
                        "url_params": "",
                        "verbose_name": "Locale",
                        "verbose_name_plural": "Locales"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChAppSet",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=16",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": "",
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChTranslate",
                        "ordering": "['id']",
                        "proxy_model": "",
                        "table_code": null,
                        "url_params": "",
                        "verbose_name": "Translate",
                        "verbose_name_plural": "Translate"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": false,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChLocale",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Description",
                            "editable": true,
                            "help_text": "",
                            "name": "description",
                            "null": false,
                            "param": "max_length=1024",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Translation",
                            "editable": true,
                            "help_text": "",
                            "name": "translation",
                            "null": true,
                            "param": "max_length=1024",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Status",
                            "editable": false,
                            "help_text": "",
                            "name": "status",
                            "null": true,
                            "param": "max_length=16",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ],
                [
                    {
                        "base_table": null,
                        "doc": null,
                        "generic": true,
                        "metaclass_code": null,
                        "name": "SChChannelConsumer",
                        "ordering": "['id']",
                        "proxy_model": null,
                        "table_code": "def init_new(self, request, view, param=None):\n    if param:\n        self.view_type=param\n        defaults={}\n        defaults['consumer_type'] = param\n        return defaults\n    else:\n        return None\n",
                        "url_params": null,
                        "verbose_name": "Channel consumer",
                        "verbose_name_plural": "Channel consumers"
                    },
                    [
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Parent",
                            "editable": true,
                            "help_text": "",
                            "name": "parent",
                            "null": false,
                            "param": "",
                            "rel_to": "SChApp",
                            "type": "PtigHiddenForeignKey",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Name",
                            "editable": true,
                            "help_text": "",
                            "name": "name",
                            "null": false,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": false,
                            "choices": "Consumer_CHOICES",
                            "db_index": false,
                            "default": null,
                            "description": "Consumer type",
                            "editable": true,
                            "help_text": null,
                            "name": "consumer_type",
                            "null": false,
                            "param": "max_length=64",
                            "rel_to": null,
                            "type": "CharField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Url",
                            "editable": true,
                            "help_text": "",
                            "name": "url",
                            "null": true,
                            "param": "max_length=255",
                            "rel_to": "",
                            "type": "CharField",
                            "unique": false,
                            "url_params": ""
                        },
                        {
                            "blank": true,
                            "choices": null,
                            "db_index": false,
                            "default": null,
                            "description": "Consumer code",
                            "editable": false,
                            "help_text": null,
                            "name": "consumer_code",
                            "null": true,
                            "param": null,
                            "rel_to": null,
                            "type": "TextField",
                            "unique": false,
                            "url_params": null
                        },
                        {
                            "blank": true,
                            "choices": "",
                            "db_index": false,
                            "default": "",
                            "description": "Doc",
                            "editable": false,
                            "help_text": "",
                            "name": "doc",
                            "null": true,
                            "param": "",
                            "rel_to": "",
                            "type": "TextField",
                            "unique": false,
                            "url_params": ""
                        }
                    ]
                ]
            ],
            [
                [
                    {
                        "name": "Field_CHOICES",
                        "verbose_name": "Field_CHOICES"
                    },
                    [
                        {
                            "name": "PtigForeignKey",
                            "value": "GenericForeignKey!"
                        },
                        {
                            "name": "PtigManyToManyField",
                            "value": "GenericManyToManyField!"
                        },
                        {
                            "name": "PtigHiddenForeignKey",
                            "value": "GenericHiddenForeignKey!"
                        },
                        {
                            "name": "UserField",
                            "value": "UserField"
                        },
                        {
                            "name": "PtigForeignKeyWithIcon",
                            "value": "ForeignKeyWithIcon!"
                        },
                        {
                            "name": "PtigManyToManyFieldWithIcon",
                            "value": "ManyToManyFieldWithIcon!"
                        },
                        {
                            "name": "PtigTreeForeignKey",
                            "value": "TreeForeignKey!"
                        }
                    ]
                ],
                [
                    {
                        "name": "Gui_CHOICES",
                        "verbose_name": "Gui_CHOICES"
                    },
                    [
                        {
                            "name": "standard",
                            "value": "standard"
                        },
                        {
                            "name": "modern",
                            "value": "modern"
                        },
                        {
                            "name": "tree",
                            "value": "tree"
                        },
                        {
                            "name": "tray",
                            "value": "tray"
                        },
                        {
                            "name": "dialog",
                            "value": "dialog"
                        },
                        {
                            "name": "one_form",
                            "value": "one_form"
                        }
                    ]
                ],
                [
                    {
                        "name": "IconSize_CHOICES",
                        "verbose_name": "IconSize_CHOICES"
                    },
                    [
                        {
                            "name": "0",
                            "value": "small"
                        },
                        {
                            "name": "1",
                            "value": "medium"
                        },
                        {
                            "name": "2",
                            "value": "large"
                        }
                    ]
                ],
                [
                    {
                        "name": "View_CHOICES",
                        "verbose_name": "View_CHOICES"
                    },
                    [
                        {
                            "name": "t",
                            "value": "Table action"
                        },
                        {
                            "name": "r",
                            "value": "Row action"
                        },
                        {
                            "name": "u",
                            "value": "View"
                        }
                    ]
                ],
                [
                    {
                        "name": "Url_CHOICES",
                        "verbose_name": "Url_CHOICES"
                    },
                    [
                        {
                            "name": "Default",
                            "value": "-"
                        },
                        {
                            "name": "desktop",
                            "value": "desktop"
                        },
                        {
                            "name": "panel",
                            "value": "panel"
                        },
                        {
                            "name": "header",
                            "value": "header"
                        },
                        {
                            "name": "footer",
                            "value": "footer"
                        },
                        {
                            "name": "script",
                            "value": "script"
                        },
                        {
                            "name": "pscript",
                            "value": "pscript"
                        },
                        {
                            "name": "browser",
                            "value": "browser"
                        },
                        {
                            "name": "browser_panel",
                            "value": "prowser_panel"
                        },
                        {
                            "name": "browser_header",
                            "value": "browser_header"
                        },
                        {
                            "name": "browser_footer",
                            "value": "browser_footer"
                        }
                    ]
                ],
                [
                    {
                        "name": "__FormField_CHOICES",
                        "verbose_name": "FormField_CHOICES"
                    },
                    [
                        {
                            "name": "BooleanField",
                            "value": "BooleanField"
                        },
                        {
                            "name": "CharField",
                            "value": "CharField"
                        },
                        {
                            "name": "ChoiceField",
                            "value": "ChoiceField"
                        },
                        {
                            "name": "TypedChoiceField",
                            "value": "TypedChoiceField"
                        },
                        {
                            "name": "DateField",
                            "value": "DateField"
                        },
                        {
                            "name": "DateTimeField",
                            "value": "DateTimeField"
                        },
                        {
                            "name": "DecimalField",
                            "value": "DecimalField"
                        },
                        {
                            "name": "EmailField",
                            "value": "EmailField"
                        },
                        {
                            "name": "FileField",
                            "value": "FileField"
                        },
                        {
                            "name": "FilePathField",
                            "value": "FilePathField"
                        },
                        {
                            "name": "FloatField",
                            "value": "FloatField"
                        },
                        {
                            "name": "ImageField",
                            "value": "ImageField"
                        },
                        {
                            "name": "IntegerField",
                            "value": "IntegerField"
                        },
                        {
                            "name": "IPAddressField",
                            "value": "IPAddressField"
                        },
                        {
                            "name": "GenericIPAddressField",
                            "value": "GenericIPAddressField"
                        },
                        {
                            "name": "MultipleChoiceField",
                            "value": "MultipleChoiceField"
                        },
                        {
                            "name": "TypedMultipleChoiceField",
                            "value": "TypedMultipleChoiceField"
                        },
                        {
                            "name": "NullBooleanField",
                            "value": "NullBooleanField"
                        },
                        {
                            "name": "RegexField",
                            "value": "RegexField"
                        },
                        {
                            "name": "TimeField",
                            "value": "TimeField"
                        },
                        {
                            "name": "URLField",
                            "value": "URLField"
                        },
                        {
                            "name": "UserField",
                            "value": "UserField"
                        }
                    ]
                ],
                [
                    {
                        "name": "ViewRetType_CHOICES",
                        "verbose_name": "ViewRetType_CHOICES"
                    },
                    [
                        {
                            "name": "T",
                            "value": "Template"
                        },
                        {
                            "name": "O",
                            "value": "Odf"
                        },
                        {
                            "name": "P",
                            "value": "Pdf"
                        },
                        {
                            "name": "J",
                            "value": "Json"
                        },
                        {
                            "name": "X",
                            "value": "Xml"
                        },
                        {
                            "name": "U",
                            "value": "User defined"
                        }
                    ]
                ],
                [
                    {
                        "name": "HtmlGui_CHOICES",
                        "verbose_name": "HtmlGui_CHOICES"
                    },
                    [
                        {
                            "name": "auto",
                            "value": "auto"
                        },
                        {
                            "name": "desktop_standard",
                            "value": "desktop_standard"
                        },
                        {
                            "name": "desktop_modern",
                            "value": "desktop_modern"
                        },
                        {
                            "name": "tablet_standard",
                            "value": "tablet_standard"
                        },
                        {
                            "name": "tablet_modern",
                            "value": "tablet_modern"
                        },
                        {
                            "name": "smartfon_standard",
                            "value": "smartfon_standard"
                        },
                        {
                            "name": "smartfon_modern",
                            "value": "smartfon_modern"
                        }
                    ]
                ],
                [
                    {
                        "name": "ContentType_CHOICES",
                        "verbose_name": "ContentType_CHOICES"
                    },
                    [
                        {
                            "name": "pythonjs",
                            "value": "pythonjs"
                        },
                        {
                            "name": "react_pjsx",
                            "value": "react_pjsx"
                        },
                        {
                            "name": "css",
                            "value": "css"
                        },
                        {
                            "name": "js",
                            "value": "js"
                        }
                    ]
                ],
                [
                    {
                        "name": "Static_CHOICES",
                        "verbose_name": "Static_CHOICES"
                    },
                    [
                        {
                            "name": "C",
                            "value": "css (included in desktop.html)"
                        },
                        {
                            "name": "J",
                            "value": "javascript (included in desktop.html)"
                        },
                        {
                            "name": "P",
                            "value": "python to javascript (included in desktop.html)"
                        },
                        {
                            "name": "R",
                            "value": "component (included in desktop.html)"
                        },
                        {
                            "name": "I",
                            "value": "sass to css (included in desktop.html)"
                        },
                        {
                            "name": "U",
                            "value": "custom file (embeded translation for .pyj, .webc, .sass)"
                        },
                        {
                            "name": "G",
                            "value": "component globals"
                        }
                    ]
                ],
                [
                    {
                        "name": "FileType_CHOICES",
                        "verbose_name": "FileType_CHOICES"
                    },
                    [
                        {
                            "name": "f",
                            "value": "TemplateFilters"
                        },
                        {
                            "name": "t",
                            "value": "TemplateTags"
                        },
                        {
                            "name": "c",
                            "value": "Custom file"
                        },
                        {
                            "name": "m",
                            "value": "Management command"
                        },
                        {
                            "name": "p",
                            "value": "Plugin code"
                        },
                        {
                            "name": "i",
                            "value": "Plugin template"
                        },
                        {
                            "name": "l",
                            "value": "Library code"
                        },
                        {
                            "name": "C",
                            "value": "Library c code"
                        },
                        {
                            "name": "x",
                            "value": "Library cython code"
                        },
                        {
                            "name": "s",
                            "value": "GraphQL schema"
                        }
                    ]
                ],
                [
                    {
                        "name": "Consumer_CHOICES",
                        "verbose_name": "Consumer_CHOICES"
                    },
                    [
                        {
                            "name": "WebsocketConsumer",
                            "value": "WebsocketConsumer"
                        },
                        {
                            "name": "AsyncWebsocketConsumer",
                            "value": "AsyncWebsocketConsumer"
                        },
                        {
                            "name": "JsonWebsocketConsumer",
                            "value": "JsonWebsocketConsumer"
                        },
                        {
                            "name": "AsyncJsonWebsocketConsumer",
                            "value": "AsyncJsonWebsocketConsumer"
                        },
                        {
                            "name": "AsyncHttpConsumer",
                            "value": "AsyncHttpConsumer"
                        },
                        {
                            "name": "AsyncConsumer",
                            "value": "AsyncConsumer"
                        },
                        {
                            "name": "SyncConsumer",
                            "value": "SyncConsumer"
                        }
                    ]
                ]
            ],
            [
                {
                    "asynchronous": false,
                    "doc": "",
                    "extra_code": "# Hello",
                    "name": "gen",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": "",
                    "view_code": "return { 'object_list': reversed(build_prj(pk)) }\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": "",
                    "extra_code": null,
                    "name": "prj_export",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChAppSet",
                    "url_params": "",
                    "view_code": "content = prj_export_to_str(pk)\nreturn HttpResponse(content, content_type=\"text/plain\")\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": "",
                    "extra_code": null,
                    "name": "prj_import",
                    "param": "",
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": "",
                    "view_code": "ex_str = request.POST['EDITOR']\nreturn prj_import_from_str(ex_str, backup_old=True)\n",
                    "view_type": "t"
                },
                {
                    "asynchronous": false,
                    "doc": "",
                    "extra_code": null,
                    "name": "manage",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": null,
                    "view_code": "prj = models.SChAppSet.objects.get(id=pk)\nreturn { 'project': prj }\n\n\n#base_path = os.path.join(settings.PRJ_PATH, prj.name)\n#src_path = os.path.join(settings.PRJ_PATH, \"schdevtools\") \n\n#id = \"spec\"\n#task_id = async_task(\"schtasksdemo.tasks.fun2\", task_publish_id=id)\n#return { \"task_id\": task_id, \"id\": \"demo__\"+id }\n\n\n#task_id = async_task(\"schbuilder.views.test\")\n#print(\"TASK_ID: \", task_id)\n#task_id = async_task(\"schbuilder.tasks.test\")\n#new_url = \"../../../tasks/form/TaskListForm/%s/edit2__task\" % task_id\n#return HttpResponseRedirect(new_url)\n        \n#command = \"import sys; sys.path.append('%s'); from manage import *\" % base_path\n#pconsole = settings.PYTHON_CONSOLE.split(' ')\n#pconsole[0]=\">>>\" + pconsole[0]\n#pconsole.append('-i')\n#pconsole.append('-c')\n#pconsole.append(command)\n#param = [\"python-shell\",] + pconsole\n#id = get_process_manager().put(request, *param)\n#new_url = \"../../../tasks/form/TaskListForm/%d/edit2__task\" % id\n#new_url = \"../../schsys/thread/%d/edit/\" % id\n#return HttpResponseRedirect(new_url)",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": "",
                    "extra_code": null,
                    "name": "template_edit",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChTable",
                    "url_params": "",
                    "view_code": "table = models.SChTable.objects.get(id=pk)\ntemplates = models.SChTemplate.objects.filter(parent=table.parent).filter(\n    name=table.name\n)\nif len(templates) == 0:\n    template = models.SChTemplate(parent=table.parent, name=table.name)\n\n    generics = table.schfield_set.filter(\n        type__in=[\n            \"GTreeForeignKey\",\n            \"GHiddenTreeForeignKey\",\n        ]\n    )\n    if len(generics) > 0:\n        template_suffix = \"tree\"\n    else:\n        template_suffix = \"tbl\"\n\n    file_name = settings.PRJ_PATH + (\n        \"/schdevtools/templates_src/schbuilder/wzr/new_generic_%s_template.ihtml\"\n        % template_suffix\n    )\n\n    f = open(file_name, \"rt\")\n    s = f.read()\n    f.close()\n    \n    template.save()\n\n    t = Template(s)\n    try:\n        txt = t.render(Context({'template': template }))\n    except:\n        txt = s\n    template.template_code = txt\n    template.save()\n    \n    id = template.id\nelse:\n    id = templates[0].id\n\nnew_url = make_href(\n    \"/schbuilder/table/SChTemplate/%s/template_code/py/editor/\" % str(id)\n)\n\nreturn HttpResponseRedirect(new_url)\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "prj_import/edit",
                    "param": "",
                    "ret_type": "U",
                    "url": "SChAppSet",
                    "url_params": "",
                    "view_code": "return TemplateView.as_view(template_name='schbuilder/import_form.html')(request)",
                    "view_type": "t"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_up#change_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChField",
                    "url_params": "{'app':'schbuilder', 'tab':'SChField', 'forward':False, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_down#change_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChField",
                    "url_params": "{'app':'schbuilder', 'tab':'SChField', 'forward':True, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_duplicate#duplicate_row",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChField",
                    "url_params": "{'app':'schbuilder', 'tab':'SChField', 'field':'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_up#change_tab_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChTable",
                    "url_params": "{'app':'schbuilder', 'tab':'SChTable', 'forward':False, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_down#change_tab_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChTable",
                    "url_params": "{'app':'schbuilder', 'tab':'SChTable', 'forward':True, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "template_edit2",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChForm",
                    "url_params": "",
                    "view_code": "form = models.SChForm.objects.get(id=pk)\ntemplates = models.SChTemplate.objects.filter(parent=form.parent).filter(name='Form'+form.name)\nif len(templates)==0:\n    template=models.SChTemplate(parent=form.parent, name='Form'+form.name)\n\n    file_name = settings.PRJ_PATH + \"/schdevtools/templates_src/schbuilder/wzr/new_generic_form_template.ihtml\"\n    f = open(file_name, \"rt\")\n    template.template_code = f.read()\n    f.close()\n    template.save()\n    id = template.id\nelse:\n    id = templates[0].id\n        \nnew_url = make_href(\"/schbuilder/table/SChTemplate/%s/template_code/py/editor/\" % str(id))\n\nreturn HttpResponseRedirect(new_url)",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_up#change_menu_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChAppMenu",
                    "url_params": "{'app':'schbuilder', 'tab':'SChAppMenu', 'forward':False, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_down#change_menu_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChAppMenu",
                    "url_params": "{'app':'schbuilder', 'tab':'SChAppMenu', 'forward':True, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "installer",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": "",
                    "view_code": "buf = []\n\ntry:\n    pki = int(pk)\n    prj = models.SChAppSet.objects.get(id=pki)\n    name = prj.name\nexcept:\n    name = pk\n\nif hasattr(pytigon.schserw.settings,\"_PRJ_PATH_ALT\"):\n    base_path = os.path.join(pytigon.schserw.settings._PRJ_PATH_ALT, prj.name)\nelse:\n    base_path = os.path.join(settings.PRJ_PATH_ALT, prj.name)\n\nzip_path = os.path.join(settings.DATA_PATH, 'temp')\n\nbuf.append(\"COMPILE TEMPLETE FILES:\")\n\n(code, output, err) = py_run([os.path.join(base_path, 'manage.py'), 'compile_templates'])\n\nif output:\n    for pos in output:\n        buf.append(pos)\n\nif err:\n    buf.append(\"ERRORS:\")\n    for pos in err:\n        buf.append(pos)\n\nexclude=[\".*\\.pyc\", \".*__pycache__.*\"]\nzip = ZipWriter(os.path.join(zip_path, name+\".ptig\"), base_path, exclude=exclude, sha256=True)\nzip.to_zip(base_path, name+\"/\")\npath_to_meta = name+\"-\"+prj.version+\".dist-info/\"\nzip.writestr(path_to_meta+\"top_level.txt\", (name+\"\\n\").encode('utf-8'))\nzip.writestr(path_to_meta+\"WHEEL\", b\"Wheel-Version: 1.0\\nGenerator: pytigon\\nRoot-Is-Purelib: true\\nTag: py3-none-any\")\ntxt = render_to_string(\"schbuilder/wzr/METADATA.html\", { 'name': name, 'version': prj.version })\nzip.writestr(path_to_meta+\"METADATA\",txt.encode('utf-8'))\nwith open(os.path.join(base_path, \"LICENSE\"), \"rb\") as f:\n    btxt = f.read()\n    zip.writestr(path_to_meta+\"LICENSE\", btxt)\ntxt = \"\"\nwith open(os.path.join(base_path, \"install.ini\"), \"rt\") as f:\n    for line in f.readlines():\n        if line.startswith(\"PIP \") or line.startswith(\"PIP=\"):\n            x = line.split('=',1)\n            for item in x[1].replace(',', ';').split(';'):\n                txt+=item + \"\\n\"\n            break\nzip.writestr(\"requirements.txt\",txt.encode('utf-8'))\n                \nbuf.append(\"PACK PROGRAM FILES TO: \" + zip_path + name + \".ptig\")\n\ndb_name = os.path.join(os.path.join(settings.DATA_PATH, name), name+\".db\")\n\nbuf.append(\"ADDING DATABASE FILES\")\n\n(code, output, err) = py_run([os.path.join(base_path, 'manage.py'), 'export_to_local_db'])\n\nbuf.append(\"Export to local db:\")\nif output:\n    for pos in output:\n        buf.append(pos)\n\nif err:\n    buf.append(\"ERRORS:\")\n    for pos in err:\n        buf.append(pos)\n        \nzip.write(db_name, name_in_zip=path_to_meta+name+\".db\")\n\nrecord_str = \"\"\nfor item in zip.sha256_tab:\n    record_str += \"%s,sha256=%s,%d\\n\" % item\nzip.writestr(path_to_meta+\"RECORD\", record_str.encode('utf-8'))\n\nzip.close()\n\nbuf.append(\"Instaler file saved to: \" + os.path.join(zip_path, name+\".ptig\"))\n\nurl = reverse('start')+'schbuilder/download_installer/'+name+'/'\n\nreturn { 'object_list': list(reversed(buf)), 'name': name, 'url': url, 'tp': \"SChAppSet\" }\n\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "restart_server",
                    "param": null,
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": null,
                    "view_code": "lck = os.path.join(settings.DATA_PATH, \"restart_needed.lck\")\nsuccess = True\ntry:\n    with open(lck, \"wt\") as f:\n        f.write(\"A restart of the Pytigon program needed\\n\")\nexcept:\n    success = False\nreturn { 'success': success }\n    ",
                    "view_type": "t"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_up#change_pos_form_field",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChFormField",
                    "url_params": "{'app':'schbuilder', 'tab':'SChFormField', 'forward':False, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_down#change_pos_form_field",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChFormField",
                    "url_params": "{'app':'schbuilder', 'tab':'SChFormField', 'forward':True, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "template_edit3",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChView",
                    "url_params": "",
                    "view_code": "view = models.SChView.objects.get(id=pk)\ntemplates = models.SChTemplate.objects.filter(parent=view.parent).filter(name='v_'+view.name)\nif len(templates)==0:\n    template=models.SChTemplate(parent=view.parent, name='v_'+view.name)\n\n    file_name = settings.PRJ_PATH + \"/schdevtools/templates_src/schbuilder/wzr/new_generic_form_template.ihtml\"\n    f = open(file_name, \"rt\")\n    template.template_code = f.read()\n    f.close()\n    template.save()\n    id = template.id\nelse:\n    id = templates[0].id\nnew_url = make_href(\"/schbuilder/table/SChTemplate/%s/template_code/py/editor/\" % str(id))\nreturn HttpResponseRedirect(new_url)",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "update",
                    "param": null,
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": null,
                    "view_code": "prj_names = (\n    'schdevtools', \n    'schsetup', \n    'schcomponents', \n    '_schwiki', \n    '_schdata', \n    '_schtools', \n    '_schall', \n    '_schremote', \n    '_schserverless', \n    'scheditor', \n    'schodf', \n    'schportal', \n    'schwebtrapper', \n    'schpytigondemo'\n)\n\nbase_url = \"https://splawik:GanawaanawaT1@git.pytigon.cloud/pytigon/\"\n\nobject_list = []\n\nif hasattr(pytigon.schserw.settings, \"_PRJ_PATH_ALT\"):\n    base_path = pytigon.schserw.settings._PRJ_PATH_ALT\nelse:\n    base_path = settings.PRJ_PATH_ALT\n\nfor prj_name in prj_names:\n    git_repository = base_url + prj_name + \".git\"\n    prj_path = os.path.join(base_path, prj_name)\n    git_path = os.path.join(prj_path, \".git\")\n    success=True \n\n    hash1 = \"\"\n    prj_file_path = os.path.join(prj_path, prj_name + \".prj\")\n    if os.path.exists(prj_file_path):\n        with open(prj_file_path, \"rt\") as f:\n            content = f.read()\n            hash1 = hashlib.sha1(content.encode('utf-8')).hexdigest()\n\n    if os.path.exists(git_path):\n        repo = Repo(prj_path)\n        try:\n            remote_refs = porcelain.fetch(repo, git_repository)\n            repo[b\"HEAD\"] = remote_refs.refs[b\"refs/heads/master\"]\n            \n            index_file = repo.index_path()\n            tree = repo[b\"HEAD\"].tree\n            index.build_index_from_tree(repo.path, index_file, repo.object_store, tree)\n                        \n            object_list.append(\n                (datetime.datetime.now(), \"git fetch success\", git_repository)\n            )\n        except Exception as e:\n            success = False\n            object_list.append(\n                (datetime.datetime.now(), \"git fetch error\", str(e))\n            )\n    else:\n        try:\n            porcelain.clone(git_repository, prj_path)\n            object_list.append(\n                (datetime.datetime.now(), \"git clone success\", git_repository)\n            )\n        except Exception as e:\n            success = False\n            object_list.append(\n                (datetime.datetime.now(), \"git clone error\", str(e))\n            )\n    if success:\n        prj_file_path = os.path.join(prj_path, prj_name + \".prj\")\n        if os.path.exists(prj_file_path):\n            with open(prj_file_path, \"rt\") as f:\n                content = f.read()\n                hash2 = hashlib.sha1(content.encode('utf-8')).hexdigest()\n                if hash1 != hash2:\n                    x = prj_import_from_str(content, backup_old=True)\n                    object_list.extend(x['object_list'])\n\nreturn { 'object_list': object_list }\n",
                    "view_type": "t"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "translate_sync",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "SChLocale",
                    "url_params": "",
                    "view_code": "locale_obj = models.SChLocale.objects.get(id=pk)\nprj = locale_obj.parent\n\nbase_path = settings.PRJ_PATH\n\napp_path = os.path.join(base_path, prj.name)\nlocale_path = os.path.join(app_path, 'locale')\nlang_path = os.path.join(locale_path, locale_obj.name)\nmsg_path = os.path.join(lang_path, 'LC_MESSAGES')\npo_path = os.path.join(msg_path, 'django.po')\n\nif not os.path.exists(po_path):\n    if not os.path.isdir(locale_path):\n        os.mkdir(locale_path)\n    if not os.path.isdir(lang_path):\n        os.mkdir(lang_path)\n    if not os.path.isdir(msg_path):\n        os.mkdir(msg_path)\n    \n    po_init = \"\"\"#\\nmsgid \"\"\\nmsgstr \"\"\\n\"Project-Id-Version: pytigon\\\\n\"\\n\"Language: %s\\\\n\"\\n\"MIME-Version: 1.0\\\\n\"\\n\"Content-Type: text/plain; charset=UTF-8\\\\n\"\\n\"Content-Transfer-Encoding: 8bit\\\\n\"\\n\"\"\"\n    if locale_obj.name in locale.locale_alias:\n        locale_str = locale.locale_alias[locale_obj.name].split('.')[0]\n    else:\n        locale_str = locale_obj.name\n    \n    po_init2 = po_init % locale_str\n    with open(po_path, \"wt\") as f:\n        f.write(po_init2)\n    \n\n(code, output, err) = py_run([os.path.join(app_path, 'manage.py'), 'compile_templates'])\nlocale_gen_internal(prj.id)\n    \npo = polib.pofile(po_path)\n\nlocale_obj.schtranslate_set.update(status='#')\n\ninserted = 0\nupdated = 0\nsave = False\n\nfor entry in po:\n    print(entry.msgid, entry.msgstr, entry.msgctxt)\n    t = locale_obj.schtranslate_set.filter(description=entry.msgid)\n    if len(t)>0:\n        obj = t[0]\n        updated += 1\n        if obj.translation:\n            entry.msgstr =  obj.translation\n            save = True\n    else:\n        obj = models.SChTranslate()\n        obj.description = entry.msgid\n        obj.parent = locale_obj\n        obj.translation = entry.msgstr\n        inserted += 1    \n    if obj.translation:\n        obj.status = 'OK'\n    else:\n        obj.status = ''\n    obj.save()\n\nif save:\n    po.save(po_path)\n\nlocale_gen_internal(prj.id)\n\nreturn { 'object_list': [[ updated, inserted ],] }\n\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "locale_gen",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": "",
                    "view_code": "ret = locale_gen_internal(pk)\nif ret:\n    ret_str = 'OK'\nelse:\n    ret_str = 'Error'\n\nreturn { 'object_list': [[ ret_str ],] }\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "download_installer",
                    "param": "name",
                    "ret_type": "U",
                    "url": "download_installer/(?P<name>\\w+)/$",
                    "url_params": "{}",
                    "view_code": "installer = os.path.join(os.path.join(settings.DATA_PATH, 'temp'), name+\".ptig\")\nif os.path.exists(installer):\n    with open(installer, 'rb') as zip_file:\n        response = HttpResponse(zip_file, content_type='application/force-download')\n        response['Content-Disposition'] = 'attachment; filename=\"%s\"' %  name+\".ptig\"\n        return response\nreturn HttpResponse(_(\"No installer file to download\"))\n",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_up#change_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChChoiceItem",
                    "url_params": "{'app':'schbuilder', 'tab':'SChChoiceItem', 'forward':False, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "field_down#change_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChChoiceItem",
                    "url_params": "{'app':'schbuilder', 'tab':'SChChoiceItem', 'forward':True, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": "",
                    "name": "autocomplete",
                    "param": "id, key",
                    "ret_type": "J",
                    "url": "autocomplete/(?P<id>\\d+)/(?P<key>\\w+)/$",
                    "url_params": "{}",
                    "view_code": "if key in ('object_fields', 'object_methods', 'object_fields_and_methods'):\n    template = models.SChTemplate.objects.get(pk=int(id))\n    ret = []\n    if key in ('object_fields', 'object_fields_and_methods'):\n        ret += template.get_all_table_fields()        \n    if key in ('object_methods', 'object_fields_and_methods'):\n        ret += template.get_table_methods()    \n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': ret, }, ], \"template\": \"{{choice.0}}\" }\nelif key.endswith(\"filters\"):\n    template = models.SChTemplate.objects.get(pk=int(id))\n    ret = []\n    if key in ('filters', 'django_filters'):\n        ret += template.get_django_filters()        \n    if key in ('filters', 'pytigon_filters'):\n        ret += template.get_pytigon_filters()    \n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': ret, }, ], \"template\": \"{{choice.0}}\" }\nelif key.endswith(\"tags\"):\n    template = models.SChTemplate.objects.get(pk=int(id))\n    ret = []\n    if key in ('tags', 'django_tags'):\n        ret += template.get_django_tags()        \n    if key in ('tags', 'pytigon_tags'):\n        ret += template.get_pytigon_tags()    \n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': ret, }, ], \"template\": \"{{choice.0}}\" }\nelif key.endswith(\"vars\"):\n    x = sch_standard(request)\n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': list(x.keys()), }, ], \"template\": \"{{choice.0}}\" }\nelif key == 'relfields':\n    template = models.SChTemplate.objects.get(pk=int(id))\n    ret = template.get_table_rel_fields()\n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': ret, }, ], \"template\": \"{{choice.0}}\" }\nelif key == 'txtfields':\n    template = models.SChTemplate.objects.get(pk=int(id))\n    ret = template.get_edit_table_fields()        \n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': ret, }, ], \"template\": \"{{choice.0}}\" }\nelif key == 'tables':\n    template = models.SChTemplate.objects.get(pk=int(id))\n    ret = [ table.parent.name+\"/\"+table.name for table in template.get_tables_for_template() ]\n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': ret, }, ], \"template\": \"{{choice.0}}\" }\nelif key == 'permissions':    \n    template = models.SChTemplate.objects.get(pk=int(id))\n    tables = template.get_tables_for_template()\n    ret = []\n    for table in tables:\n        app_perm = table.parent.name.lower()\n        if not app_perm in ret:\n            ret.append(app_perm)\n        ret.append(table.parent.name.lower() + \".add_\" + table.name.lower())\n        ret.append(table.parent.name.lower() + \".change_\" + table.name.lower())\n        ret.append(table.parent.name.lower() + \".delete_\" + table.name.lower())\n        ret.append(table.parent.name.lower() + \".view_\" + table.name.lower())\n        \n    return { 'title': None, 'choices': [ { 'title': 'Field', 'values': ret, }, ], \"template\": \"{{choice.0}}\" }\nelse:\n    return key\n",
                    "view_type": "u"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "gen_milestone",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": null,
                    "view_code": "object_list = []\n\nprj = models.SChAppSet.objects.get(id=pk)\nroot_path = settings.ROOT_PATH\n\nif hasattr(pytigon.schserw.settings, \"_PRJ_PATH_ALT\"):\n    base_path = os.path.join(pytigon.schserw.settings._PRJ_PATH_ALT, prj.name)\nelse:\n    base_path = os.path.join(settings.PRJ_PATH_ALT, prj.name)\n\ngit_path = os.path.join(base_path, \".git\")\n\nif prj.git_repository:\n    if hasattr(settings, \"SYS_GIT_USER\") and '//' in prj.git_repository:\n        x = prj.git_repository.split(\"//\",1)\n        git_repository = x[0] + \"//\" + settings.SYS_GIT_USER + \"@\" + x[1]\n    else:\n        git_repository = prj.git_repository\n    \n    if os.path.exists(git_path):\n        repo = Repo(base_path)\n        try:\n            remote_refs = porcelain.fetch(repo, git_repository)\n            repo[b\"HEAD\"] = remote_refs.refs[b\"refs/heads/master\"]\n            \n            index_file = repo.index_path()\n            tree = repo[b\"HEAD\"].tree\n            index.build_index_from_tree(repo.path, index_file, repo.object_store, tree)\n                        \n            object_list.append(\n                (datetime.datetime.now(), \"git fetch success\", prj.git_repository)\n            )\n        except Exception as e:\n            object_list.append(\n                (datetime.datetime.now(), \"git fetch error\", str(e))\n            )\n    else:\n        try:\n            porcelain.clone(git_repository, base_path)\n            object_list.append(\n                (datetime.datetime.now(), \"git clone success\", prj.git_repository)\n            )\n        except Exception as e:\n            object_list.append(\n                (datetime.datetime.now(), \"git clone error\", str(e))\n            )\n            \nobject_list.extend(build_prj(pk))\n\ncontent = prj_export_to_str(prj.pk)\n\nprj_path = os.path.join(base_path, f\"{prj.name}.prj\")\nwith open(prj_path, \"wt\") as f: \n    f.write(content)\n\nobject_list.append(\n    (datetime.datetime.now(), \"prj exported\", prj_path)\n)\n\nx = prj_import_from_str(content, backup_this = True)\nobject_list.extend(x['object_list'])\nprj2 = x['prj_instance']\n\nobject_list.append(\n    (datetime.datetime.now(), \"prj copied to version:\", prj.version)\n)\n\nitemplate_path = os.path.join(base_path, 'templates_src')\nl = len(base_path)\ncompiled = []\nfor root, dirs, files in os.walk(itemplate_path):\n    for f in files:\n        if f.endswith('.ihtml'):\n            p = os.path.join(root, f)\n            x = p[l+15:]\n            compile_template(x, template_dirs=[ itemplate_path.replace(\"templates_src\", \"templates\"), ], compiled=compiled, force=True)\n\nobject_list.append(\n    (datetime.datetime.now(), \"compile templates\", \", \".join([pos.split('/')[-1] for pos in set(compiled)]))\n)\n\nif prj.git_repository:\n    repo = Repo(base_path)\n    for root, dirs, files in os.walk(base_path):\n        if not '.git' in root.replace('\\\\','/').split('/'):\n            for file in files:\n                if not file in ('global_db_settings.py', 'settings_app_local.py') and not file.split('.')[-1] in ('pyc', 'pyo', 'so', 'exe', 'com', 'pkl'):\n                    p = os.path.join(root, file)\n                    porcelain.add(repo, p)\n    try:\n        porcelain.commit(repo, \"New milestone version: \" + prj2.version)\n        porcelain.push(repo, git_repository)\n        object_list.append(\n            (datetime.datetime.now(), \"git commit and push\", prj.git_repository)\n        )\n    except Exception as e:\n        object_list.append(\n            (datetime.datetime.now(), \"git pull error\", str(e))\n        )\n\nreturn { 'object_list': reversed(object_list) }\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "prj_import2",
                    "param": null,
                    "ret_type": "U",
                    "url": "SChAppSet",
                    "url_params": null,
                    "view_code": "return view_importfromgit(request)\n",
                    "view_type": "t"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "run",
                    "param": "pk",
                    "ret_type": "T",
                    "url": "SChAppSet",
                    "url_params": null,
                    "view_code": "prj = models.SChAppSet.objects.get(pk=pk)\nreturn { 'project': prj }\n",
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "app_up#change_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChApp",
                    "url_params": "{'app':'schbuilder', 'tab':'SChApp', 'forward':False, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                },
                {
                    "asynchronous": false,
                    "doc": null,
                    "extra_code": null,
                    "name": "app_down#change_pos",
                    "param": "pk",
                    "ret_type": "U",
                    "url": "SChApp",
                    "url_params": "{'app':'schbuilder', 'tab':'SChApp', 'forward':True, 'field': 'parent'}",
                    "view_code": null,
                    "view_type": "r"
                }
            ],
            [
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChAppSet",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    % if not form_list:\n        script language=python\n            def init_form(self):\n                import os\n                paths = wx.StandardPaths.Get()\n                self.icon.init_extern_icons(os.path.join(paths.GetDocumentsDir(), \"schbuilder/{{object.parent.parent.name}}/static/\"), \"http://www.onet.pl/\")\n\n%% all\n    %with edit_vscroll=True table_type='datatable'\n        {{ block.super }}\n\n%% list_content_actions\n    % new_row _(\"New project\")\n    % list_action \"prj_import/edit\" _(\"Import\")\n    % list_action \"prj_import2\" _(\"Import from git\")\n    % list_action \"restart_server\" _(\"Restart server\") target=\"_parent\" active=False\n    % list_action \"update\" _(\"Update system projects from git\")\n\n%% list_row_header\n    th...Name\n    th...Title\n    th...Version\n\n%% list_row\n    % td_editable 'name' 'text'\n    td...{{object.title}}\n    td...{{object.version}}\n\n%% list_row_actions\n    % row_actions: ===>\n        UP,Open in toolbar,[|wx.ART_GO_TO_PARENT],_top2_toolbar_Aplikacje__Lista_aplikacji,+src='client://actions/go-top.png',,{{app_path}}table/SChAppSet_up/{id}/schapp_set/-/form/list/?childwin=1\n        edit\n        gen,Build,[|client://categories/applications-multimedia.png]\n        gen_milestone,Build milestone version,[|png://actions/media-record.png]\n        |\n        delete\n        field_list/schapp_set,Applications,icon_name=client://apps/preferences-system-windows.png, target='_parent'\n        field_edit/user_app_template,Application template,client://mimetypes/text-x-script.png,_parent\n        field_list/schstatic_set,Static files,[|client://apps/system-file-manager.png],_parent\n        run,Run,[|client://actions/media-playback-start.png]\n        prj_export,Export(Distribute),[|client://actions/document-save-as.png]\n        installer,Make installer(Distribute),[|client://apps/internet-web-browser.png]\n        field_edit/readme_file,README.md(Distribute),[|fa://navicon.png],_parent\n        field_edit/license_file,LICENSE(Distribute),license_txt,_parent\n        field_edit/install_file,install.ini(Distribute),install_ini,_parent\n        field_edit/encoded_zip,encoded zip file(Distribute),encoded_zip,_parent\n        manage,Manage(Other options),[|client://categories/preferences-system.png]\n        field_list/schlocale_set,Locale(Other options),[|client://apps/preferences-system-network-proxy.png]\n        field_edit/icon_code,Icon code(Other options),[|client://categories/applications-graphics.png],_parent\n        field_edit/doc,Doc(Other options),[|client://apps/help-browser.png],_top2\n\n%% dialog_type\n    .modal-lg\n\n%% row_edit\n    %form \"^/6\":\n        .name,title,version,main_view\n    %form \"^/12\":\n        .ext_apps,plugins\n    %form \"^/6\":\n        .gui_type,gui_elements,login_required,start_page\n    %form \"^/2\":\n        .desktop_gui_type,tablet_gui_type,smartfon_gui_type,public,main\n\n    % if standard_web_browser:\n        %form \"^/12\":\n            .custom_tags,user_param\n    % else:    \n        % form_item custom_tags:\n            {{form.custom_tags|textfiel_row_col:\"4x100\"}}\n        % form_item user_param:\n            {{form.user_param|textfiel_row_col:\"4x100\"}}\n\n    % if standard_web_browser:\n        %form \"^/6\":\n            .icon,icon_size\n    % else:\n        tr \n            td..._(Icon)\n            td\n                CTRL-BITMAPCOMBOBOX class=ctrlbitmapcombobox form-control,,,width=250,,,name=icon,,,value={{object.icon}},,,valuetype=str,,,onload=self.init_default_icons=True\n        % form \"^/12\":\n            .icon_size\n    %form \"^/12\":\n        .git_repository,autor_name,autor_email,autor_www\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChApp",
                    "tags_mount": "'*'",
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    % if form_add or form_edit:\n        script language=python\n            def init_form(self):\n                import os\n                paths = wx.StandardPaths.Get()\n                print(dir(self))\n                self.icon.init_extern_icons(os.path.join(paths.GetDocumentsDir(), \"schbuilder/{{object.parent.parent.name}}/static/\"), \"http://www.onet.pl/\")\n    % else:\n        script language=python\n            def init_form(self):\n                pass\n                \n            def filter_http_result(self, target, href, mp):\n                if 'app_down' in href or 'app_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        if 'app_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n \n%% all\n    %with form_width=620 form_height=380 show_title_bar=1 title=_(\"Applications\")\n        {{ block.super }}\n\n\n%% form_bar2\n      % if form_edit or form_delete or form_info or show_title_bar\n        % if not standard_web_browser\n\n            table width=100%,,,class=form_bar\n                tr\n                    td cellpadding=0,,,align=right,,,valign=top,,,width=36,,,height=36\n                        CTRL-CLOSEBUTTON width=36,,,height=36,,,NAME=EXIT,,,SRC=client://emblems/emblem-unreadable.png\n                    % if not form_edit and not form_delete and not form_info\n                        td cellpadding=0,,,align=right,,,valign=top,,,width=36,,,height=36\n                            CTRL-NOBG_BUTTON width=36,,,height=36,,,NAME=UP,,,label=_(Open in toolbar),,,SRC=client://actions/go-top.png,,,href={{request.path|replace:\"/table/SChAppSet/|/table/SChAppSet_up/\"}},,,target=_top2_toolbar_Aplikacje__Lista_aplikacji\n                    td width=5\n                    td align=center,,,border=0,,,border-color=#{{color_body_0_7}}\n                        span class=form_title\n                            %%form_title\n                                {{title|wiki_href|safe}}\n            hr\n\n\n%% list_content_actions\n    % new_row _(\"New application\")\n\n\n%% list_row_header\n    th...Name\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions: ===>\n        edit,\n        field_list/schtable_set,Tables,[|client://mimetypes/x-office-spreadsheet.png],_top2\n        field_list/schchoice_set,Choices,[|client://categories/applications-games.png],_top2\n        field_list/schview_set,Views,[|client://mimetypes/text-x-generic-template.png],_top2\n        field_list/schtemplate_set,Templates,[|client://mimetypes/x-office-presentation.png],_top2\n        field_list/schappmenu_set,Menu,[|client://actions/tab-new.png],_top2\n        field_list/schform_set,Forms,[|client://mimetypes/x-office-document.png],_top2\n        field_list/schchannelconsumer_set,Consumers,[|client://places/network-workgroup.png],_top2\n        field_list/schfiles_set,Custom files,files,_top2\n        field_edit/model_code,Additional models,[|client://mimetypes/package-x-generic.png],_top2\n        field_edit/view_code,Additional views,[|client://batch/code.png],_top2\n        field_edit/urls_code,Additional urls,[|client://actions/format-indent-less.png],_top2\n        field_edit/tasks_code,Additional task code,[|client://apps/utilities-terminal.png],_top2\n        field_edit/consumer_code,Additional consumer code,[|client://places/network-workgroup.png],_top2\n        field_edit/icon_code,Icon code,[|client://categories/applications-graphics.png],_top2\n        field_edit/doc,Doc,[|client://apps/help-browser.png],_top2\n        delete\n\n    {% if not forloop.first %}\n        % row_actions:...app_up,Move up,[|client://actions/go-up.png],refresh_page\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...app_down,Move down,[|client://actions/go-down.png],refresh_page\n    {% endif %}\n\n\n%% table_header_edit\n  h2...Spis aplikacji\n\n\n%% row_edit\n    .A1\n    % form:\n        'parent', 'name', 'module_title', 'title', 'perms', 'index', 'user_param'\n    .A2\n    % if standard_web_browser:\n        .A3\n        %form \"^/6\":\n            .icon,icon_size\n        .A4\n    % else:\n        .A5\n        tr \n            td..._(Icon)\n            td\n                CTRL-BITMAPCOMBOBOX class=ctrlbitmapcombobox form-control,,,width=250,,,name=icon,,,value={{object.icon}},,,valuetype=str,,,onload=self.init_default_icons=True\n        .A6\n        % form \"^/12\":\n            .icon_size\n        .A6\n        ",
                    "url": "",
                    "url_parm": ""
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChChoice",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Choices\")\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New choice\")\n\n\n%% list_row_header\n    th..._(Name)\n    th..._(Description)\n\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.verbose_name}}\n\n\n%% list_row_actions\n    {{block.super}}\n    % row_actions:...field_list/schchoiceitem_set,Fields,[|client://actions/format-indent-more.png]\n\n\n%% table_header_edit\n  h2..._(Choice list)\n\n\n%% row_edit\n    % form:\n        'parent', 'name', 'verbose_name'\n        ",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChChoiceItem",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    % if form_edit:\n    % else:\n        script language=python\n            def init_form(self):\n                #self['add_field'].Bind(wx.EVT_BUTTON, self.OnClick)\n                pass\n                \n            def filter_http_result(self, target, href, mp):\n                if 'field_down' in href or 'field_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        if 'field_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Choices\")\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New item\")\n\n\n%% list_row_header\n    th...Name\n    th...Description\n\n\n%% list_row\n    td...{{object.name|escape}}\n    td...{{object.value|escape}}\n\n%% list_row_actions\n    {{block.super}}\n    {% if not forloop.first %}\n        % row_actions:...field_up,Move up,[|client://actions/go-up.png],refresh_page\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png],refresh_page\n    {% endif %}\n    \n\n%% table_header_edit\n  h2..._(Table field list)\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChTable",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'fields'\n                \n            def filter_http_result(self, target, href, mp):\n                if 'field_down' in href or 'field_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        if 'field_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n                    return True\n                elif 'field_duplicate' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        self.tabsort.grid.goto_last_row()\n                    return True\n                else:\n                    return None\n   \n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Tables\") vform=True\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New table\")\n\n\n%% list_row_header\n    th...Name\n    th...Base table\n    th...Proxy\n    th...Generic\n    th...Verbose name\n\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.base_table}}\n    td...{% if 'proxy' in object.metaclass_code %}X{% endif %}\n    td...{% if object.generic %}X{% endif %}\n    td...{{object.verbose_name}}\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up,[|client://actions/go-up.png]\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png]\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/table_code,Code,[fa fa-code fa-2|client://mimetypes/text-x-generic-template.png]\n        .field_edit/metaclass_code,Meta class,[|client://actions/document-properties.png]\n        .field_list/schfield_set,Fields,[|client://actions/format-indent-more.png]\n        .field_edit/doc,Documentation,[|client://apps/help-browser.png]\n        .template_edit,Template\n        .delete\n\n%% table_header_edit\n  h2..._(Table list)\n\n%% row_edit\n    % form:\n        'parent', 'name'\n    \n    % form_item base_table.select:\n        %if not object.base_table or object.base_table == \"\"\n            option selected=selected,,,value=...---------\n        %else\n            option value=...---------\n        %if object.base_table == 'JSONModel'\n            option value=JSONModel,,,selected=selected...JSONModel\n        %else\n            option value=JSONModel...JSONModel                    \n            \n        %for model in object.get_models\n            %if model == object.base_table\n                option value={{model}},,,selected=selected...{{model}}\n            %else\n                option value={{model}}...{{model}}\n            \n    % form:\n        'verbose_name', 'verbose_name_plural', 'proxy_model', 'ordering', 'generic'\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChField",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% pythoncode\n    % if form_edit:\n        script language=python\n            def Init(self):\n                self.retdate = None\n                self.param.EventObject=self\n\n            def OnBeforeButtonClick(self):\n                print('/schbuilder/field_param/edit/'+self.type.GetValue()+'/')\n                self.param.set_new_href('/schbuilder/field_param/edit/'+self.type.GetValue()+'/')\n    % else:\n        script language=python\n            def init_form(self):\n                #self['add_field'].Bind(wx.EVT_BUTTON, self.OnClick)\n                pass\n                \n            def filter_http_result(self, target, href, mp):\n                if 'field_down' in href or 'field_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        if 'field_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n                elif 'field_duplicate' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        self.tabsort.grid.goto_last_row()\n \n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Fields\") vform=True\n        {{ block.super }}\n\n%% list_content_header2\n    table\n        tr\n            th\n                label for=id_field_list...Select field type:\n            td width=210\n                select name=field_list,,,id=id_field_list,,,width=200\n                    %for item in object_list.model|choices_from_field:\"type\"\n                        option value={{item.0}}\n                            {{item.0}}\n            td align=left\n                % list_action \"add_field\" \"New field\"\n\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % widget class='menu' id='add_field' title='New field':\n                    %for item in object_list.model|choices_from_field:\"type\"\n                        li\n                            a class=btn btn-primary btn-sm,,,href=../../../{{item.0}}/add/\n                                {{item.0}}\n\n%% list_row_header\n    th...Name\n    th...Opis\n    th...Typ\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.description}}\n    td...{{object.type}}\n\n%% list_row_actions\n    {{block.super}}\n    {% if not forloop.first %}\n        % row_actions:...field_up,Move up,[|client://actions/go-up.png],refresh_page\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png],refresh_page\n    {% endif %}\n    \n    % row_actions:...field_duplicate,Duplicate,[|client://actions/go-bottom.png]\n\n\n%% table_header_edit\n  h2...Lista p\u00f3l tabeli\n\n%% row_edit\n    %if object.is_rel or object.has_choices\n        % form:\n                \"parent\", \"name\", \"description\", \"null\", \"blank\", \"editable\", \"unique\", \"db_index\", \"default\",  \"help_text\"\n        %if object.is_rel\n            % form_item rel_to:\n                select name=rel_to,,,id=id_rel_to,,,class=select form-control\n                    %if not object.rel_to or object.rel_to == \"\"\n                        option selected=selected,,,value=...---------\n                    %else\n                        option value=...---------\n                    %for model in object.get_models\n                        %if model == object.rel_to\n                            option value={{model|safe}},,,selected=selected...{{model|safe}}\n                        %else\n                            option value={{model|safe}}...{{model|safe}}\n        %else\n            % form_item rel_to:\n                select name=choices,,,id=id_choices,,,class=select form-control\n                    %if not object.choices or object.choices == \"\"\n                        option selected=selected,,,value=...---------\n                    %else\n                        option value=...---------\n                    %for choice in object.parent.parent.schchoice_set.all\n                        %if choice.name == object.choices\n                            option value={{choice.name}},,,selected=selected...{{choice.name}}\n                        %else\n                            option value={{choice.name}}...{{choice.name}}\n        % form:\n                \"param\"\n    %else\n        % form:\n                \"parent\", \"name\", \"description\", \"null\", \"blank\", \"editable\", \"unique\", \"db_index\", \"default\",  \"help_text\", \"param\"\n    {{form.type.as_hidden}}\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChView",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n\n%extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n% load builder_filters\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n\n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Views\") vform=True\n        {{ block.super }}\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % widget class='menu' id='new_view' title=_(\"&New view\"):\n                    % for pos in object_list|module_obj:\"View_CHOICES\"\n                        li\n                            a href={{table_path}}{{pos.0}}/add/...{{pos.1}}\n        \n%% list_row_header\n    th...Name\n\n%% list_row\n    td...{{object.name}}\n\n%% list_row_actions\n    {{ block.super }}\n    % if object.ret_type == 'T':\n        % row_actions:\n            .field_edit/view_code,Code,[|client://mimetypes/text-x-generic-template.png],_parent\n            .template_edit3,Template,[|client://mimetypes/x-office-presentation.png]\n            .field_edit/doc,Doc,[|client://apps/help-browser.png],_parent\n    % else:\n        % row_actions:\n            .field_edit/view_code,Code,[|client://mimetypes/text-x-generic-template.png],_parent\n            .field_edit/doc,Doc,[|client://apps/help-browser.png],_parent\n    % row_actions:...field_edit/extra_code,Extra code,[|client://actions/format-justify-center.png],_parent\n\n    \n%% row_edit\n    {{ form.view_type.as_hidden }}\n    strong \n        {{object.get_view_type_display}}\n                \n    % form:\n        \"ret_type\", \"parent\", \"name\", \"url_params\", \"asynchronous\"\n    \n    % if object.view_type == 'u'\n        % form:\n            \"param\", \"url\"\n    % else\n        {{form.param.as_hidden}}        \n        % form_item url:\n            select name=url,,,id=id_url,,,class=select form-control\n                %if not object.url or object.url == \"\"\n                    option selected=selected,,,value=...---------\n                %else\n                    option value=...---------\n                %for model in object.get_models\n                    %if model == object.url\n                        option value={{model}},,,selected=selected...{{model}}\n                    %else\n                        option value={{model}}...{{model}}\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChTemplate",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n        \n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Templates\")\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New template\")\n\n\n%% list_row_header\n    th..._(Name)\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions:\n        .field_edit/template_code,Code,[|client://mimetypes/x-office-presentation.png],_parent\n        .edit\n        .delete\n\n\n%% row_edit\n    % form:\n        \"parent\", \"name\", \"direct_to_template\", \"url\", \"url_parm\", \"tags_mount\"",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChAppMenu",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    % if not form_list:\n        script language=python\n            def init_form(self):\n                import os\n                paths = wx.StandardPaths.Get()\n                self.icon.init_extern_icons(os.path.join(paths.GetDocumentsDir(), \"schbuilder/{{object.parent.parent.name}}/static/\"), \"http://www.onet.pl/\")\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Menu\") vform=True\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New menu item\")\n    a href={{request.path|replace:\"/table/SChApp/|/table/SChApp_wiki/\"}}/../../../-/add,,,class=button,,,name=New wiki item,,,label=_(New wiki item),,,title=_(New wiki item),,,target=_blank\n\n\n%% list_row_header\n    th..._(Name)\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    {{block.super}}\n    {% if not forloop.first %}\n        % row_actions:...field_up,Move up,[|client://actions/go-up.png]\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png]\n    {% endif %}\n    % row_actions:...field_edit/icon_code,Icon code,[|client://categories/applications-graphics.png],_parent\n\n\n%% table_header_edit\n  h2..._(Menu item list)\n\n\n%% row_edit\n    % form:\n        'name', 'perms'\n    %% url_select\n        input type=hidden,,,name=parent,,,value={{object.parent.id}},,,id=id_parent\n        % if not standard_web_browser:\n            % form_item url:\n                CTRL-CHOICE name=url,,,value='{{object.url}}'\n                    tdata\n                        %for url in object.get_urls\n                            tr:::td...{{url}}\n        % else:\n            % form_item url:\n                select name=url2,,,id=id_url2,,,class=select form-control\n                    %if not object.url or object.url == \"\"\n                        option selected=selected,,,value=...---------\n                    %else\n                        option value=...---------\n                        option value={{object.url}},,,selected=selected...{{object.url}}\n                    %for url in object.get_urls\n                        %if not url == object.url\n                            option value={{url}}...{{url}}\n    % form:\n        'url_type'\n    % form_item icon:\n        CTRL-BITMAPCOMBOBOX class=ctrlbitmapcombobox form-control,,,width=250,,,name=icon,,,value={{object.icon|none_to_empty}},,,valuetype=str,,,onload=self.init_default_icons=True\n    % form:\n        'icon_size'\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "schapp2",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def init_form(self):\n            self.path = \"{{request.path}}\"\n            http = wx.GetApp().get_http(self)\n            http.post(self, \"{{base_path}}schtools/set_user_param/\", parm={ 'param': 'appset_up', 'value': self.path })\n\n\n        def filter_url(self, type, url):\n            if url and url[0:1]=='.':\n                return None\n            else:\n                if url=='close':\n                    page = self.GetParent().GetParent().GetParent()\n                    win = wx.GetApp().GetTopWindow()\n                    win.toolbar_interface.remove_page(page.title)\n\n                    http = wx.GetApp().get_http(self)\n                    http.post(self, \"{{base_path}}schtools/set_user_param/\", parm={ 'param': 'appset_up', 'value': \"\" })\n\n                    return True\n                else:\n                    id = self.app_list.GetValue()\n                    if id:\n                        return url.replace('{id}', id)\n                    else:\n                        dlg = wx.MessageDialog(self, _('Select application!'), _('A Message Box'), wx.OK | wx.ICON_INFORMATION )\n                        dlg.ShowModal()\n                        dlg.Destroy()\n                        return True\n\n\n%% all\n    %with form_width=320 form_height=50 show_title_bar=1 title=_(\"Applications\")\n        {{ block.super }}\n\n%% body_start\n    <body class=\"toolbar\">\n\n%% body\n    p height=5px\n    table class=toolbar\n        tr\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT name=close_btn,,,label=Close,,,SRC=client://emblems/emblem-unreadable.png,,,href=close\n            td width=160\n                table width=160\n                    tr\n                        td...Wybierz aplikacj\u0119:\n                    tr\n                        td\n                            select name=app_list,,,id=id_app_list,,,width=150\n                                %for item in object_list\n                                    %if forloop.first\n                                        option value={{item.id}},,,selected=selected\n                                            {{item.name}}\n                                    %else\n                                        option value={{item.id}}\n                                            {{item.name}}\n            td width=20\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=tabele,,,label=_(Table),,,SRC=client://mimetypes/x-office-spreadsheet.png,,,href={{app_path}}table/SChApp/{id}/schtable_set/-/form/list/\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=choices,,,label=_(Choices),,,SRC=client://categories/applications-games.png,,,href={{app_path}}table/SChApp/{id}/schchoice_set/-/form/list/\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=views,,,label=_(Views),,,SRC=client://mimetypes/text-x-generic-template.png,,,href={{app_path}}table/SChApp/{id}/schview_set/-/form/list/\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=forms,,,label=_(Forms),,,SRC=client://mimetypes/x-office-document.png,,,href={{app_path}}table/SChApp/{id}/schform_set/-/form/list/\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=menu,,,label=_(Menu),,,SRC=client://actions/tab-new.png,,,href={{app_path}}table/SChApp/{id}/schappmenu_set/-/form/list/\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=tasks,,,label=_(Tasks),,,SRC=client://apps/utilities-terminal.png,,,href={{app_path}}table/SChApp/{id}/schtask_set/-/form/list/\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=consumers,,,label=_(Channel consumers),,,SRC=client://places/network-workgroup.png,,,href={{app_path}}table/SChApp/{id}/schchannelconsumer_set/-/form/list/\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=templates,,,label=_(Templates),,,SRC=png://mimetypes/x-office-presentation.png,,,href={{app_path}}table/SChApp/{id}/schtemplate_set/-/form/list/\n\n            td width=20\n            td cellpadding=0\n                % widget class='menu' id='user_action' title='Other options' style='toolbar': \n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/schfiles_set/-/form/list/..._(Other files)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/model_code/form/editor/..._(Model extensions)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/view_code/form/editor/..._(View extensions)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/urls_code/form/editor/..._(Url extensions)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/tasks_code/form/editor/..._(Task extensions)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/consumer_code/form/editor/..._(Channel consumer extensions)\n                    li:::a class=btn btn-primary btn-sm,,,href={{app_path}}table/SChApp/{id}/doc/form/editor/..._(Doc)\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "db_field_edt_template",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"schsys/db_field_edt.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncodeinit\n    ===>\n        def init_form(self):\n            self.save_btn.Disable()\n            self.modified = False\n            self.tuser = wx.Timer(self)\n            self.tuser.Start(1000)\n            self.Bind(wx.EVT_TIMER, self.on_timer_user, self.tuser)\n            self.EDITOR.SetSavePoint()\n            self._insert_txt.Bind(wx.EVT_BUTTON, self.on_insert_click)\n            self.save_btn.Bind(wx.EVT_BUTTON, self.on_click)\n            atab=self.get_acc_tab()\n            atab.append((0, wx.WXK_INSERT, self.on_panel_focus))\n            atab.append((wx.ACCEL_ALT, ord('I'), self.on_panel_focus))\n            \n            self.set_acc_key_tab(self,atab)\n            \n            self._panel.Bind(wx.EVT_TREE_ITEM_ACTIVATED, self.on_insert_click)\n            self._insert_icon.Bind(wx.EVT_BUTTON, self.on_insert_image_click)\n            self.EDITOR.SetCurrentPos(0)\n            self.EDITOR.SetSelection(0,0)\n            wx.CallAfter(self.EDITOR.SetFocus)\n\n            class ChoiceDialog(wx.Dialog):\n                def __init__(self, parent, title, choices):\n                    wx.Dialog.__init__(self)\n                    self.SetExtraStyle(wx.DIALOG_EX_CONTEXTHELP)\n                    self.Create(parent, -1, title, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.DEFAULT_DIALOG_STYLE, name='dialog')\n                    self.choices = []\n                    p = wx.Panel(self, -1, style = wx.TAB_TRAVERSAL | wx.CLIP_CHILDREN | wx.FULL_REPAINT_ON_RESIZE)\n                    \n                    self.sizer1 = wx.GridBagSizer(vgap=5, hgap=5)\n                    \n                    row = 0;\n                    for obj in choices:\n                        self.sizer1.Add( wx.StaticText(p, -1, obj['title']), (row, 0), (1,1), wx.ALIGN_LEFT | wx.ALL, 5)\n                        if len(obj['values'])>0 and type(obj['values'][0]) in (str, bytes):\n                            choice = wx.Choice(p, -1, size=(600, -1), choices = obj['values'])\n                        elif len(obj['values'])>0:\n                            choice = wx.adv.BitmapComboBox(p, -1, size=(600, -1))\n                            for c in obj['values']:\n                                if type(c) == str:\n                                    choice.Append(c)\n                                elif type(c) == bytes:\n                                    choice.Append(c.decode('utf-8'))\n                                else:\n                                    choice.Append(c[0], c[1])\n                        else:\n                            choice = wx.TextCtrl(p, -1, size=(600, -1))\n\n                        #wx.Choice(p, -1, size=(600, -1), choices = obj['values'])\n                        self.choices.append(choice)\n                        self.sizer1.Add(choice, (row, 1), (1,1), wx.ALIGN_LEFT | wx.ALL, 5)\n                        row+=1;\n\n                    self.sizer2 = wx.BoxSizer(wx.HORIZONTAL)\n                    cancel = wx.Button(p, wx.ID_CANCEL, \"Cancel\")\n                    ok = wx.Button(p, wx.ID_OK, \"OK\")\n                    self.sizer2.Add( cancel, 1, wx.EXPAND|wx.ALL, 5)\n                    self.sizer2.Add( ok, 1, wx.EXPAND|wx.ALL, 5)\n                    ok.SetDefault()\n                    #self.Bind(wx.EVT_BUTTON, self.on_ok, ok)\n\n                    box = wx.BoxSizer(wx.VERTICAL)\n                    box.Add(self.sizer1, 0, wx.EXPAND)\n                    box.Add(self.sizer2, 0, wx.EXPAND | wx.ALL, 5)\n\n                    p.SetSizerAndFit(box)\n                    self.SetClientSize(p.GetSize())\n\n                def on_ok(self, event):\n                    print(event)\n\n            self.dialog = ChoiceDialog\n\n            from schbuilder.autocomplete import ACTIONS\n            self.actions = ACTIONS\n            from django.template import Template, Context\n            self.template_class = Template\n            self.context_class = Context\n            #from pytigon_lib.schhttptools.httpclient import HttpClient\n            #self.http_client_class = HttpClient\n            # aTable = [\n            #   (wx.ACCEL_ALT, ord('I'), self.on_panel_focus),\n            #   (wx.ACCEL_ALT, ord(';'), self.on_),\n            #   ]\n            # self.set_acc_key_tab(aTable)\n            self.EDITOR.Bind(wx.EVT_KEY_DOWN, self.on_key_pressed)\n            \n        def on_key_pressed(self, event):\n            if not event.AltDown() and not event.ControlDown() and ((event.KeyCode in ( ord('.'), ord(' ') ) and not event.ShiftDown()) or ((event.KeyCode in ( ord('\\\\'),)) and  event.ShiftDown())):\n                def _fun():\n                    ret_str = self.on_dialog(\"default\")\n                    if ret_str:\n                        self.insert_txt(ret_str)\n                wx.CallAfter(_fun)\n                event.Skip()\n            event.Skip()\n\n        def on_panel_focus(self, event):\n            self._panel.SetFocus()\n\n        def on_insert_image_click(self, event):\n            self.insert_txt(self._icon.GetValue())\n\n        def on_dialog(self, key):\n            dialog_title = \"Chose items\"\n            parameters = []\n            template_str = \"\"\n            return_str = \"\"\n\n            if key == 'default':\n                line, pos = self.EDITOR.GetCurLine()\n                s = line[:pos].strip()\n                if s.endswith('%%'):\n                    key = \"blocks\"\n                elif s.endswith('%'):\n                    key = \"tags\"\n                elif s.endswith('|'):\n                    key = 'filters'\n                elif s.endswith('{{'):\n                    key = 'vars'\n                elif s.endswith('object.'):\n                    key = \"object fields and methods\"\n                elif s.endswith('form.'):\n                    key = \"object fields and methods\"\n                elif s.endswith('object_list.'):\n                    key = \"object fields and methods\"\n                else:\n                    return\n\n            if key in self.actions or ( '((' in key and '))' in key ):\n                if key in self.actions:\n                    key2 = key\n                else:\n                    key2 = key.split('((')[1].split('))')[0].replace(' ', '_')\n                obj = self.actions[key2]\n                if 'title' in obj:\n                    dialog_title = obj['title']\n                if 'choices' in obj:\n                    parameters = obj['choices']\n                    for obj2 in parameters:\n                        if \"source_of_values\" in obj2:\n                            client = wx.GetApp().get_http(self)\n                            response = client.get(self,\"{{base_path}}schbuilder/autocomplete/{{object.id}}/%s/\" % obj2['source_of_values'])\n                            obj3 = response.json()\n                            if len(obj3['choices'])>0:\n                                obj2['values'] = obj3['choices'][0]['values']\n                if 'template' in obj:\n                    template_str = obj['template']\n            elif key in ('object fields', 'object methods', 'object fields and methods', 'blocks', 'vars',) or key.endswith('filters') or key.endswith('tags'):\n                client = wx.GetApp().get_http(self)\n                response = client.get(self,\"{{base_path}}schbuilder/autocomplete/{{object.id}}/%s/\" % key.replace(' ', '_'))\n                obj = response.json()\n                if 'title' in obj:\n                    dialog_title = obj['title']\n                if 'choices' in obj:\n                    parameters = obj['choices']\n                if 'template' in obj:\n                    template_str = obj['template']\n            else:\n                return key\n\n            if parameters and template_str:\n                if dialog_title or len(parameters)>1:\n                    dlg = self.dialog(self, dialog_title, parameters)\n                    dlg.CenterOnScreen()\n                    val = dlg.ShowModal()\n                    if val == wx.ID_OK:\n                        choice = []\n                        for ctrl in dlg.choices:\n                            if type(ctrl) == wx.TextCtrl:\n                                choice.append(ctrl.GetValue())\n                            else:\n                                choice.append(ctrl.GetStringSelection())\n                        t = self.template_class(template_str)\n                        c = self.context_class({\"choice\": choice})\n                        ret = t.render(c)\n                        return ret\n                    else:\n                        return None\n                else:\n                    kw = parameters[0]['values']\n                    kw.sort()\n                    self.EDITOR.SetFocus()\n                    self.EDITOR.AutoCompSetIgnoreCase(True)\n                    self.EDITOR.AutoCompShow(0, (\" \").join(kw))\n            elif template_str:\n                t = self.template_class(template_str)\n                c = self.context_class({})\n                ret = t.render(c)\n                return ret\n                \n            return return_str\n\n        def on_insert_click(self, event):\n            item = self._panel.GetSelection()\n            if item.IsOk():\n                key = self._panel.GetItemText(item)\n                ret_str = self.on_dialog(key)\n                if ret_str:\n                    self.insert_txt(ret_str)\n\n        def on_auto_comp_cmd(self, edt_ctrl, pos):\n            ret_str = self.on_dialog(\"default\")\n            if ret_str:\n                self.insert_txt(ret_str)\n\n        def insert_txt(self, txt):\n            pos = self.EDITOR.GetCurrentPos()\n            self.EDITOR.InsertText(pos, txt)\n            pos+=len(txt)\n            self.EDITOR.SetCurrentPos(pos)\n            self.EDITOR.SetFocus()\n\n%% all\n    %with form_width=800 form_height=1200 title=tab|add:\".\"|add:verbose_field_name\n        {{ block.super }}\n\n%% title\n    .T:{{object.name}}\n\n%% body\n    % if standard_web_browser:\n        {{ block.super }}\n    % else:\n        table width=100%,,,class=form_bar\n            tr\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRL-CLOSEBUTTON width=36,,,height=36,,,NAME=EXIT,,,SRC=client://emblems/emblem-unreadable.png\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRL-NOBG_BUTTON width=36,,,height=36,,,name=save_btn,,,SRC=client://actions/document-save.png\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRL-NOBG_BUTTON width=36,,,height=36,,,name=_insert_txt,,,label=insert,,,SRC=client://actions/list-add.png\n                td cellpadding=0,,,valign=top,,,width=250,,,height=36\n                    CTRL-BITMAPCOMBOBOX width=250,,,name=_icon,,,onload=self.init_default_icons=True\n                td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                    CTRL-NOBG_BUTTON width=36,,,height=36,,,name=_insert_icon,,,label=icon,,,SRC=client://actions/list-add.png\n                td width=5\n                td align=center,,,border=0,,,border-color=#{{color_body_0_7}}\n                    span class=form_title\n                        %%form_title\n                            .Edycja: {{object.name}} [{{title}}]\n        hr\n        table width=100%\n            tr\n                td width=350\n                    ctrl-tree name=_panel,,,width=350,,,height=calc(100% - top - 30)\n                        % if object.get_rel_table:\n                            li...{{object}}\n                                ul\n                                    li...object fields\n                                        ul\n                                            % for pos in object.get_all_table_fields\n                                                li...{{pos}}\n                                                    ul\n                                                        li...{{pos}}\n                                                        li...object.{{pos}}\n                                                        li...form.fields_as_table.{{pos}}\n                                    li...object related fields\n                                        ul\n                                            % for pos in object.get_table_rel_fields\n                                                li...{{pos}}\n                                                    ul\n                                                        li...{{pos}}\n                                                        li...object.{{pos}}\n                                    li...object methods\n                                        ul\n                                            %for pos in object.get_table_methods\n                                                li...{{pos}}\n                                                    ul\n                                                        li...{{pos}}\n                                                        li...object.{{pos}}\n                        li...filters\n                            ul\n                                li...django filters\n                                li...pytigon filters\n                        li...tags\n                            ul\n                                li...django tags\n                                li...pytigon tags\n                        li...special template statements\n                            ul\n                                li...{{ \"^\"|add:\"^^\"}}\n                                li...{{ \"=\"|add:\"==>\"}}\n                                li...{{ \">\"|add:\">>\"}}\n                                li...{{ \"<\"|add:\"<<\"}}\n                                li...{{ \"{\"|add:\":}\"}}\n                                li...script language=python                                \n                        li...targets\n                            ul\n                                li..._blank\n                                li..._parent\n                                li..._top\n                                li..._self\n                                li...popup\n                                li...popup_edit\n                                li...popup_info\n                                li...popup_delete\n                                li...inline_edit\n                                li...inline_info\n                                li...inline_delete\n                                li...inline\n                                li...none\n                                li...refresh_obj\n                                li...refresh_page\n                                li...refresh_app                                \n                        li...template blocks\n                            ul\n                                li...%% all\n                                    ul\n                                        li...%% page_start\n                                        li...%% page_head\n                                            ul\n                                                li...%% cache\n                                                li...%% head_start\n                                                li...%% title\n                                                li...%% css_links\n                                                li...%% css_start\n                                                li...%% css\n                                                li...%% css_end\n                                                li...%% js_scripts\n                                                    ul\n                                                        li...%% js_scripts_base\n                                                li...%% js_extrascripts\n                                                li...%% python_code\n                                                li...%% icss\n                                                li...%% extra_style\n                                                li...%% extra_head\n                                        li...%% body_start\n                                        li...%% body_header\n                                        li...%% body\n                                            ul\n                                                li...%% dialog_start\n                                                li...%% form_info\n                                                li...%% form_ok_cancel_info\n                                                li...%% form_delete\n                                                    ul\n                                                        li...%% form_delete_content\n                                                        li...%% form_delete_object\n                                                li...%% form_ok_cancel_del\n                                                li...%% row_edit_start\n                                                li...%% row_edit_header\n                                                li...%% row_edit_all\n                                                    ul\n                                                        li...%% row_edit_form\n                                                        li...%% row_edit_footer\n                                                        li...%% form_ok_cancel\n                                                li...%% row_edit_end\n                                                li...%% dialog_end\n                                                li...%% login_header\n                                                li...%% login\n                                                li...%% login_footer\n                                                li...%% nav\n                                                    ul\n                                                        li...%% change_password\n                                                        li...%% menu_start\n                                                        li...%% menu\n                                                            ul\n                                                                li...%% topmenu_start\n                                                                li...%% topmenu\n                                                                li...%% topmenu_end\n                                                                li...%% submenu_start\n                                                                li...%% submenu\n                                                                li...%% submenu_end\n                                                        li...%% menu_end\n                                                        li...%% menu2\n                                                li...%% body_init\n                                                li...%% messages\n                                                li...%% body_desktop\n                                                    ul\n                                                        li...%% panel\n                                                        li...%% navglobal\n                                                        li...%% sidebar\n                                                        li...%% content_start\n                                                        li...%% all_content\n                                                            ul\n                                                                li...%% content\n                                                                    ul\n                                                                        li...%% list_page_start\n                                                                        li...%% list_page_header\n                                                                        li...%% list_page\n                                                                            ul\n                                                                                li...%% list_content_start\n                                                                                li...%% list_content_header\n                                                                                    ul\n                                                                                        li...%% list_content_header_first_row\n                                                                                            ul\n                                                                                                li...%% list_content_title\n                                                                                        li...%% list_content_header_second_row\n                                                                                            ul\n                                                                                                li...%% list_filter_form\n                                                                                                    ul\n                                                                                                        li...%% form_filter\n                                                                                                            ul\n                                                                                                                li...%% form_content\n                                                                                                                    ul\n                                                                                                                        li...%% form_table_filter\n                                                                                                                        li...%% form_content_button\n                                                                                        li...%% list_content_header_third_row\n                                                                                            ul\n                                                                                                li...%% list_content_actions\n                                                                                li...%% list_content_body\n                                                                                    ul\n                                                                                        li...%% list_content_paginator\n                                                                                        li...%% list_full_row_header\n                                                                                            ul\n                                                                                                li...%% list_row_header_start\n                                                                                                li...%% list_row_header\n                                                                                                li...%% list_row_header_end\n                                                                                        li...%% list_table\n                                                                                            ul\n                                                                                                li...%% list_full_row\n                                                                                                    ul\n                                                                                                        li...%% list_row_start\n                                                                                                            ul\n                                                                                                                li...%% id_extra\n                                                                                                        li...%% list_row\n                                                                                                        li...%% list_row_end\n                                                                                                            ul\n                                                                                                                li...%% list_row_actions\n                                                                                                li...%% list_row2\n                                                                                        li...%% list_table_footer\n                                                                                li...%% list_content_footer\n                                                                                li...%% list_content_end\n                                                                        li...%% list_page_footer\n                                                                        li...%% list_page_end\n                                                        li...%% content_end\n                                                li...%% tabs\n                                                li...%% html_widgets_init\n                                                li...%% body_footer\n                                        li...%% body_footer_scripts\n                                        li...%% page_footer\n                                            ul\n                                                li...%% js_extrascipts_init\n                                                    ul\n                                                        li...%% jquery_init\n                                                        li...%% jquery_init_once\n                                                        li...%% jquery_ready_all\n                                                            ul\n                                                                li...%% jquery_ready_start\n                                                                li...%% jquery_ready\n                                                                li...%% jquery_ready_end\n                                                        li...%% js_script_body\n                                                li...%% page_finish\n                                        li...%% body_end\n                                        li...%% page_end\n                                li...{% spec '{' %} block.super {% spec '}' %}\n                        li...vars\n                            ul\n                                li...request\n                                li...user\n                                li...perms\n                                li...paths\n                                    ul\n                                        li...base_path\n                                        li...app_path\n                                        li...URL_ROOT_FOLDER\n                                li...project\n                                    ul\n                                        li...prj_name\n                                        li...prj_title\n                                li...form info\n                                    ul\n                                        li...form_add\n                                        li...form_delete\n                                        li...form_edit\n                                        li...form_ext\n                                        li...form_grid\n                                        li...form_info\n                                        li...form_list\n                                        li...show_form\n                                        li...show_title_bar\n                                li...colors\n                                    ul\n                                        li...color_background\n                                        li...color_background_0_5\n                                        li...color_background_0_8\n                                        li...color_background_0_9\n                                        li...color_background_1_1\n                                        li...color_background_1_2\n                                        li...color_background_1_5\n                                        li...color_body\n                                        li...color_body_0_2\n                                        li...color_body_0_5\n                                        li...color_body_0_7\n                                        li...color_body_0_9\n                                        li...color_body_1_1\n                                        li...color_body_1_3\n                                        li...color_body_1_5\n                                        li...color_body_1_8\n                                        li...color_higlight\n                                        li...color_info\n                                        li...color_shadow\n                                li...system\n                                    ul\n                                        li...csrf_token\n                                        li...user_agent\n                                        li...uuid\n                                        li...app_manager\n                                        li...gen_time\n                                        li...settings\n                                        li...env\n                                li...lang\n                                    ul\n                                        li...LANGUAGE_CODE\n                                        li...lang\n                                        li...LANGUAGES\n                                        li...LANGUAGE_BIDI\n                                        li...TIME_ZONE\n                                li...info\n                                    ul\n                                        li...debug\n                                        li...standard_web_browser\n                                        li...browser_type\n                                        li...client_type\n                                        li...application_type\n                                        li...autologin\n                                        li...offline_support\n                                        li...pyodide\n                                        li...default_template\n                                        li...default_template2\n                                        li...readonly\n                                        li...get\n                        li...wizards\n                            ul\n                                li...form\n                                    ul\n                                        li...simple ((form))\n                                        li...((two columns form))\n                                        li...((three columns form))\n                                        li...((advanced form))\n                                        li...((field))\n                                        li...((form field))\n                                        li...((hidden field))\n                                % if object.get_rel_table:\n                                    li...row actions\n                                        ul\n                                            li...% row_actions\n                                                ul\n                                                    li...edit\n                                                    li...delete\n                                                    li...pdf\n                                                    li...show related table based on field ((field_list))\n                                                    li...show editor for field ((field_edit))\n                                                    li...other ((action))\n                                            li...((row_related_list))\n                                            li...((view_row))\n                                    li...table actions\n                                        ul\n                                            li...((new_row))\n                                            li...((list_action))\n                                li...permisions\n                                    ul\n                                        li...check ((permision))\n                                        li...is user in group ((user_in_group))\n                                        li...user.is_authenticated\n                                li...code blocks\n                                    ul\n                                        li...% extends \"form.html\"\n                                        li...% extends \"forms/tree.html\"\n                                        li...% load exfiltry\n                                        li...% load exsyntax\n                                        li...block ((all))\n                                        li...block ((id_extra))\n                                        li...block ((list_row_attr))\n                                        li...block ((dialog_type))\n                                        li...block ((scroll))\n                                        li...block ((pythoncode)/)\n                                        li...snippet ((move rows))\n                td\n                    CTRL-STYLEDTEXT NAME=EDITOR,,,width=100%-345,,,HEIGHT=calc(100% - top - 30),,,MINHEIGHT=400,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n                        DATA...{{txt|bencode}}\n\n%% content\n    % if standard_web_browser\n        %% edit_area\n            code_editor id=ace_editor,,,value={{txt|bencode}},,,href={{base_path}}{{save_path}},,,title={{title}}\n    % else:\n        {{ block.super }}\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "db_field_edt_mod",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n\n%extends \"schsys/db_field_edt.html\"\n\n%load exfiltry\n%load exsyntax\n\n%%form_title\n    .Edition: {{ object.url }} [{{title}}/{{object.get_name}}]\n\n%% title\n    .V:{{object.get_name}}\n\n%% edit_area_sch\n    table width=100%\n        tr\n            td\n                big:::strong:::i\n                    .def {{object.get_name}}(request{% if object.param %}, {{object.param|safe}}{% endif %}):\n        tr\n            td\n                CTRL-STYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,height=calc(100% - top - 50),,,MINHEIGHT=300,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n                    DATA...{{txt|bencode}}\n\n\n%% edit_area\n    .def {{object.get_name}}(request{% if object.param %}, {{object.param|safe}}{% endif %}):\n    code_editor id=ace_editor,,,value={{txt|bencode}},,,href={{base_path}}{{save_path}},,,title={{title}}\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "manage",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def init_form(self):\n            self.stcwindow.Execute(\"from {{name}}.manage import *\")\n            self.insert_cmd.Bind(wx.EVT_BUTTON, self.OnInsertCmd)\n\n        def OnInsertCmd(self, event):\n            parm = self.cmd_list.GetValue()\n            if parm:\n                cmd = \"cmd('%s')\" % parm\n                self.stcwindow.Execute(cmd)\n\n%% all\n    %with form_width=800 form_height=400 show_title_bar=1 title=_(\"Manage\")\n        {{ block.super }}\n\n%% body\n    table width=100%\n        tr\n            td width=100%\n                table width=160\n                    tr\n                        td..._(Choice action):\n                        td\n                            select name=cmd_list,,,id=id_cmd_list,,,width=250\n                                option value=help...--help\n                                option value=syncdb...syncdb\n                                option value=migrate...migrate\n                                option value=createsuperuser...createsuperuser\n\n                        td cellpadding=0,,,valign=top,,,width=36,,,height=36\n                            CTRL-NOBG_BUTTON width=36,,,height=36,,,name=insert_cmd,,,label=cmd,,,SRC=client://actions/list-add.png\n    table width=100%\n        tr\n            td cellpadding=0\n                CTRL-SHELL width=100%,,,height=100%",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "import_form",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Import project\") \n        {{ block.super }}\n\n%% form_action\n    . ../\n\n%% row_edit_form\n    CTRL-STYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,HEIGHT=calc(100%-top-button_size_dy),,,MINHEIGHT=400\n        DATA",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChAppMenu2",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"schbuilder/schappmenu.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            url = '../schwiki/%s/%s/view/' % (self.subject.GetValue(), self.name.GetValue())\n            self.url.SetValue(url)\n            return href\n\n\n%% url_select\n    tr\n        th align=left\n            em\n                label for=id_url..._(Subject):\n        td\n            input type=text,,,id=id_subject,,,name=subject,,,{%if not object.url %}value={{object.parent.name}}{% endif %}\n    tr\n        th align=left\n            em\n                label for=id_url..._(Wiki name):\n        td\n            input type=text,,,id=id_name,,,name=name\n            input type=hidden,,,name=url,,,id=id_url\n            input type=hidden,,,name=parent,,,value={{object.parent.id}},,,id=id_parent\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChForm",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n    \n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Forms\")\n        {{ block.super }}\n\n%% list_content_actions\n    % new_row _(\"New form\")\n\n\n%% list_row_header\n    th...Name\n\n\n%% list_row\n    td...{{object.name}}\n\n%% list_row_actions\n    {{block.super}}\n    % row_actions:\n        .field_list/schformfield_set,Fields,[|client://actions/format-indent-more.png]\n        .field_edit/process_code,Process code,[|client://mimetypes/text-x-generic-template.png]\n        .field_edit/end_class_code,End class code,[|client://actions/go-first.png]\n        .field_edit/end_code,End code,[|client://actions/go-bottom.png]\n        .field_edit/doc,Doc,[|client://apps/help-browser.png]\n        .template_edit2,Template,[|client://mimetypes/x-office-presentation.png]\n\n\n%% table_header_edit\n  h2..._(Table list)\n\n\n%% row_edit\n    % form:\n            \"parent\", \"name\", \"module\"",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChFormField",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    % if form_edit\n        script language=python\n            def Init(self):\n                self.retdate = None\n                self.param.EventObject=self\n\n            def OnBeforeButtonClick(self):\n                self.param.set_new_href('/schbuilder/field_param/edit/'+self.type.GetValue()+'/')\n    %else\n        script language=python\n            def init_form(self):\n                self.add_field.Bind(wx.EVT_BUTTON, self.OnClick)\n\n            def signal_from_child(self, child, signal):\n                if signal=='set_bitmap_list':\n                    bitmaps = {\n                        \"field_up\":\"client://actions/go-up.png\",\n                        \"field_down\":\"client://actions/go-down.png\",\n                        \"field_duplicate\":\"client://actions/go-bottom.png\"\n                    }\n                    child.set_bitmaps(bitmaps)\n\n            def OnClick(self, event):\n                x = self.field_list.GetValue()\n                http = wx.GetApp().get_http(self.add_field)\n                adr = \"{{request.path}}\"+self.add_field.href+x+\"/add/\"\n                ret = http.get(self, str(adr))                \n                self.new_child_page(ret.new_url)\n\n\n            def filter_http_result(self, target, href, mp):\n                if 'field_down' in href or 'field_up' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        if 'field_down' in href:\n                            self.tabsort.grid.goto_next_row()\n                        else:\n                            self.tabsort.grid.goto_prev_row()\n                    return True\n                elif 'field_duplicate' in href:\n                    if 'YES' in str(mp.get_body()[0]):\n                        self.tabsort.grid.SetFocus()\n                        self.GetParent().refresh_html()\n                        self.tabsort.grid.goto_last_row()\n                    return True\n                else:\n                    return None\n\n\n%% all\n    %with form_width=720 form_height=480 show_title_bar=1 title=_(\"Fields\")\n        {{ block.super }}\n\n%% list_content_header\n    table\n        tr\n            th\n                label for=id_field_list...Select field type:\n            td width=210\n                select name=field_list,,,id=id_field_list,,,width=200\n                    %for item in object_list.model|choices_from_field:\"type\"\n                        option value={{item.0}}\n                            {{item.0}}\n            td align=left\n                % action \"add_field\" _(\"New field\") url=\"../../../\" \n\n\n%% list_row_header\n    th...Name\n    th...Label\n    th...Type\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.label}}\n    td...{{object.type}}\n\n%% list_row_actions\n    {{block.super}}\n    {% if not forloop.first %}\n        % row_actions:...field_up,Move up,[|client://actions/go-up.png]\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down,[|client://actions/go-down.png]\n    {% endif %}\n    \n    % row_actions:...field_duplicat,Duplicate,[|client://actions/go-bottom.png]\n\n\n%% table_header_edit\n  h2..._(Table field list)\n\n%% row_edit\n    % form: \n        \"parent\", \"name\", \"required\", \"label\", \"initial\", \"widget\", \"help_text\", \"error_messages\", \"param\"\n    tr\n        td\n        td\n            {{form.type.as_hidden}}\n            ",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_gen",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Compile result'\n        {{ block.super }}\n\n\n%% user_header\n    th...time\n    th...cmd\n    th...description\n    th...action\n\n%% user_row\n    tr\n        td...{{object.0|isoformat}}\n        td...{{object.1}}\n        td...{{object.2}}\n        td\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChTasks",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'fields'\n                \n            def signal_from_child(self, child, signal):\n                if signal=='set_bitmap_list':\n                    bitmaps = {\n                        \"task_code\":\"client://mimetypes/text-x-generic-template.png\",\n                        \"tasks\":\"client://actions/format-indent-more.png\",\n                        \"doc\":\"client://apps/help-browser.png\",\n                    }\n                    child.set_bitmaps(bitmaps)\n\n   \n%% all\n    %with form_width=720 form_height=480 show_title_bar=0 title=_(\"Tasks\") vform=True\n        {{ block.super }}\n\n\n%% list_content_actions\n    % new_row _(\"New task\")\n\n\n%% list_row_header\n    th...Name\n    th...Generic\n\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.generic}}\n\n\n%% list_row_actions\n    {% if not forloop.first %}\n        % row_actions:... field_up,Move up\n    {% endif %}\n    {% if not forloop.last %}\n        % row_actions:...field_down,Move down\n    {% endif %}\n\n    % row_actions:\n        .edit\n        .field_edit/table_code,Code,code\n        .field_list/schfield_set,Fields,fields\n        .field_edit/doc,Documentation,doc\n        .template_edit,Template\n        .delete\n\n%% table_header_edit\n  h2..._(Table list)\n\n\n%% row_edit\n    % form:\n        'parent', 'name'\n    \n    % form_item base_table.select:\n        %if not object.base_table or object.base_table == \"\"\n            option selected=selected,,,value=...---------\n        %else\n            option value=...---------\n        %if object.base_table == 'MPTTModel'\n            option value=MPTTModel...MPTTModel,,,selected=selected\n        %else\n            option value=MPTTModel...MPTTModel                    \n            \n        %for model in object.get_models\n            %if model == object.base_table\n                option value={{model}},,,selected=selected...{{model}}\n            %else\n                option value={{model}}...{{model}}\n            \n    % form:\n        'verbose_name', 'verbose_name_plural', 'generic'\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChTask",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n\n%extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n                                \n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Tasks\") vform=True\n        {{ block.super }}\n\n%% list_content_actions\n    % new_row _(\"New task\")\n        \n%% list_row_header\n    th...Name\n\n%% list_row\n    td...{{object.name}}\n\n%% list_row_actions\n    {{ block.super }}\n    % row_actions:\n        .field_edit/code,Code,[|client://mimetypes/text-x-generic-template.png],_parent\n        .field_edit/doc,Doc,[|client://apps/help-browser.png],_parent\n    \n%% row_edit                \n    % form:\n        \"parent\", \"name\", \"perms\", \"publish\", \"publish_group\"\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "db_field_edt_task",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n\n%extends \"schsys/db_field_edt.html\"\n\n%load exfiltry\n%load exsyntax\n\n%%form_title\n    .Edition: {{object.name}} [{{title}}]\n\n%% title\n    .V:{{object.name}}\n\n%% edit_area_sc\n    table width=100%\n        tr\n            td\n    CTRL-STYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,HEIGHT=100%,,,MINHEIGHT=400,,,MINWIDTH=800,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n        DATA...{{txt|bencode}}\n\n    % comment:\n        table width=100%\n            tr\n                td\n                    .def {{object.name}}(id, input_queue, output_queue, *args, **kwargs):\n            tr\n                td\n                    CTRL-STYLEDTEXT NAME=EDITOR,,,WIDTH=100%,,,HEIGHT=100%,,,MINHEIGHT=400,,,SRC={{ext}},,,HREF={{base_path}}{{save_path}}\n                        DATA...{{txt|bencode}}\n",
                    "url": "",
                    "url_parm": ""
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_installer",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Build result'\n        {{ block.super }}\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % list_action \"download\" _(\"Download installer\") target=\"_parent\" url=url\n\n\n%% user_header\n    th...Description\n    th...action\n\n\n%% user_row\n    %if object:\n        tr\n            td...{{object}}\n            td\n        \n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChStatic",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=800 form_height=600\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New static file\"\n\n%% list_row_header\n    th...Type\n    th...Name\n\n%% list_row\n    td...{{object.get_type_display}}\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/code,Code,[|client://apps/accessories-text-editor.png],_parent\n        .delete\n\n%% row_edit\n    % form:\n",
                    "url": "",
                    "url_parm": ""
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChFiles",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with form_width=800 form_height=600\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New file\"\n\n%% list_row_header\n    th...File type\n    th...Name\n\n%% list_row\n    td...{{object.file_type}}\n    td...{{object.name}}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .field_edit/content,Content,content\n        .delete\n\n%% row_edit\n    % form:\n        \"parent\", \"file_type\", \"name\"\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_prj_import",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Import result'\n        {{ block.super }}\n\n\n%% user_header\n    th...time\n    th...cmd\n    th...description\n\n\n%% user_row\n    tr\n        td...{{object.0}}\n        td...{{object.1}}\n        td...{{object.2}}\n        \n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChLocale",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% all\n    %with edit_vscroll=True table_type='datatable'\n        {{ block.super }}\n\n%% list_content_actions\n    % new_row _(\"New locale\")\n\n%% list_row_header\n    th...Name\n\n\n%% list_row\n    td...{{object.name}}\n\n\n%% list_row_actions\n    % row_actions: ===>\n        edit\n        |\n        field_list/schtranslate_set,Locale,locale\n        translate_sync,_(\"Sync translate messages\"),[|client://actions/view-refresh.png]\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChTranslate",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n%extends \"form.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def filter_url(self, target, href):\n            return href\n\n%% all\n    %with table_type='datatable':\n        {{ block.super }}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"New translation\"\n    \n\n%% list_row_header\n    th...Description\n    th...Translation\n    th...Status\n\n%% list_row\n    td...{{object.description}}\n    td...{{object.translation}}\n    td...{{object.status}}\n\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n\n\n%% row_edit\n    % form:\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_translate_sync",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='Translaction results'\n        {{ block.super }}\n\n\n%% user_header\n    th...Updated\n    th...Inserted\n\n\n%% user_row\n    tr\n        td align=right... {{object.0}}\n        td align=right... {{object.1}}\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_locale_gen",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with show_title_bar=1 title='Generate locale files'\n        {{ block.super }}\n\n%% user_header\n    th...Status\n\n\n%% user_row\n    tr\n        td... {{object.0}}\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "FormInstaller",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='Make installer'\n        {{ block.super }}\n\n%% form_content_schbutton\n    input type=submit,,,value=_(Run),,,class=btn btn-info,,,target=_self,,,widt=200,,,height=44\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "FormInstall",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='Install application'\n        {{ block.super }}\n\n%% form_content_button\n    button type=submit,,,value=_(Install),,,class=btn btn-fab btn-raised btn-info ladda-button refresh-button,,,data-style=slide-left,,,title=_(Install)\n        span class=fa fa-refresh\n\n%% form_content_schbutton\n    input type=submit,,,value=_(Install),,,class=btn btn-info,,,target=_self,,,widt=200,,,height=44\n    \n%% user_header\n    th...Message\n    th...action\n\n%% user_row\n    tr\n        td... {{object}}\n        th\n\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": true,
                    "name": "devtools",
                    "tags_mount": "",
                    "template_code": "^^^\nhttp = wx.GetApp().get_http(self)\nhttp.post(self, \"/tools/get_user_param/\", parm={ 'param': 'appset_up' })\npath = http.str()\n\nif path:\n    def _after(address):\n        wx.GetApp().GetTopWindow().new_main_page(address, panel=\"toolbar_Aplikacje__Lista_aplikacji\")\n    wx.CallLater(100, _after, path)\n\n",
                    "url": "devtools",
                    "url_parm": ""
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "SChChannelConsumer",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n\n%extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n% load builder_filters\n\n \n%% pythoncode\n    % if form_list\n        script language=python\n            def init_form(self):\n                self.tabsort.grid.default_command = 'code'\n\n%% all\n    %with form_width=960 form_height=1200 show_title_bar=0 title=_(\"Consumers\") vform=True\n        {{ block.super }}\n\n%% list_content_header\n    table width=100%\n        tr\n            td\n                % widget class='menu' id='new_consumer' title=_(\"&New consumer\"):\n                    % for pos in object_list|module_obj:\"Consumer_CHOICES\"\n                        li\n                            a href={{table_path}}{{pos.0}}/add/...{{pos.1}}\n        \n%% list_row_header\n    th...Name\n    th...Type\n    th...Url\n\n%% list_row\n    td...{{object.name}}\n    td...{{object.consumer_type}}\n    td...{{object.url}}\n    \n%% list_row_actions\n    {{ block.super }}\n    % row_actions:\n        .field_edit/consumer_code,Code,[|client://mimetypes/text-x-generic-template.png],_parent\n        .field_edit/doc,Doc,[|client://apps/help-browser.png],_parent\n    \n%% row_edit\n    {{ form.consumer_type.as_hidden }}\n    strong \n        {{object.get_consumer_type_display}}\n                \n    % form:\n        \"parent\", \"name\", \"url\"\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_restart_server",
                    "tags_mount": null,
                    "template_code": "% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    %with show_title_bar=1 title='Restart server'\n        {{ block.super }}\n\n%% content\n    % if success:\n        h1..._(Success)\n        div class=alert alert-primary,,,role=alert\n            ._(A restart signal has been sent, depending on the configuration, the restart may take from a few seconds to several hours).\n    % else:\n        h1..._(Warning)\n        div class=alert alert-primary,,,role=alert\n            ._(It is not possible to send a signal for restart)\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_gen_milestone",
                    "tags_mount": null,
                    "template_code": "% extends \"schbuilder/v_gen.html\"\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_update",
                    "tags_mount": null,
                    "template_code": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Compile result'\n        {{ block.super }}\n\n\n%% user_header\n    th...time\n    th...cmd\n    th...description\n    th...action\n\n%% user_row\n    tr\n        td...{{object.0|isoformat}}\n        td...{{object.1}}\n        td...{{object.2}}\n        td\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "FormImportFromGit",
                    "tags_mount": null,
                    "template_code": "% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with form_width=800 form_height=600 show_title_bar=1 title='Import prj from git'\n        {{ block.super }}\n\n\n%% form_content_schbutton\n    input type=submit,,,value=_(Import),,,class=btn btn-info,,,target=_self,,,height=44\n\n%% user_header\n    th...time\n    th...cmd\n    th...description\n    th...action\n\n%% user_row\n    tr\n        td...{{object.0|isoformat}}\n        td...{{object.1}}\n        td...{{object.2}}\n        td\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_run",
                    "tags_mount": null,
                    "template_code": "% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    % if not form_list:\n        script language=python\n            def init_form(self):\n                from pytigon_lib.schtools.schjson import loads\n                app = wx.GetApp()\n                form = self\n                \n                class callback:\n                    def on_websocket_message(msg):\n                        nonlocal form\n                        msg2 = loads(msg)\n                        form.msg.AppendText(msg2['txt'])\n                        form.msg.DocumentEnd()\n                self.callback = callback\n                app.create_websocket('{{app_path}}webserver/channel/', callback)\n                \n                async def start_webserver():\n                    nonlocal app\n                    await app.websocket_send(\n                        \"{{app_path}}webserver/channel/\", {'id': '{{project.name}}', 'command': 'start', }\n                    )                \n                app.StartCoroutine(start_webserver, app.GetTopWindow())\n\n            def on_close(self):\n                app = wx.GetApp()\n                async def stop_webserver():\n                    nonlocal app\n                    await app.websocket_send(\n                        \"{{app_path}}webserver/channel/\", {'id': '{{project.name}}', 'command': 'stop', }\n                    )                \n\n                app.StartCoroutine(stop_webserver, app.GetTopWindow())\n                app.remove_websoket_callback(\"{{app_path}}webserver/channel/\", self.callback)\n\n%% all\n    % with show_title_bar=1 title='Web server'\n        {{ block.super }}\n\n%% content\n    ctrl-styledtext name=msg,,,width=100%-20,,,height=100%-40\n",
                    "url": null,
                    "url_parm": null
                },
                {
                    "asynchronous": false,
                    "direct_to_template": null,
                    "name": "v_manage",
                    "tags_mount": null,
                    "template_code": "% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% pythoncode\n    % if not form_list:\n        script language=python\n            def init_form(self):\n                from pytigon_lib.schtools.schjson import loads\n                app = wx.GetApp()\n                form = self\n                \n                class callback:\n                    def on_websocket_message(msg):\n                        nonlocal form\n                        msg2 = loads(msg)\n                        form.msg.AppendText(msg2['txt'])\n                        form.msg.DocumentEnd()\n                self.callback = callback\n                app.create_websocket('{{app_path}}django_manage/channel/', callback)\n\n                def make_on_click(cmd):\n                    def on_click(event):\n                        nonlocal cmd\n                        event.Skip()\n                        self.cmd(cmd)\n                    return on_click\n                \n                self.makemigrations.Bind(wx.EVT_BUTTON, make_on_click(\"makemigrations --no-input --no-color\"))\n                self.makeallmigrations.Bind(wx.EVT_BUTTON, make_on_click(\"makeallmigrations --no-input --no-color\"))\n                self.migrate.Bind(wx.EVT_BUTTON, make_on_click(\"migrate --no-input --no-color\"))\n                self.createautouser.Bind(wx.EVT_BUTTON, make_on_click(\"createautouser --no-color\"))\n                self.compilemessages.Bind(wx.EVT_BUTTON, make_on_click(\"compilemessages --no-color\"))\n                self.qinfo.Bind(wx.EVT_BUTTON, make_on_click(\"qinfo --no-color\"))\n                self.send_mail.Bind(wx.EVT_BUTTON, make_on_click(\"send_mail --no-color\"))\n                             \n            def cmd(self, cmd):\n                app = wx.GetApp()\n                async def start_webserver():\n                    nonlocal app\n                    await app.websocket_send(\n                        \"{{app_path}}django_manage/channel/\", {'id': '{{project.name}}', 'command': 'start',  'cmd': cmd }\n                    )                \n                app.StartCoroutine(start_webserver, app.GetTopWindow())\n\n            def on_close(self):\n                app = wx.GetApp()\n                async def stop_webserver():\n                    nonlocal app\n                    await app.websocket_send(\n                        \"{{app_path}}django_manage/channel/\", {'id': '{{project.name}}', 'command': 'stop', }\n                    )                \n\n                app.StartCoroutine(stop_webserver, app.GetTopWindow())\n                app.remove_websoket_callback(\"{{app_path}}django_manage/channel/\", self.callback)\n\n%% all\n    % with show_title_bar=1 title='Manage '|append_str:project.name\n        {{ block.super }}\n\n%% content\n    table class=toolbar\n        tr\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=makemigrations,,,label=_(Make migrations),,,SRC=png://status/dialog-information.png\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=makeallmigrations,,,label=_(Make all migrations),,,SRC=png://status/software-update-available.png\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=migrate,,,label=_(Migrate),,,SRC=png://actions/go-next.png\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=createautouser,,,label=_(Create auto user),,,SRC=png://apps/system-users.png\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=compilemessages,,,label=_(Compile messages),,,SRC=png://mimetypes/video-x-generic.png\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=qinfo,,,label=_(Qinfo),,,SRC=png://apps/help-browser.png\n            td cellpadding=0\n                CTRL-NOBG_BUTTON_TXT NAME=send_mail,,,label=_(Send mails),,,SRC=png://actions/mail-reply-all.png\n\n    ctrl-styledtext name=msg,,,width=100%-20,,,height=100%-120\n",
                    "url": null,
                    "url_parm": null
                }
            ],
            [
                {
                    "icon": "client://status/folder-open.png",
                    "icon_code": "",
                    "icon_size": "1",
                    "name": "Projects",
                    "perms": "schbuilder.change_schappset",
                    "url": "table/SChAppSet/main_view/form/list/",
                    "url_type": "desktop"
                },
                {
                    "icon": "png://actions/edit-delete.png",
                    "icon_code": null,
                    "icon_size": "1",
                    "name": "Archived projects",
                    "perms": "schbuilder.change_schappset",
                    "url": "table/SChAppSet/not_main_view/form/list/",
                    "url_type": "desktop"
                },
                {
                    "icon": "client://categories/applications-internet.png",
                    "icon_code": null,
                    "icon_size": "1",
                    "name": "Make installer",
                    "perms": "",
                    "url": "form/Installer/",
                    "url_type": "browser"
                },
                {
                    "icon": "client://devices/drive-optical.png",
                    "icon_code": null,
                    "icon_size": "1",
                    "name": "Install app",
                    "perms": "",
                    "url": "form/Install/",
                    "url_type": "browser"
                }
            ],
            [
                [
                    {
                        "asynchronous": false,
                        "doc": "",
                        "end_class_code": "",
                        "end_code": "",
                        "module": "",
                        "name": "Installer",
                        "process_code": "name = self.cleaned_data['name']\nreturn installer(request, name)\n"
                    },
                    [
                        {
                            "error_messages": "",
                            "help_text": "",
                            "initial": "",
                            "label": "Application package name",
                            "name": "name",
                            "param": "choices=models.apppack",
                            "required": true,
                            "type": "ChoiceField",
                            "widget": ""
                        }
                    ]
                ],
                [
                    {
                        "asynchronous": false,
                        "doc": "",
                        "end_class_code": "",
                        "end_code": "",
                        "module": "",
                        "name": "Install",
                        "process_code": "\ninstall_file = request.FILES[\"install_file\"]\nname = install_file.name.split(\".\")[0].split('-')[0]\n\nptig = Ptig(install_file.file)\n#zip_file = zipfile.ZipFile(install_file.file)\nobject_list = ptig.extract_ptig()\n\n#extract_to = os.path.join(settings.PRJ_PATH, name)\n#(ret_code, output, err) = py_run(\n#    [os.path.join(extract_to, \"manage.py\"), \"post_installation\"]\n#)\n\n#if hasattr(pytigon.schserw.settings, \"_PRJ_PATH_ALT\"):\n#    base_path = pytigon.schserw.settings._PRJ_PATH_ALT\n#else:\n#    base_path = settings.PRJ_PATH_ALT\n\nprj_file_path = os.path.join(ptig.extract_to, name, name + \".prj\")\n\nif os.path.exists(prj_file_path):\n    with open(prj_file_path, \"rt\") as f:\n        content = f.read()\n        x = prj_import_from_str(content, backup_old=True)\n        object_list.extend(x[\"object_list\"])\n\nreturn {\"object_list\": object_list}\n"
                    },
                    [
                        {
                            "error_messages": null,
                            "help_text": null,
                            "initial": null,
                            "label": "Install file (*.ptig)",
                            "name": "install_file",
                            "param": null,
                            "required": false,
                            "type": "FileField",
                            "widget": null
                        }
                    ]
                ],
                [
                    {
                        "asynchronous": false,
                        "doc": "",
                        "end_class_code": "",
                        "end_code": "",
                        "module": null,
                        "name": "ImportFromGit",
                        "process_code": "object_list = []\ngit_repository = self.cleaned_data['path']\nprj_name = git_repository.split('/')[-1].split('.')[0]\nbase_path = os.path.join(settings.DATA_PATH, \"prj\", prj_name)\ngit_path = os.path.join(base_path, \".git\")\nif os.path.exists(git_path):\n    repo = Repo(base_path)\n    try:\n        remote_refs = porcelain.fetch(repo, git_repository)\n        repo[b\"HEAD\"] = remote_refs.refs[b\"refs/heads/master\"]\n        index_file = repo.index_path()\n        tree = repo[b\"HEAD\"].tree\n        index.build_index_from_tree(repo.path, index_file, repo.object_store, tree)\n        object_list.append(\n            (datetime.datetime.now(), \"git fetch success\", git_repository)\n        )\n    except Exception as e:\n        object_list.append(\n            (datetime.datetime.now(), \"git fetch error\", str(e))\n        )\nelse:\n    try:\n        porcelain.clone(git_repository, base_path)\n        object_list.append(\n            (datetime.datetime.now(), \"git clone success\", git_repository)\n        )\n    except Exception as e:\n        object_list.append(\n            (datetime.datetime.now(), \"git clone error\", str(e))\n        )\n\nprj_path = os.path.join(base_path, f\"{prj_name}.prj\")\nif os.path.exists(prj_path):\n    with open(prj_path, \"rt\") as f: \n        content = f.read()\n        x = prj_import_from_str(content, backup_old=True)\n        object_list.extend(x['object_list'])\n        \nreturn { 'object_list': reversed(object_list) }\n"
                    },
                    [
                        {
                            "error_messages": null,
                            "help_text": null,
                            "initial": null,
                            "label": "Path to git repository",
                            "name": "path",
                            "param": "max_length=None, min_length=None",
                            "required": true,
                            "type": "CharField",
                            "widget": null
                        }
                    ]
                ]
            ],
            [
                {
                    "code": "if cproxy:\n    cproxy.send_event(\"<ul class='data'></ul><div name='task_end_info' style='display: none;'>Finish</div>\")\nfor i in range(0,30):\n    print(\"item:\", i)\n    if cproxy:\n        cproxy.send_event(\"<li>item %d</li> ===>> .data\" % i)\n    time.sleep(1)\nreturn \"Hello world\"\n",
                    "doc": null,
                    "name": "test",
                    "perms": null,
                    "publish": true,
                    "publish_group": "test"
                }
            ],
            [
                {
                    "consumer_code": "COUNT=1\n\nasync def connect(self): \n    await self.accept()\n \nasync def receive_json(self, content):\n    print(\"RECEIVED: \", content)\n    await self.send_json({\"txt\": \"hello world\"})\n    #await self.close(code=4123)\n\n    for i in range(0,10):\n        await asyncio.sleep(1)\n        await self.send_json({\"clock\": self.COUNT })\n        self.COUNT+=1\n\nasync def disconnect(self, close_code):\n    print(\"Websocket closed\", close_code)\n",
                    "consumer_type": "AsyncJsonWebsocketConsumer",
                    "doc": null,
                    "name": "Clock",
                    "url": "clock"
                },
                {
                    "consumer_code": "PROC = None\n\nasync def connect(self):\n    await self.accept()\n\nasync def subprocess(self, prj):\n    proc = await asyncio.create_subprocess_exec(\n        sys.executable,\n        \"-m\",\n        \"pytigon.ptig\",\n        \"manage_\" + prj,\n        \"runserver\",\n        stdout = asyncio.subprocess.PIPE,\n        stderr = asyncio.subprocess.STDOUT\n    )\n    self.PROC = proc\n\n    while True:\n        data = await proc.stdout.readline()\n        if data == b\"\":\n            break\n        await self.send_json({\"txt\": data.decode(\"utf-8\")})\n\n    await proc.wait()\n    await self.send_json({\"txt\": \"\"})\n\nasync def receive_json(self, content):\n    command = content[\"command\"]\n    if command == \"start\":\n        if self.PROC:\n            parent = psutil.Process(self.PROC.pid)\n            for child in parent.children(recursive=True):\n                child.kill()\n            parent.kill()\n            await self.PROC.wait()\n            self.PROC = None\n        loop = asyncio.get_running_loop()\n        tsk = loop.create_task(self.subprocess(content['id']))\n        def finish(t):\n            print(\"Finished\")\n        tsk.add_done_callback(finish)\n    else:\n        if self.PROC:\n            parent = psutil.Process(self.PROC.pid)\n            for child in parent.children(recursive=True):\n                child.kill()\n            parent.kill()\n            await self.PROC.wait()\n            self.PROC = None\n\nasync def disconnect(self, close_code):\n    print(\"Websocket closed\", close_code)\n",
                    "consumer_type": "AsyncJsonWebsocketConsumer",
                    "doc": null,
                    "name": "WebServer",
                    "url": "webserver"
                },
                {
                    "consumer_code": "PROCS = []\n\nasync def connect(self):\n    await self.accept()\n\nasync def subprocess(self, prj, cmd):\n    proc = await asyncio.create_subprocess_exec(\n        sys.executable,\n        \"-m\",\n        \"pytigon.ptig\",\n        \"manage_\" + prj,\n        *cmd,\n        stdout = asyncio.subprocess.PIPE,\n        stderr = asyncio.subprocess.STDOUT\n    )\n    self.PROCS.append(proc)\n\n    while True:\n        data = await proc.stdout.readline()\n        if data == b\"\":\n            break\n        await self.send_json({\"txt\": data.decode(\"utf-8\")})\n\n    await proc.wait()\n    await self.send_json({\"txt\": \"\"})\n    self.PROCS.remove(proc)\n\nasync def receive_json(self, content):\n    command = content[\"command\"]\n    if command == \"start\":\n        cmd = content[\"cmd\"].split(\" \")\n        loop = asyncio.get_running_loop()\n        tsk = loop.create_task(self.subprocess(content['id'], cmd))\n        def finish(t):\n            print(\"Finished\")\n        tsk.add_done_callback(finish)\n    else:\n        if self.PROCS:\n            for proc in self.PROCS:\n                parent = psutil.Process(proc.pid)\n                for child in parent.children(recursive=True):\n                    child.kill()\n                parent.kill()\n                await proc.wait()\n            self.PROCS = []\n\nasync def disconnect(self, close_code):\n    print(\"Websocket closed\", close_code)\n",
                    "consumer_type": "AsyncJsonWebsocketConsumer",
                    "doc": null,
                    "name": "DjangoManage",
                    "url": "django_manage"
                }
            ],
            [
                {
                    "content": "from django import template\nfrom django.db.models.query import QuerySet\n\nregister = template.Library()\n\n@register.filter(name='module_obj')\ndef filter_module_obj(obj, obj_name):\n    if type(obj) == QuerySet:\n        module_name = obj.model.__module__\n        return getattr(__import__(module_name).models, obj_name)\n    return None\n",
                    "file_type": "f",
                    "name": "builder_filters"
                },
                {
                    "content": "# -*- coding: utf-8 -*-\nfrom django.core.management.base import BaseCommand, CommandError\n\nimport sys\nimport io\nimport os\nimport getopt\n\nfrom django.conf import settings\n\nfrom pytigon_lib.schtools.install import install\nfrom schbuilder.views import prj_export\nfrom schbuilder.models import SChAppSet\n\nPRJS_TO_EXPORT =  [\n    'schdevtools', #prepare with initial data\n    'schsetup', 'schportal', 'schpytigondemo', 'schwebtrapper', 'scheditor', #prepare db but without initial data\n    'schcomponents', 'scheditor', '_schdata', '_schremote', '_schtools', '_schwiki', #without db\n]    \n\n\nclass Command(BaseCommand):\n    help =\"Prepare installer files\"\n\n    def add_arguments(self, parser):\n        parser.add_argument(\n            '--prjs', \n            default=None,\n            help='Specifies projects',\n        )\n\n    def handle(self, *args, **options):\n        if options['prjs']:\n            prjs_to_export = options['prjs'].replace(',',';').split(';')\n        else:\n            prjs_to_export = PRJS_TO_EXPORT\n            \n        for prj_name in prjs_to_export:\n            if not prj_name:\n                continue\n            prjs = list(SChAppSet.objects.filter(name = prj_name))\n            if len(prjs)>0:\n                prj = prjs[-1]        \n                x = prj_export(None, prj.pk)\n                path = os.path.join(os.path.join(settings.ROOT_PATH, \"install\"), f\"{prj_name}.prj\")\n                print(\"Export prj: \", path)\n                with open(path, \"wt\") as f: \n                    if type(x.content)==bytes:\n                        f.write(x.content.decode('utf-8'))\n                    else:\n                        f.write(x.content)\n",
                    "file_type": "m",
                    "name": "prepare_installer_files.py"
                },
                {
                    "content": "# -*- coding: utf-8 -*-\nfrom django.core.management.base import BaseCommand, CommandError\n\nimport sys\nimport io\nimport os\nimport getopt\n\nfrom django.conf import settings\n\nfrom schbuilder.views import prj_import_from_str\nfrom schbuilder.models import SChAppSet\n\nPRJS_TO_IMPORT =  [\n    'schdevtools', #prepare with initial data\n    'schsetup', 'schportal', 'schpytigondemo', 'schwebtrapper', 'scheditor', #prepare db but without initial data\n    'schcomponents', 'scheditor', '_schdata', '_schremote', '_schtools', '_schwiki', #without db\n]    \n\n\nclass Command(BaseCommand):\n    help =\"Prepare installer files\"\n\n    def handle(self, *args, **options):\n        for prj_name in PRJS_TO_IMPORT:\n            prjs = list(SChAppSet.objects.filter(name = prj_name))\n            if len(prjs)==0:\n                path = os.path.join(os.path.join(settings.ROOT_PATH, \"install\"), f\"{prj_name}.prj\")\n                print(\"Import prj: \", path)\n                with open(path, \"rt\") as f: \n                    s = f.read()\n                    prj_import_from_str(s)\n",
                    "file_type": "m",
                    "name": "import_projects.py"
                },
                {
                    "content": "import cython \n\n#cdef extern from *:\n#    \"\"\"\n#    static long square(long x) {return x * x / 3;}\n#    \"\"\"\n#    long square(long x)\n\ndef sum(x:cython.int, y:cython.int) -> cython.int:\n\n    i:cython.int\n    j:cython.int\n    ret:cython.int = 0\n\n    for j in range(0,1000):\n        for i in range(0,1000):\n            ret += i\n        for i in range(0,10001):\n            ret -= i\n        \n    return ret\n",
                    "file_type": "x",
                    "name": "test1"
                },
                {
                    "content": "int sum(int a, int b)\n{\n    return a + b;\n}",
                    "file_type": "C",
                    "name": "test2"
                },
                {
                    "content": "def sum(x,y):\n    return x+y",
                    "file_type": "l",
                    "name": "test3"
                },
                {
                    "content": "^^^{# -*- coding: utf-8 -*- #}\n\n%extends 'template/base_base.html'|translate:lang\n{% load exfiltry %}{% load exsyntax %}\n\n% load exfiltry\n% load exsyntax\n% load bootstrap4\n    \n%% js_extrascipts\n    {% spec '{' %}block.super{% spec '}' %}\n    {% for js_static in js_static_files %}{% spec '[' %} module_link '{{prj.name}}/js/{{js_static.name}}.js' {% spec ']' %}\n    {% endfor %}\n    {% for prj_tab in static_for_ext_apps %}{% for js_static2 in prj_tab.1 %}{% spec '[' %} module_link '{{prj_tab.0}}/js/{{js_static2.name}}.js' {% spec ']' %}\n    {% endfor %}{% endfor %}\n    {% if component_elements %}{% spec \"[\" %} jscript_link 'system/require.js' {% spec \"]\" %}\n    {% endif %}\n\n%% extrastyle\n    {% spec '{' %}block.super{% spec '}' %}\n    {% for css_static in css_static_files %}{% spec '[' %} css_link '{{prj.name}}/css/{{css_static.name}}.css' {% spec ']' %}\n    {% endfor %}\n    {% for prj_tab in static_for_ext_apps %}{% for css_static2 in prj_tab.2 %}{% spec '[' %} css_link '{{prj_tab.0}}/css/{{css_static2.name}}.css' {% spec ']' %}\n    {% endfor %}{% endfor %}\n\n%% body_footer_scripts\n    {% spec '{' %}block.super{% spec '}' %}\n    {% if component_elements %}\n    {% for component_elem in component_elements %}{% spec \"[\" %} component '{{component_elem}}' {% spec ']' %}\n    {% endfor %}\n    {% endif %}\n\n%% component_init\n    {% if component_elements %}{% if initial_state %}    .var initial_state = { {{initial_state|one_line_code|safe}} };{% else %}    .var initial_state={};{% endif %}\n        .GLOBAL_BUS.set_state(initial_state);\n        .var component_init = [ {% for pos in component_elements %}\"{{pos|last_elem:'/'}}\", {% endfor %} ];  {% else %} .var component_init = []; {% endif %}\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/base.ihtml"
                },
                {
                    "content": "^^^# -*- coding: utf-8 -*-\nimport os, sys\n\n_lp = os.path.dirname(os.path.abspath(__file__))\n\nif 'PYTIGON_ROOT_PATH' in os.environ:\n    _rp = os.environ['PYTIGON_ROOT_PATH']\nelse:\n    _rp = os.path.abspath(os.path.join(_lp, \"..\", \"..\", \"..\"))\n\nif not _lp in sys.path: sys.path.insert(0,_lp)\nif not _rp in sys.path: sys.path.insert(0,_rp)\n\nfrom pytigon_lib import init_paths\ninit_paths()\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", 'settings_app')\n\nimport django\nfrom django.core.wsgi import get_wsgi_application\ndjango.setup()\n\napplication = get_wsgi_application()\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/wsgi.ihtml"
                },
                {
                    "content": "^^^# -*- coding: utf-8 -*-\nimport os, sys\n\n_lp = os.path.dirname(os.path.abspath(__file__))\n\nif 'PYTIGON_ROOT_PATH' in os.environ:\n    _rp = os.environ['PYTIGON_ROOT_PATH']\nelse:\n    _rp = os.path.abspath(os.path.join(_lp, \"..\", \"..\", \"..\"))\n\nif not _lp in sys.path: sys.path.insert(0,_lp)\nif not _rp in sys.path: sys.path.insert(0,_rp)\n\nfrom pytigon_lib import init_paths\ninit_paths()\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", 'settings_app')\n\nimport django\nfrom channels.routing import get_default_application\ndjango.setup()\n\napplication = get_default_application()\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/asgi.ihtml"
                },
                {
                    "content": "^^^#!/usr/bin/env python\nimport os\nimport sys\nfrom os import environ\n\n_lp = os.path.dirname(os.path.abspath(__file__))\nos.chdir(_lp)\nif not _lp in sys.path: sys.path.insert(0, _lp)\n_rp2 = None\n\nif 'PYTIGON_ROOT_PATH' in environ:\n    _rp = environ['PYTIGON_ROOT_PATH']\n    _rp2 = os.path.abspath(os.path.join(_rp, \"..\"))\nelse:\n    _rp= os.path.abspath(os.path.join(_lp, \"..\", \"..\", \"..\"))\n\nif not _rp in sys.path: sys.path.insert(0, _rp)\nif _rp2 and not _rp2 in sys.path: sys.path.append(_rp2)\n\nfrom pytigon_lib import init_paths\ninit_paths()\n\nfrom pytigon_lib.schdjangoext.django_manage import *\n\nif __name__ == \"__main__\":\n    cmd(sys.argv, from_main=True)\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/manage.ihtml"
                },
                {
                    "content": "^^^# -*- coding: utf-8 -*-\nimport os\nimport sys\nfrom urllib.parse import urlparse\n\nPRJ_TITLE = \"{{prj.title}}\"\nPRJ_NAME = \"{{prj.name}}\"\nTHEMES = ['{{prj.desktop_gui_type}}', '{{prj.tablet_gui_type}}', '{{prj.smartfon_gui_type}}']\n\n_lp = os.path.dirname(os.path.abspath(__file__))\n\nif 'PYTIGON_ROOT_PATH' in os.environ:\n    _rp = os.environ['PYTIGON_ROOT_PATH']\nelse:\n    _rp = os.path.abspath(os.path.join(_lp, \"..\", \"..\"))\n\nif not _lp in sys.path: sys.path.insert(0,_lp)\nif not _rp in sys.path: sys.path.insert(0,_rp)\n\nfrom pytigon_lib import init_paths\ninit_paths(PRJ_NAME, _lp)\n\nfrom pytigon_lib.schdjangoext.django_init import get_app_config\nfrom pytigon_lib.schtools.platform_info import platform_name\n\nfrom pytigon.schserw.settings import *\n\nfrom apps import APPS, APPS_EXT, PUBLIC, MAIN_PRJ\n\ntry:\n    from global_db_settings import setup_databases\nexcept:\n    setup_databases = None\n\nMEDIA_ROOT = os.path.join(os.path.join(DATA_PATH, PRJ_NAME), 'media')\nUPLOAD_PATH = os.path.join(MEDIA_ROOT, \"upload\")\nLOCAL_ROOT_PATH = os.path.abspath(os.path.join(_lp, \"..\"))\nROOT_PATH = _rp\nURL_ROOT_PREFIX = \"\"\nif not LOCAL_ROOT_PATH in sys.path: sys.path.append(LOCAL_ROOT_PATH)\n\nif PRODUCTION_VERSION and  PLATFORM_TYPE == \"webserver\" and not MAIN_PRJ:\n    URL_ROOT_FOLDER='{{prj.name}}'\n    URL_ROOT_PREFIX = URL_ROOT_FOLDER+\"/\"\n    STATIC_URL = '/'+URL_ROOT_FOLDER+'/static/'\n    MEDIA_URL = '/'+URL_ROOT_FOLDER+'/site_media/'\n    MEDIA_URL_PROTECTED = '/'+URL_ROOT_FOLDER+'/site_media_protected/'\n\nfrom pytigon_lib.schtools.install_init import init\ninit(PRJ_NAME, ROOT_PATH, DATA_PATH, PRJ_PATH, STATIC_ROOT, [MEDIA_ROOT, UPLOAD_PATH])\n\nSTART_PAGE = '{{prj.start_page}}'\nSHOW_LOGIN_WIN = {% if prj.login_required %}True{% else %}False{% endif %}\nPACKS = []\n\nfor app in APPS:\n    if '.' in app:\n        pack = app.split('.')[0]\n        if not pack in PACKS:\n            PACKS.append(pack)\n            p1 = os.path.join(LOCAL_ROOT_PATH, pack)\n            if not p1 in sys.path: sys.path.append(p1)\n            p2 = os.path.join(PRJ_PATH_ALT, pack)\n            if not p2 in sys.path: sys.path.append(p2)\n\n    if not app in [ x if type(x)==str else x.label for x in INSTALLED_APPS]:\n        INSTALLED_APPS.append(get_app_config(app))\n        aa = app.split('.')\n        for root_path in [PRJ_PATH, PRJ_PATH_ALT]:\n            base_path = os.path.join(root_path,  aa[0])\n            if os.path.exists(base_path):\n                TEMPLATES[0]['DIRS'].append(os.path.join(base_path, \"templates\"))\n                if len(aa)==2:\n                    if not base_path in sys.path: sys.path.append(base_path)\n                    LOCALE_PATHS.append(os.path.join(base_path, \"locale\"))\n\nfor app in APPS_EXT:\n    INSTALLED_APPS.append(app)\n    \nTEMPLATES[0]['DIRS'].insert(0, os.path.join(DATA_PATH, PRJ_NAME, \"templates\"))\nTEMPLATES[0]['DIRS'].insert(0, os.path.join(os.path.dirname(os.path.abspath(__file__)), \"templates\"))\nTEMPLATES[0]['DIRS'].insert(0, os.path.join(os.path.dirname(os.path.abspath(__file__)), \"plugins\"))\nLOCALE_PATHS.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"locale\"))\n\n_NAME = os.path.join(DATA_PATH, \"%s/%s.db\" % (PRJ_NAME, PRJ_NAME))\n\nDATABASES = {\n    'default':  {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': _NAME,\n    },\n}\n\nif setup_databases:\n    db_setup = setup_databases(PRJ_NAME)\n    db_local = DATABASES['default']\n\n    DATABASES = db_setup[0]\n    DATABASES['local'] = db_local\n\n    if db_setup[1]:\n        AUTHENTICATION_BACKENDS = db_setup[1]\nelse:\n    if \"DATABASE_URL\" in os.environ:\n        db_url = os.environ[\"DATABASE_URL\"]\n        db_local = DATABASES['default']\n        DATABASES = {\n            'default': env.db(),\n        }\n        DATABASES['local'] = db_local\n\n{% if consumers %}\nCHANNELS_URL_TAB += [ \n{% for consumer in consumers %} (URL_ROOT_PREFIX+\"{{consumer.0}}\", '{{consumer.1}}'),\n{% endfor %}]\n{% endif %}\n\ntry:\n    from settings_app_local import *\nexcept:\n    pass\n\nGEN_TIME = '{{gmtime}}'\n{% if offline_support %}OFFLINE_SUPPORT = True\n{% endif %}\nfor key, value in os.environ.items():\n    if key.startswith(\"PYTIGON_\"):\n        key2 = key[8:]\n        if key2 in globals():\n            globals()[key2] = type(globals()[key2])(value)\n        else:\n            globals()[key2] = value\n\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/settings_app.ihtml"
                },
                {
                    "content": "^^^\n{% load exfiltry %}\nfrom django.utils.translation import gettext_lazy as _\n\nModuleTitle = _('{{app.module_title}}')\nTitle = _('{{app.title}}')\nPerms = {{app.perms|safe}}\nIndex = '{{app.index}}'\nUrls  = ({% for item in app.schappmenu_set.all %}\n    ('{{item.clean_url}}{{item.get_url_type_ext}}',_('{{item.name}}'),{{item.get_perms|safe}},\"\"\"{{item.get_icon|none_to_empty|safe}}{% if item.not_standard_icon_size %}?size={{item.icon_size}}{% endif %}\"\"\"),{% endfor %}\n)\nUserParam = {{user_param|safe}}\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/app_init.ihtml"
                },
                {
                    "content": "^^^APPS=[{% for app in app_names %}'{{app}}',{% endfor %}{% for app in prj.get_ext_pytigon_apps%}'{{app|safe }}',{% endfor %}]\n^^^APPS_EXT=[{% for app in prj.get_ext_apps%}'{{app|safe }}',{% endfor %}]\nPUBLIC = {% if prj.public %}True{% else %}False{% endif %}\nMAIN_PRJ = {% if prj.main %}True{% else %}False{% endif %}\n{{ prj.user_param|safe }}",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/apps.ihtml"
                },
                {
                    "content": "^^^#!/usr/bin/python\n{% load exfiltry %}\n# -*- coding: utf-8 -*-\nimport os\nimport sys\nimport datetime\nimport json\nimport asyncio\n\nfrom channels.consumer import AsyncConsumer, SyncConsumer\n\nfrom channels.generic.websocket import WebsocketConsumer, AsyncWebsocketConsumer, \\\n    JsonWebsocketConsumer, AsyncJsonWebsocketConsumer\n\nfrom channels.generic.http import AsyncHttpConsumer\n\n{% if app.consumer_code %}{{app.consumer_code|first_section|safe}} {% endif %}\n\n{% for consumer in consumers %}{% if consumer.consumer_code and consumer.consumer_code != '' %}\n{% if consumer.consumer_type == 'WebsocketConsumer' %}class {{consumer.name}}(WebsocketConsumer):\n{% endif %}{% if consumer.consumer_type == 'AsyncWebsocketConsumer' %}class {{consumer.name}}(AsyncWebsocketConsumer):\n{% endif %}{% if consumer.consumer_type == 'JsonWebsocketConsumer' %}class {{consumer.name}}(JsonWebsocketConsumer):\n{% endif %}{% if consumer.consumer_type == 'AsyncJsonWebsocketConsumer' %}class {{consumer.name}}(AsyncJsonWebsocketConsumer):\n{% endif %}{% if consumer.consumer_type == 'AsyncHttpConsumer' %}class {{consumer.name}}(AsyncHttpConsumer):\n{% endif %}{% if consumer.consumer_type == 'AsyncConsumer' %}class {{consumer.name}}(AsyncConsumer):\n{% endif %}{% if consumer.consumer_type == 'SyncConsumer' %}class {{consumer.name}}(SyncConsumer):\n{% endif %}{% if view.doc %}\"\"\"{% for line in view.doc.splitlines %}\n    {{line|safe}}{% endfor %}\n    \"\"\"{% endif %}\n    {% for line in consumer.consumer_code.splitlines %}{{line|safe}}\n    {% endfor %}\n{% endif %}{% endfor %}\n\n{% if app.consumer_code %}{{app.consumer_code|second_section|safe}} {% endif %}\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/consumers.ihtml"
                },
                {
                    "content": "^^^\n\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/init.ihtml"
                },
                {
                    "content": "^^^\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\nThis version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below.\n\n0. Additional Definitions.\n\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser General Public License, and the \"GNU GPL\" refers to version 3 of the GNU General Public License.\n\n\"The Library\" refers to a covered work governed by this License, other than an Application or a Combined Work as defined below.\n\nAn \"Application\" is any work that makes use of an interface provided by the Library, but which is not otherwise based on the Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library.\n\nA \"Combined Work\" is a work produced by combining or linking an Application with the Library.  The particular version of the Library with which the Combined Work was made is also called the \"Linked Version\".\n\nThe \"Minimal Corresponding Source\" for a Combined Work means the Corresponding Source for the Combined Work, excluding any source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not on the Linked Version.\n\nThe \"Corresponding Application Code\" for a Combined Work means the object code and/or source code for the Application, including any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the System Libraries of the Combined Work.\n\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL.\n\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied by an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version:\n\n     a) under this License, provided that you make a good faith effort to ensure that, in the event an Application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or\n\n     b) under the GNU GPL, with none of the additional permissions of this License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a header file that is part of the Library.  You may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following:\n\n     a) Give prominent notice with each copy of the object code that the Library is used in it and that the Library and its use are covered by this License.\n\n     b) Accompany the object code with a copy of the GNU GPL and this license document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following:\n\n     a) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License.\n\n     b) Accompany the Combined Work with a copy of the GNU GPL and this license document.\n\n     c) For a Combined Work that displays copyright notices during execution, include the copyright notice for the Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license document.\n\n     d) Do one of the following:\n\n           0) Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.\n\n          1) Use a suitable shared library mechanism for linking with the Library.  A suitable mechanism is one that (a) uses at run time a copy of the Library already present on the user's computer system, and (b) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version.\n\n     e) Provide Installation Information, but only if you would otherwise be required to provide such information under section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or relinking the Application with a modified version of the Linked Version. (If you use option 4d0, the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code. If you use option 4d1, you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License, and convey such a combined library under terms of your choice, if you do both of the following:\n\n     a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities, conveyed under the terms of this License.\n\n     b) Give prominent notice with the combined library that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Library as you received it specifies that a certain numbered version of the GNU Lesser General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the Free Software Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General Public License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation.\n\nIf the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the Library.\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/license.ihtml"
                },
                {
                    "content": "^^^{% load exfiltry %}\n# -*- coding: utf-8 -*-\n\nimport django\nfrom django.db import models\n\nfrom pytigon_lib.schdjangoext.fields import *\nfrom pytigon_lib.schdjangoext.models import *\nimport pytigon_lib.schdjangoext.fields as ext_models\nfrom pytigon_lib.schtools import schjson\n\nfrom django.utils.translation import gettext_lazy as _\nfrom django.contrib import admin\n\nimport os, os.path\nimport sys\nfrom pytigon_lib.schhtml.htmltools import superstrip\n\n{% for app_item in prj.get_ext_apps_without_pack %}\nfrom {{app_item}}.models import *\n{% endfor %}\n\n\n{{app.model_code|first_section|safe}}\n\n{% if choices %}\n{% for choice in choices %}\n{{choice.name}} = [\n    {% for item in choice.schchoiceitem_set.all %}(\"{{item.name|safe}}\",\"{{item.value|safe}}\"),\n    {% endfor %}\n    ]\n{% endfor %}\n{% endif %}\n\n{% for table in tables %}\nclass {{table.name}}({%if table.base_table %}{{table.get_base_table}}{%else%}{%if table.proxy_model %}{{table.proxy_model}}{% else %} models.Model{% endif %}{%endif%}):\n    {% if table.doc %}\"\"\"{% for line in table.doc.splitlines %}\n    {{line|safe}}{% endfor %}\n    \"\"\"{% endif %}\n    class Meta:\n        verbose_name = _(\"{{table.verbose_name|safe}}\")\n        verbose_name_plural = _(\"{{table.verbose_name_plural|safe}}\")\n        default_permissions = ('add', 'change', 'delete', 'list')\n        app_label = '{{app.name}}'\n\n\n        {% if table.ordering != '-' %}{% if table.ordering %}ordering = {{table.ordering|safe}}{% else %}ordering = ['id']{% endif %}{% endif %}\n        {% if table.metaclass_code %}\n        {% for line in table.metaclass_code.splitlines %}{{line|safe}}\n        {% endfor %}\n        {% endif %}\n        {% if table.proxy_model %}proxy=True{% endif %}\n    {% if not table.proxy_model %}{% if table.tree_tab == 1 %}\n    {% if not table.fields_have_parent %}parent = ext_models.PtigTreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children'){% endif %}\n    {% endif %}\n\n    {% for field in table.schfield_set.all %}{{field.as_declaration|safe}}\n    {% endfor %}\n\n    {% for line in table.table_code.splitlines %}{{line|safe}}\n    {% endfor %}{% endif %}\n{% if not 'abstract' in table.metaclass_code %}admin.site.register({{table.name}}){% endif %}\n\n{% endfor %}\n\n{{app.model_code|second_section|safe}}\n\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/models.ihtml"
                },
                {
                    "content": "{# -*- coding: utf-8 -*- #}\n% extends \"forms/user_tab.html\"\n\n% load exfiltry\n% load exsyntax\n\n\n%% all\n    %with show_title_bar=1 title='<<form_title>>'\n        {{ block.super }}\n\n\n%% user_header\n    th...<<col_name1>>\n    th...<<col_name2>>\n    th...<<col_name3>>\n\n\n%% user_row\n    tr\n        td... {{object.0}}\n        td align=right... {{object.1|floatnullformat}}\n        td align=right... {{object.2|to_int}}\n\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/new_generic_form_template.ihtml"
                },
                {
                    "content": "% extends \"form.html\"\n\n% load exfiltry\n% load exsyntax\n\n%% all\n    % with table_type='datatable':\n        {% templatetag openblock %} block.super {% templatetag closeblock %}\n\n%% scroll\n\n%% list_content_actions\n    % new_row \"<<new_row_title>>\"\n    % list_action \"<<action>>\" \"<<action_description>>\"\n\n%% list_row_header\n    {% for field in template.get_table_fields %}th..._({{field.description}})\n    {% endfor %}\n\n%% list_row\n    {% for field in template.get_table_fields %}td...{% templatetag openblock %} object.{{field.name}} {% templatetag closeblock %}\n    {% endfor %}\n\n%% list_row_actions\n    % row_actions:\n        .edit\n        .delete\n        {% for field_name in template.get_table_rel_fields %}.field_list/{{field_name}},<<description>\n        {% endfor %}{% for field_name in template.get_edit_table_fields %}.field_edit/{{field_name}},<description>\n        {% endfor %}.<<action_name>>,<<description>>\n\n%% row_edit\n    % form:\n        {% for field in template.get_table_fields %}\"{{field.name}}\"{% if not forloop.last %},{% endif %}{% endfor %}\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/new_generic_tbl_template.ihtml"
                },
                {
                    "content": "{# -*- coding: utf-8 -*- #}\n%extends \"forms/tree.html\"\n\n%load exfiltry\n%load exsyntax\n\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"<<name1>>\": \"<<image_path1>>\",\n                    \"<<name2>>\": \"<<image_path2>>\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\n\n%% all\n    %with form_width=800 form_height=600  scroll_table=True title=\"<<form_title>>\" no_id=True\n        {{ block.super }}\n\n%% list_row_header\n    th...+ \n    th...<<col_name_1>>\n    th...<<col_name_2>>\n\n%% list_tree_row\n        td\n            img src={{ STATIC_URL }}icons/struct/elm_{{object.type}}.png\n        td...{{object.<<field_name>>}}\n        td...{{object.<<field_name>>}}\n\n\n%% row_edit\n    % if form_add\n        % form:\n            .Hidden('parent', '{{ object.parent.id }}' ),\n            \"<<field_1>>\", \"<<field_2>>\"\n    % else\n        % form:\n            \"parent\",\n            .Hidden('<<field_1', '{{ object.<<field_1>> }}')\n            \"<<field_2>>\"\n\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/new_generic_tree_template.ihtml"
                },
                {
                    "content": "^^^\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/readme.ihtml"
                },
                {
                    "content": "^^^{# -*- coding: utf-8 -*- #}\n\n%extends 'template/schweb_base.html'|translate:lang\n{% load exfiltry %}{% load exsyntax %}\n\n% load exfiltry\n% load exsyntax\n% load static\n\n%% indexhead\n    table style=width: 100%;,,,border=1\n        % if user.is_authenticated\n            [ login | 0 ]\n        % else\n            [ login | 1 ]\n        [ autologin | 1 ]\n        [ csrf_token | {% spec '[' %}csrf_token{% spec ']' %} ]\n        [ riot_elements | {% for pos in riot_elements%}{{pos}};{% endfor %}]\n        [ gui_style | {{prj.gui_type}}({{prj.gui_elements}}) ]\n        [ hybrid | {%if prj.is_hybrid %}1{%else%}0{%endif%} ]\n        [ title  | {{prj.title}} ]\n        [ start_page | {{prj.start_page}} ]\n        [ plugins | {{prj.plugins}} ]\n\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/schweb.ihtml"
                },
                {
                    "content": "^^^#!/usr/bin/python\n{% load exfiltry %}\n# -*- coding: utf-8 -*-\n\nfrom django.utils.translation import gettext_lazy as _\n\nimport os\nimport sys\nimport datetime\nimport time\nfrom queue import Empty\nfrom pytigon_lib.schtasks.publish import publish\n\n\n{% if app.tasks_code %}{{app.tasks_code|first_section|safe}} {% endif %}\n\n{% for task in tasks %}\n{% if task.publish %}@publish({% if task.publish_group %}\"{{ task.publish_group }}\"{% endif %})\n{% endif %}def {{task.name}}(cproxy=None, **kwargs):\n    {% if task.doc %}\"\"\"{% for line in task.doc.splitlines %}\n    {{line|safe}}{% endfor %}\n    \"\"\"{% endif %}\n    {% for line in task.code.splitlines %}{{line|safe}}\n    {% endfor %}\n{% endfor %}\n\n{% if app.tasks_code %}{{app.tasks_code|second_section|safe}} {% endif %}\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/tasks.ihtml"
                },
                {
                    "content": "^^^## -- coding: utf-8 --\n{% load exfiltry %}\nfrom django.urls import path, re_path, include, reverse\nfrom django.utils.translation import gettext_lazy as _\nfrom pytigon_lib.schviews import generic_table_start, gen_tab_action, gen_row_action\nfrom django.views.generic import TemplateView\nfrom . import views\n\n\nurlpatterns = [\n    {% for view in views %}{{view.get_url|safe}},\n    {% endfor %}{% for template in templates %}{% if template.direct_to_template %} {{template.get_url|safe}}, {% endif %}\n    {% endfor %}\n    {% for form in forms %}{% if not form.name|is_private %}\n    path('form/{{form.name}}/', views.view_{{form.name|lower}}, {}),{% endif %}{% endfor %}\n]\n\ngen = generic_table_start(urlpatterns, '{{app.name}}', views)\n{% if app.urls_code %}{{app.urls_code|safe}}{% endif %}\n{% for table in tables %}{% if table.generic %}\ngen.standard('{{table.name}}', _('{{table.verbose_name}}'), _('{{table.verbose_name_plural}}')){% endif %}{% endfor %}\n{% for gfield in gfields %}{% if gfield.rel_to == \"'self'\" %}\n{% else %}\ngen.for_field('{{gfield.get_rel_to|safe}}', '{{gfield.get_relate_set_name|safe}}', _('{{gfield.parent.verbose_name}}'), _('{{gfield.parent.verbose_name_plural}}')){% endif %}{% endfor %}\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/urls.ihtml"
                },
                {
                    "content": "^^^#!/usr/bin/python\n{% load exfiltry %}\n# -*- coding: utf-8 -*-\nfrom django.http import HttpResponseRedirect, HttpResponse\nfrom django.shortcuts import render, redirect, reverse\nfrom django import forms\nfrom django.template.loader import render_to_string\nfrom django.template import Context, Template\nfrom django.template import RequestContext\nfrom django.conf import settings\nfrom django.views.generic import TemplateView\n\nfrom pytigon_lib.schviews.form_fun import form_with_perms\nfrom pytigon_lib.schviews.viewtools import dict_to_template, dict_to_odf, dict_to_pdf, dict_to_json, dict_to_xml\nfrom pytigon_lib.schviews.viewtools import render_to_response\nfrom pytigon_lib.schdjangoext.tools import make_href\nfrom pytigon_lib.schdjangoext import formfields as ext_form_fields\nfrom pytigon_lib.schviews import actions\n\nfrom django.utils.translation import gettext_lazy as _\n\nfrom . import models\nimport os\nimport sys\nimport datetime\n\n{% if app.view_code %}{{app.view_code|first_section|safe}} {% endif %}\n\n{% if forms %}PFORM = form_with_perms('{{app.name}}') {% endif %}\n\n{% for form in forms %}\nclass {{form.name}}(forms.Form):\n    {% for field in form.schformfield_set.all %}{{field.as_declaration|safe}}\n    {% endfor %}\n    {% if form.process_code %}{% if form.asynchronous %}async {% endif %}def process(self, request, queryset=None):\n    {% for line in form.process_code.splitlines %}\n        {{line|safe}}{% endfor %}{% endif %}\n    {% if form.end_class_code and form.end_class_code != '' %}{% for line in form.end_class_code.splitlines %}\n    {{ line|safe }}{% endfor %}{% endif %}\n{% if form.end_code and form.end_code != '' %}{{form.end_code|safe}}{% endif %}\ndef view_{{form.name|lower}}(request, *argi, **argv):\n    return PFORM(request, {{form.name}}, '{{form.parent.name}}/form{{form.name|lower}}.html', {})\n\n{% endfor %}\n{% for view in views %}{% if view.view_code and view.view_code != '' %}\n{{view.view_code_start}}\n{% if view.ret_type == 'T' %}@dict_to_template('{{view.parent.name}}/v_{{view.name|lower}}.html'){% endif %}\n{% if view.ret_type == 'O' %}@dict_to_odf('{{view.parent.name}}/v_{{view.name|lower}}.ods'){% endif %}\n{% if view.ret_type == 'P' %}@dict_to_pdf('{{view.parent.name}}/v_{{view.name|lower}}_pdf.html'){% endif %}\n{% if view.ret_type == 'J' %}@dict_to_json{% endif %}\n{% if view.ret_type == 'X' %}@dict_to_xml{% endif %}\n{% if view.asynchronous %}async {% endif %}def {{view.get_name}}(request{% if view.param %}, {{view.param}}{% endif %}):\n    {% if view.doc %}\"\"\"{% for line in view.doc.splitlines %}\n    {{line|safe}}{% endfor %}\n    \"\"\"{% endif %}\n    {% for line in view.view_code.splitlines %}{{line|safe}}\n    {% endfor %}\n{{view.view_code_end}}\n{% endif %}{% endfor %}\n\n{% if app.view_code %}{{app.view_code|second_section|safe}} {% endif %}\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/views.ihtml"
                },
                {
                    "content": "^^^\nfrom . import models\nfrom pytigon_lib.schdjangoext.graphql import add_graphql_to_class\n\ndef extend_query(query_class):\n    for model_name in dir(models):\n        model = getattr(models, model_name)\n        if hasattr(model, \"_meta\") and hasattr(model, \"filter_fields\"):\n            add_graphql_to_class(model, getattr(model, \"filter_fields\"), query_class)\n    return query_class\n\ndef extend_mutation(mutation_class):\n    return mutation_class\n    ",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/schema.ihtml"
                },
                {
                    "content": "FIELD_LIST_TEMPLATE = \"\"\"field_list/{{choice.0}},{{choice.1}}{% if choice.2 or choice.3 %},icon_name={{choice.2}}{% if choice.3 %}/{{choice.3}}{% endif %}{% endif %}{% if choice.4 %},target='{{choice.4}}'{% endif %}\"\"\"\nFIELD_EDIT_TEMPLATE = \"\"\"field_edit/{{choice.0}},{{choice.1}}{% if choice.2%},icon_name={{choice.2}}{% endif %}{% if choice.3 %}/{{choice.3}}{% endif %}{% if choice.4 %},target='{{choice.4}}'{% endif %}\"\"\"\nVIEW_ROW_TEMPLATE = \"\"\"%view_row object{% if choice.1%},icon_name={{choice.1}}{% endif %}{% if choice.2 %}/{{choice.2}}{% endif % }\"\"\"\nNEW_ROW_TEMPLATE = \"\"\"% {% if choice.1 == 'NO'%}new_row{% else %}new_row_inline{% endif %} {% choice.0 %}{% if choice.2%},icon_name={{choice.2}}{% endif %}{% if choice.3 %}/{{choice.3}}{% endif %}\"\"\"\nACTION_TEMPLATE = \"\"\"action {{choice.0}}{% if choice.1 %},title={{ choice.1 }}{%endif%}{% if choice.2 %},icon_name={{ choice.2 }}{%endif%}{% if choice.3 %},target={{ choice.3 }}{%endif%}{% if choice.4 %},attrs={{ choice.4 }}{%endif%}{% if choice.5 %},tag_class={{ choice.5 }}{%endif%}{% if choice.6 %},url={{ choice.6 }}{%endif%}\"\"\"\nROW_RELATED_LIST_TEMPLATE = \"\"\"% row_related_list \"{{choice.0}}\" title=\"{{choice.1}}\" filter=\"{{choice.2}}\"{% if choice.3 %} icon_name=\"{{ choice.3 }}\"{% endif %}\"\"\"\n\nALL_TEMPLATE =\"\"\"\n%% all\n    % with {% if choice.0 %}title='{{choice.0}}{% endif %} {% if choice.1 %}table_type='{{choice.1}}'{% endif %} {% if choice.2 %}form_width={{choice.2}}{% endif %} {% if choice.3 %}form_height={{choice.3}}{% endif %}:\n        {{ block.super }}\n\"\"\"\n\nLIST_ROW_ATTR_TEMPLATE = \"\"\"\n%% list_row_attr\n    {% templatetag openblock %} if object.<<condition>> {% templatetag closeblock %}class=danger{% templatetag openblock %} endif {% templatetag closeblock %}\n\"\"\"\n\nID_EXTRA_TEMPLATE = \"\"\"\n%% id_extra\n    % list_sublist app=\"\" table_name=\"\" filter=\"\" title=\"\" icon_name=\"fa fa-lg fa-caret-down\" target=\"\" attrs=\"\" tag_class=\"\" url=\"\" action=\"field_list\"\n    {{ block.super }}\n\"\"\"\n\nDIALOG_TYPE_TEMPLATE = \"\"\"\n%% dialog_type\n    .{{choice.0}}\n\"\"\"\n\nSCROLL_TEMPLATE = \"\"\"\n%% scroll\n\"\"\"\n\nPYTHONCODE_TEMPLATE = \"\"\"\n%% pythoncode\n    script language=python\n        def signal_from_child(self, child, signal):\n            if signal=='set_bitmap_list':\n                bitmaps = {\n                    \"<<name1>>\": \"<<image_path1>>\",\n                }\n                child.set_bitmaps(bitmaps)\n\n        def filter_url(self, target, href):\n            return href\n\"\"\"\n\nMOVE_ROWS_TEMPLATE = \"\"\"\n% if not forloop.first:\n    % row_actions:...field_up,Move up\n% if not forloop.last:\n    % row_actions:...field_down,Move down\n\"\"\"\n\nACTIONS =  {\n    'form': {\n        'template': \"\"\"% form:\"\"\",\n    },\n    'two_columns_form': {\n        'template': \"\"\"% form \"^/12:6:6\":\"\"\",\n    },\n    'three_columns_form': {\n        'template': \"\"\"% form \"^/12:4:4\":\"\"\",\n    },\n    'advanced_form': {\n        'title': 'Field parameters',\n        'choices': [\n            {'title': 'default label format [sm:md:lg]', 'values': [ '^', '12:12:12', '12:3:3', '12:4:4', '12:6:6']},\n            {'title': 'default field format [sm:md:lg]', 'values': [ '12:12:12', '12:6:6', '12:4:4', '12:3:3', '12:1:1']},\n        ],\n        'template':  \"\"\"% form {% choice.0 %}/{% choice.1 %}:\"\"\",\n    },\n    'form_field': {\n        'title': 'Field parameters',\n        'choices': [\n            {'title': 'name', 'values': [], 'source_of_values': 'object_fields'},\n            {'title': 'hidden', 'values': [ 'NO', 'YES'],},\n        ],\n        'template': \"\"\"{{choice.0}}{% if choice.1==\"YES\" %}:!{% endif %}\"\"\",\n    },\n    'field': {\n        'title': 'Field parameters',\n        'choices': [\n            {'title': 'name', 'values': [], 'source_of_values': 'object_fields'},\n            {'title': 'label format [sm:md:lg]', 'values': [ '^', '12:12:12', '12:3:3', '12:4:4', '12:6:6']},\n            {'title': 'field format [sm:md:lg]', 'values': [ '12:12:12', '12:6:6', '12:4:4', '12:3:3', '12:1:1']},\n        ],\n        'template': \"\"\"% form {{choice.0}} {{choice.1 }}/{{ choice.2 }}\"\"\",\n    },\n    'field_list': {\n        'title': 'Field parameters',\n        'choices': [\n            {'title': 'related field name', 'values': [], 'source_of_values': 'relfields'},\n            {'title': 'title', 'values': []},\n            {'title': 'button icon name', 'values': []},\n            {'title': 'list icon name', 'values': []},\n            {'title': 'target', 'values': ['_inline', '_parent', 'popup',] },\n        ],\n        'template': FIELD_LIST_TEMPLATE,\n    },\n    'field_edit': {\n        'title': 'Field parameters',\n        'choices': [\n            {'title': 'edited field name', 'values': [], 'source_of_values': 'txtfields'},\n            {'title': 'title', 'values': []},\n            {'title': 'button icon name', 'values': []},\n            {'title': 'list icon name', 'values': []},\n            {'title': 'target', 'values': ['_parent', '_inline', 'popup',] },\n        ],\n        'template': FIELD_EDIT_TEMPLATE,\n    },\n    'action': {\n        'title': 'Action parameters',\n        'choices': [\n            {'title': 'action', 'values': []},\n            {'title': 'title', 'values': []},\n            {'title': 'button icon name', 'values': []},\n            {'title': 'list icon name', 'values': []},\n            {'title': 'target', 'values': [\"_blank\", \"_parent\", \"_top\", \"_self\", \"popup\", \"popup_edit\", \"popup_info\", \"popup_delete\", \"inline_edit\", \"inline_info\", \"inline_delete\", \"inline\", \"none\", \"refresh_obj\", \"refresh_page\", \"refresh_app\",]},\n            {'title': 'attrs', 'values': [ \"+disabled='disabled'\", \"data-inline-position='^tr:after'\"] },\n            {'title': 'tag_class', 'values': ['+btn-danger', '+<<class1>> <<class2>>', '<<class>>',]},\n            {'title': 'url', 'values': []},\n        ],\n        'template': ACTION_TEMPLATE,\n    },\n    'row_related_list': {\n        'title': 'Action parameters',\n        'choices': [\n            {'title': 'application/table', 'values': [], 'source_of_values': 'tables'},\n            {'title': 'title', 'values': []},\n            {'title': 'filter', 'values': []},\n            {'title': 'icon name', 'values': []},\n        ],\n        'template': ROW_RELATED_LIST_TEMPLATE,\n    },\n    'view_row': {\n        'title': 'Parameters',\n        'choices': [\n            {'title': 'title', 'values': []},\n            {'title': 'button icon name', 'values': []},\n            {'title': 'list icon name', 'values': []},\n        ],\n        'template': VIEW_ROW_TEMPLATE,\n    },\n    'new_row': {\n        'title': 'Parameters',\n        'choices': [\n            {'title': 'title', 'values': [], },\n            {'title': 'inline', 'values': ['NO', 'YES'], },\n            {'title': 'button icon name', 'values': []},\n            {'title': 'list icon name', 'values': []},\n        ],\n        'template': NEW_ROW_TEMPLATE,\n    },\n    'list_action': {\n        'title': 'Parameters',\n        'choices': [\n            {'title': 'title', 'values': [], },\n            {'title': 'inline', 'values': ['NO', 'YES'], },\n            {'title': 'button icon name', 'values': []},\n            {'title': 'list icon name', 'values': []},\n        ],\n        'template': NEW_ROW_TEMPLATE,\n    },\n    'permision': {\n       'title': 'Parameters',\n       'choices': [\n           {'title': 'application/permission', 'values': [], 'source_of_values': 'permissions'},\n       ],\n       'template': \"\"\" perms.{{choice.0}} \"\"\",\n    },\n    'user_in_group': {\n       'title': 'Parameters',\n       'choices': [\n           {'title': 'group', 'values': []},\n       ],\n       'template': \"\"\"request.user|user_in_group:'{{choice.0}}'\"\"\",\n    },\n    'all': {\n        'title': 'Block parameters',\n        'choices': [\n            { 'title': 'title', 'values': [] },\n            { 'title': 'table type', 'values': [ 'datatable',] },\n            { 'title': 'form width', 'values': [] },\n            { 'title': 'form height', 'values': [] },\n        ],\n        'template': ALL_TEMPLATE,\n    },\n    'list_row_attr': {\n        'template': LIST_ROW_ATTR_TEMPLATE,\n    },\n    'id_extra': {\n        'template': ID_EXTRA_TEMPLATE,\n    },\n    'dialog_type': {\n        'title': 'Block parameters',\n        'choices': [\n            {'title': 'type', 'values': [ 'modal-lg', 'modal-sm', ]},\n        ],\n        'template': DIALOG_TYPE_TEMPLATE,\n    },\n    'scroll': {\n        'template': SCROLL_TEMPLATE,\n    },\n    'pythoncode': {\n        'template': PYTHONCODE_TEMPLATE,\n    },\n    'move_rows': {\n        'template': MOVE_ROWS_TEMPLATE,\n    },\n}\n",
                    "file_type": "c",
                    "name": "./autocomplete.py"
                },
                {
                    "content": "^^^\nMetadata-Version: 2.1\nName: {{name}}\nVersion: {{version}}\nSummary: Pytigon library\nLicense: LGPLv3\nPlatform: UNKNOWN\nClassifier: Development Status :: 4 - Beta\nClassifier: Environment :: Web Environment\nClassifier: Intended Audience :: Developers\nClassifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)\nClassifier: Operating System :: OS Independent\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.7\nClassifier: Programming Language :: Python :: 3.8\nClassifier: Programming Language :: Python :: 3.9\nClassifier: Programming Language :: Python :: Implementation :: PyPy\nClassifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content\nClassifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application\nClassifier: Topic :: Software Development :: Libraries :: Application Frameworks\nClassifier: Topic :: Software Development :: Libraries :: Python Modules\nRequires-Python: >=3\nLicense-File: LICENSE\n",
                    "file_type": "c",
                    "name": "../templates_src/schbuilder/wzr/METADATA.ihtml"
                }
            ]
        ]
    ],
    [
        {
            "code": "TEMPLATE=\"\"\"\ndiv\n    div\n        table\n            tr\n            td...Hello\n\"\"\"\n",
            "doc": "\r\n",
            "name": "test",
            "type": "R"
        },
        {
            "code": "",
            "doc": null,
            "name": "style",
            "type": "C"
        },
        {
            "code": "",
            "doc": null,
            "name": "test_javascript",
            "type": "J"
        },
        {
            "code": "class Test:\n    def __init__(self):\n        self.value = 0\n        \n    def get_value(self):\n        return self.value\n\n",
            "doc": null,
            "name": "test_python",
            "type": "P"
        },
        {
            "code": "test\n    width: 100%",
            "doc": null,
            "name": "test_icss",
            "type": "I"
        },
        {
            "code": "console.log(\"Hello world\");",
            "doc": null,
            "name": "test/test_user.js",
            "type": "U"
        },
        {
            "code": "print(\"Hello world!\")",
            "doc": null,
            "name": "test/test.vue",
            "type": "U"
        },
        {
            "code": "CACHE_NAME = 'PYTIGON_{{appset}}';\n\n// Base Service Worker implementation.  To use your own Service Worker, set the PWA_SERVICE_WORKER_PATH variable in settings.py\n\nvar staticCacheName = \"django-pwa-v\" + new Date().getTime();\n\nvar filesToCache = [\n    '/offline/',\n    '/static/css/django-pwa-app.css',\n    '/static/images/pytigon.png',\n];\n\n\n// Cache on install\nself.addEventListener(\"install\", event => {\n    this.skipWaiting();\n    event.waitUntil(\n        caches.open(staticCacheName)\n            .then(cache => {\n                var files_to_cache = [];\n                var l = location.pathname.split('/')\n                if (l.length>2) {\n                    for(item of filesToCache) {\n                        files_to_cache.push(\"/\"+l[1]+item)\n                    }\n                }\n                else {\n                    files_to_cache = filesToCache;\n                }\n                return cache.addAll(files_to_cache);\n            })\n    )\n});\n\n\n// Clear cache on activate\nself.addEventListener('activate', event => {\n    event.waitUntil(\n        caches.keys().then(cacheNames => {\n            return Promise.all(\n                cacheNames\n                    .filter(cacheName => (cacheName.startsWith(\"django-pwa-\")))\n                    .filter(cacheName => (cacheName !== staticCacheName))\n                    .map(cacheName => caches.delete(cacheName))\n            );\n        })\n    );\n});\n\n// Serve from Cache\nself.addEventListener(\"fetch\", event => {\n    event.respondWith(\n        caches.match(event.request)\n            .then(response => {\n                return response || fetch(event.request);\n            })\n            .catch(() => {\n                return caches.match('/offline/');\n            })\n    )\n});\n",
            "doc": null,
            "name": "sw.js",
            "type": "U"
        },
        {
            "code": "username: \"\",\ntheme: \"\"",
            "doc": null,
            "name": "components_init",
            "type": "G"
        }
    ]
]