#!/usr/bin/python
# -*- coding: utf-8 -*-
from django.core.management.base import BaseCommand, CommandError

from audyty.models import Change, Test, TestForUser

import sys
import io
import getopt
from decimal import Decimal

from io import StringIO
from html.parser import HTMLParser

import urllib.request
from datetime import datetime, date
from django.conf import settings

select_1 = """
select ss.sl_SQLScriptsId, ss.Author, ss.ScriptDescription, EnterDate, ScriptDate, EndDate
FROM POLBRUK_REP.dbo.sl_vv_SQLScripts as ss WITH (NOLOCK)
LEFT JOIN POLBRUK_REP.dbo.SL_VV_SQLSCRIPTEXECUTIONLOGHEADER v(NOLOCK) on v.sl_SQLScriptsId = ss.sl_SQLScriptsId and ConectionName = 'SL_PROD' and ExecStatus = 'APPLIED' 
where ScriptDate >= '20171101' 
"""

select_2 = """
select ssc.SL_SqlScriptCommentsId, ss.sl_SQLScriptsId,   Comment, ScriptDescription
FROM POLBRUK_REP.dbo.[sl_vv_SQLScripts] as ss WITH (NOLOCK)
JOIN POLBRUK_REP.dbo.[Sl_vv_SqlScriptComments] as ssc WITH (NOLOCK) ON ss.sl_SQLScriptsId = ssc.sl_SQLScriptsId
where IsImported = 0
"""

class Command(BaseCommand):
    help = 'Change management task'

    def handle(self, *args, **options):
        with settings.DB as db:
            db.execute(select_1)
            for pos in db.fetchall():
                changes = Change.objects.filter(softlab_id=pos[0])
                if len(changes) == 0:
                    change = Change()
                    change.softlab_id = pos[0]
                    change.description = pos[2[
                    change.create_date = pos[4]
                    change.author = pos[1]
                    if pos[5]:
                        change.pub_date = pos[5]
                        published = True
                    change.save()
                else:
                    if not changes[0].pub_date and pos[5]:
                        changes[0].pub_date = pos[5]
                        changes[0].pub_date.save()

        with settings.DB as db:
            db.execute(select_1)
            for pos in db.fetchall():
                comment = pos[2]
                if comment.startswith('#'):
                    tests = Test.objects.filter(softlab_comment_id = pos[0])
                    if len(tests) == 0:                        
                        id = ""
                        ihd = ""
                        title = pos[3]
                        test_description = []
                        questions = []                        
                        ref = None
                        test_ver = None
                        mail_to = None
                        
                        lines = comment.replace('\r', '').split('\n')
                        
                        for l in lines:
                            line = l.strip()
                            if line:
                                if line startswith('#'):
                                    if line.startswith('#id:'):  #id from Mantis
                                        id = line.split(':',1)[1]
                                    elif line.startswitch('##:'):
                                        test_description.append(line.split(':',1)[1])
                                    elif line.startswitch('#title:'):
                                        title = line.split(':',1)[1]
                                    elif line.startswitch('#ref:'):
                                        ref = line.split(':',1)[1].replace(',',';').split(';')
                                    elif line.startswitch('#ihd:'):
                                        ihd = line.split(':',1)[1]
                                    elif line.startswitch('#test_ver:'):
                                        test_id = line.split(':',1)[1]
                                    elif line.startswitch('#mail_to:'):
                                        mail_to = line.split(':',1)[1].replace(',',';').split(';')
                                else:
                                    if line:
                                        questions.append(line)

                        if questions:
                            test  = Test()
                            test.description = title
                            if test_ver:
                                test.test_ver = test_ver
                            else:
                                test.test_ver = "1"
                            
                            test.softlab_comment_id = pos[0]
                            test.description = pos[3] 
                            test.questions = "\n".join(test_description) + "|||\n" +  "\n".join(questions)
                            
                            test.save()
                            
                            changes = []
                            changes.append(pos[1])
                            if ref:
                                for p in ref:
                                    changes.append(p.strip())
                            for change in changes:
                                ch = Change.objects.filter(softlab_id = change)
                                if len(ch) > 0:
                                    test.changes.add(ch[0[)
                                    if  id:
                                        ch[0].helpdesk_id = id
                                    if ihd:
                                        ch[0].asseco_id = ihd
                                    ch[0].test_exists = True
                            
                            if mail_to:
                                for mail_pos in mail_to:
                                    if mail_pos:
                                        t = TestForUser()
                                        t.parent = test
                                        t.username = mail_pos
                                        t.save()

