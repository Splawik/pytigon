{"name": "XOrder", "app": "schdocuments", "group": null, "description": "Orders", "head_form": null, "head_template": null, "item_form": null, "item_template": null, "save_head_fun": null, "save_item_fun": null, "access_fun": null, "update_time": {"object": "datetime.datetime(2023, 11, 21, 15, 9, 11, 470626, tzinfo=datetime.timezone.utc)"}, "statuses": [{"order": 1, "name": "draft", "description": "Draft", "icon": "fa fa-unlock", "accept_proc": "def accept(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form):\n    return None", "undo_proc": "def undo(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form):\n    return None\n", "can_set_proc": "def can_set(request, doc_head):\n    return True if doc_head.status in (\"cancelled\", \"accepted\") else False\n", "can_undo_proc": "def can_undo(request, doc_head):\n    return False\n", "accept_form": null, "undo_form": null, "for_accept_template": null, "for_undo_template": null}, {"order": 2, "name": "accepted", "description": "Accepted", "icon": "fa fa-key", "accept_proc": "def accept(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form):\n    return None\n", "undo_proc": "def undo(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form):\n    return None\n", "can_set_proc": "def can_set(request, doc_head):\n    return True if doc_head.status in (\"\", \"edit\", \"draft\") else False\n", "can_undo_proc": "def can_undo(request, doc_head):\n    return True", "accept_form": null, "undo_form": null, "for_accept_template": null, "for_undo_template": null}, {"order": 3, "name": "during_payment", "description": "During payment", "icon": "fa fa-credit-card", "accept_proc": "import datetime\nfrom decimal import Decimal\nfrom payments import get_payment_model\n\ndef accept(request, doc_head, reg_status, doc_type, doc_reg, doc_status, form):\n    Payment = get_payment_model()\n    payment = Payment.objects.create(\n        parent=doc_head,\n        variant='default',\n        description='Book purchase',\n        total=Decimal(120),\n        tax=Decimal(20),\n        currency='USD',\n        delivery=Decimal(10),\n        billing_first_name='Sherlock',\n        billing_last_name='Holmes',\n        billing_address_1='221B Baker Street',\n        billing_address_2='',\n        billing_city='London',\n        billing_postcode='NW1 6XE',\n        billing_country_code='GB',\n        billing_country_area='Greater London',\n        customer_ip_address='127.0.0.1',\n    )\n    def callback():\n        nonlocal payment\n        return { \"redirect\": \"/schshop/payment_details/%d/\" % payment.id }\n\n    return { \"errors\": None, \"callback\": callback }\n    ", "undo_proc": null, "can_set_proc": "def can_set(request, doc_head):\n    return True if doc_head.status == \"accepted\" else False", "can_undo_proc": null, "accept_form": null, "undo_form": null, "for_accept_template": "{% load exfiltry %}\n{% load exsyntax %}\n\n{% action \"approve_status\"|append_str:\"/\"|append_str:row.name row.description row.icon target=\"_blank\" url=table_path|append_str:\"{id}/action/approve/\" %}\n", "for_undo_template": null}, {"order": 4, "name": "paid", "description": "Paid", "icon": "fa fa-money", "accept_proc": null, "undo_proc": null, "can_set_proc": "def can_set(request, doc_head):\n    return True if doc_head.status in (\"during_payment\", \"completed\") else False", "can_undo_proc": null, "accept_form": null, "undo_form": null, "for_accept_template": null, "for_undo_template": null}, {"order": 5, "name": "completed", "description": "Completed", "icon": "fa fa-lock", "accept_proc": null, "undo_proc": null, "can_set_proc": "def can_set(request, doc_head):\n    return True if doc_head.status == \"paid\" else False", "can_undo_proc": null, "accept_form": null, "undo_form": null, "for_accept_template": null, "for_undo_template": null}], "types": [{"name": "SO", "description": "Order created by the client", "correction": false, "head_form": null, "head_template": null, "item_form": null, "item_template": null, "save_head_fun": null, "save_item_fun": null, "doctype_status": "1", "update_time": {"object": "datetime.datetime(2023, 6, 18, 9, 23, 28, 898291, tzinfo=datetime.timezone.utc)"}}]}
